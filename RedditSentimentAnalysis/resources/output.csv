Subreddit,Title,URL,Score,No. of Comments,Author,CreationTime,Body,Comment Data
python,RenderCV: Create an elegant CV as PDF from YAML data,https://www.reddit.com/r/Python/comments/17d7tui/rendercv_create_an_elegant_cv_as_pdf_from_yaml/,118,28,egehancry,1697909578.0,"**Designing a CV** and **deciding the content of a CV** are two separate issues, and they should be treated separately.

Therefore, I created a Python application that renders your CV solely by looking at your content in YAML format. The design is taken care of RenderCV's themes (currently, there is only one theme), or you can use your custom theme with RenderCV.

RenderCV automatically:

* Validate all your input (check spelling errors, check if the dates are consistent, check if DOIs are valid, etc.)
* Creates a LaTeX file. While doing that, it takes care of stuff like:
   * Converting ISO dates to normal dates with proper abbreviations
   * Italicize the CV owner's name in the authors' list of a publication
   * Render markdown syntax if it's used inside YAML
   * etc.
* Renders the LaTeX file to a PDF, but it doesn't require any LaTeX installation.

The code is well tested (95% coverage) in Ubuntu, MacOS, and Windows and well documented.

**Github:** [https://github.com/sinaatalay/rendercv](https://github.com/sinaatalay/rendercv)

You can download an example of a CV from [here](https://github.com/sinaatalay/rendercv/blob/main/John_Doe_CV.pdf?raw=true) or see it below:

https://preview.redd.it/ydgqno72mlvb1.png?width=827&format=png&auto=webp&s=58fac7c908d57deb1bbe74e8a18601dfcbfad826

&#x200B;","[{'Subreddit': 'python', 'Reddit_Title': 'RenderCV: Create an elegant CV as PDF from YAML data', 'CommentAuthor': 'srTenorio', 'Comment': ""For me, someone familiar with LateX, this feels very redundant. It's super easy to go on overleaf, select one of their pretty CV templates and input all my data.\n\nBut maybe others not so familiar will find value in your project. Maybe I'm just not the target audience. Thanks for sharing anyhow.\n\nOn a side note, I hope you're indeed working at CERN. Spent there some very good years, it's a great place to be :)""}, {'Subreddit': 'python', 'Reddit_Title': 'RenderCV: Create an elegant CV as PDF from YAML data', 'CommentAuthor': 'go_fireworks', 'Comment': 'An image of the output would be beneficial'}, {'Subreddit': 'python', 'Reddit_Title': 'RenderCV: Create an elegant CV as PDF from YAML data', 'CommentAuthor': 'FrostmourNNe', 'Comment': 'Good job! Definitely will try it out'}, {'Subreddit': 'python', 'Reddit_Title': 'RenderCV: Create an elegant CV as PDF from YAML data', 'CommentAuthor': 'KingofGamesYami', 'Comment': 'Are there any plans to support the jsonresume standard?'}, {'Subreddit': 'python', 'Reddit_Title': 'RenderCV: Create an elegant CV as PDF from YAML data', 'CommentAuthor': 'Maricius', 'Comment': 'Very awsome, defenitly gona give it a go'}, {'Subreddit': 'python', 'Reddit_Title': 'RenderCV: Create an elegant CV as PDF from YAML data', 'CommentAuthor': 'WhyDoIHaveAnAccount9', 'Comment': 'Saving!'}, {'Subreddit': 'python', 'Reddit_Title': 'RenderCV: Create an elegant CV as PDF from YAML data', 'CommentAuthor': 'bachkhois', 'Comment': 'I used LaTeX to build my CV, but I think your idea of writing content in YAML (or better format) is better than writing LaTeX code.\nThe only missing is a theme that matches LaTeX quality.'}, {'Subreddit': 'python', 'Reddit_Title': 'RenderCV: Create an elegant CV as PDF from YAML data', 'CommentAuthor': 'MassiveDefender', 'Comment': 'This is cool!'}, {'Subreddit': 'python', 'Reddit_Title': 'RenderCV: Create an elegant CV as PDF from YAML data', 'CommentAuthor': 'opteryx5', 'Comment': 'Nice work! Although, in my mind, when I saw CV, I first thought of cross-validation, then went to computer vision, then finally landed on CV as in resum√© lol (all in the span of like a couple seconds). Too many CVs in this field! ü§£'}, {'Subreddit': 'python', 'Reddit_Title': 'RenderCV: Create an elegant CV as PDF from YAML data', 'CommentAuthor': 'MountainSalamander33', 'Comment': 'Nice project! I will definitely use it!\n\nEdit: I think the end user (like me) would not feel safe to download binaries from an unknown source. You should add an option to the user not to download any binaries and install Latex from the official repo.'}, {'Subreddit': 'python', 'Reddit_Title': 'RenderCV: Create an elegant CV as PDF from YAML data', 'CommentAuthor': 'miheishe', 'Comment': 'Maybe better use jinja2 templates instead of yaml?'}]"
python,When to reconsider using Pandas for data processing,https://www.reddit.com/r/Python/comments/16i3g8k/when_to_reconsider_using_pandas_for_data/,27,31,micropeenandproud,1694650412.0,"What advice do you guys have on when and when *not* to use Pandas for data processing?

And based on my experience, does it sound like I'm probably just implementing Pandas poorly? (I tried to use Pandas' Dataframe methods to do everything, to avoid me doing anything stupidly inefficiently). Or do these experiences match what you'd expect.

Based on my experiences, I'm currently considering building a small library built around numpy for use in all my projects, for basic filtering, sorting, inserting, etc... Is that a dumb idea?

&#x200B;

**My experience that prompted this question:**

I recently set out to build a library for reading in CSVs, categorising them based on headers, loading them into appropriate data classes, and then doing a bunch of normalising, mapping, filtering, enrichment, and checking against detection rules.

The project itself is not as important as what I experienced:

**First issue**

One of the layers of enrichment for my project involved iterating through rows, taking out a value, initialising a class with it as an arg, and then adding some of that class' fields in as new columns. In initial testing this worked great, but then when trying to run this against larger (but relatively small) datasets, I experienced something odd. My program would reach 50,000 / 100,000 IPs, and then slow to a crawl. It seemed that when the memory usage of the Dataframe (hereby df) reached a certain size, time to complete certain operations slowed to a crawl.

My solution: Just as a test, I made this enrichment stage read the df into a numpy array, and then iterate through in the same way. This resulted in very similar speeds but my issue disappeared. No matter how large the dataset, the speed would remain constant and the processing would complete.

&#x200B;

**Second change**

Off the back of this experience with the enrichment, I realised I had another stage of processing that I'd not experienced issues with, could again be done with numpy instead.

This stage iterated rows, then checked column values using a rule engine I built, and inserted some values back into a single new column. Once against, I made my engine class first convert the df into a numpy array (yes aware how inefficient that is) then perform the same iteration and logic.

This change, keeping the implementation as close as possible, just with the more basic datatype, resulted in about 20x speed improvement.

&#x200B;

**This continued...**

I then went back through all libraries that I built for this project, and more or less replaced any method or class that involved any kind of processing with numpy code.

Even whilst still converting from df to arrays and back within each method (just to test the speed difference, I plan on swapping my data classes to only use np arrays eventually), I watched those progress bars shooting by, and was very surprised by the difference.

&#x200B;

*tldr*: I converted all my pandas code to numpy. it sped my program up astoundingly and fixed my memory issues. is this normal? When *should* I be using Pandas.

&#x200B;

*Edit*
I‚Äôve learnt a lot over the last couple days about this topic. So I‚Äôve dropped the key takeaways below:

1) Vectorise it - This wasn‚Äôt relevant to large parts of my project as I needed to do string transformations and enrichment. But where possible, always vectorise.

2) Pandas has problems when you hit memory limits, but speed problems were more often implementation problems by me. 

3) Iterating is slow - Don‚Äôt do in 100,000 loops what you can do in a single action. Consider how long it takes to move a pile of books from one place to another one at a time, versus just moving the whole pile at once. An example from my project was that I was enriching data 1 row at a time when actually I could generate my enrichment data, and literally insert the ‚Äúcolumns‚Äù all at once as a big results array. This took seconds vs minutes.

4) If your program is taking minutes to run, second guess yourself. Check if your ‚Äúlarge‚Äù dataset is really that large. Some systems process millions of records in less than a second, and do some fairly hefty processing in between, so if you‚Äôre spending 3 minutes to process 100,000 Ip addresses, make sure that you aren‚Äôt doing some inefficiently.

5) If you‚Äôre using a library, use its methods and use its classes. I learn that I was heavily underutilising pandas methods to do my transformations. If there‚Äôs a .filter or a .groupby or a .merge based solution to your problem, do that instead of taking the data out and juggling it about. This keeps you within the heavily optimised (both in terms of logic, and also in terms of precompilation) codebase of the library.","[{'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': 'kernco', 'Comment': 'In general you want to avoid iterating through rows, whether in pandas or numpy. Without seeing the code itself it would be hard to know if you can avoid it. But yes numpy will be faster than pandas. You could look into polars as an alternative to pandas if efficiency is important.'}, {'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': 'Quick-Profession9077', 'Comment': ""I'll just leave this here -- [https://stackoverflow.com/questions/16476924/how-to-iterate-over-rows-in-a-dataframe-in-pandas](https://stackoverflow.com/questions/16476924/how-to-iterate-over-rows-in-a-dataframe-in-pandas)\n\nMuch like u/kernco stated you shouldn't be iterating, and certainly not more than a couple thousand rows at most.   For example I have a script that uses a method from a third party library to add a column of geometry to a dataframe with 4.5 million rows.  If I use itertuples() it takes \\~8 minutes, while using a pandas apply approach it takes \\~45 seconds.""}, {'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': 'madrury83', 'Comment': ""As far as I can tell, the only thing you're actually using Pandas for here is to read the csv. After that, you're just looping through the rows and doing some general purpose programming using values stored in the row as input.\n\nPandas is an optimized library for array computations. If your operations are not expressible as linear-algebraic vector operations, then the use of pandas is not getting you anything but an awkward data structure. Given your rough description, I suspect you could write your program with the `csv` module included in the python standard library without giving much up.""}, {'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': 'martinkoistinen', 'Comment': 'From what you wrote you seem to cross back and forth over the Pandas C-API a lot. This is expensive in terms of time.\n\nAlso, sometimes Data Scientists and Analysts use Pandas when their project would go significantly faster in pure Python.\n\nFor example, creating new columns from data contained in the same row could be handled with a pure Python generator which opens your source CSV file for reading and yields one row at a time as a list. This would be consumed by another function that would perform math on the existing ‚Äúcolumns‚Äù in the list to derive the value of a new column and yield the new row (again as a list) which could be consumed by yet another function which opens your output CSV and iterates over the previous function‚Äôs output (a row as a list) and writes to a new file.\n\nThis simple program could process virtually any number of rows and would out-perform Pandas by roughly 2X or more. The best part is, it would use a tiny fraction of the memory Pandas would, because you‚Äôd only have roughly one row in memory at a time, whereas Pandas will naively try to load it all into memory.\n\nThis whole thing will probably go as fast as your input and output file can be read from/written to, but if the calculations in the middle are the bottleneck, you can introduce a ProcessPool to spread the work around to other cores very easily. The only downside of this is your output file might not maintain the same row ordering as the input file. At least not without some additional work.'}, {'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': 'Hard_Thruster', 'Comment': ""Pandas has a lot of high speed vectorized functions largely because it's built on numpy. But often people use for loops and unwarranted solutions.\n\nIf you're dealing with purely numbers, it's not a bad idea to just use numpy but pandas is certainly fast enough for 100,000 rows of data.\n\nI think this is just a lack in knowledge of the api. 100,000 rows is easily handled.""}, {'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': '_Joab_', 'Comment': ""It sounds like your code is not optimized for large scale data processing, and it could probably be greatly improved by properly utilizing vector/matrix operations.\n\nPandas and numpy are great for vectorized operations, and the speed difference between using vector operations in numpy vs iterating rows is huge. Pandas is very memory heavy, so you might want to switch to pure numpy. Translate all your processing to numpy vector operations and that should solve your issue. numpy is very flexible and I haven't encountered many python operations I couldn't translate to vector functions after fidgeting with it for a while. \n\nHit me up if you want some help with translating your script to numpy, or consider opening a Stack Overflow question. Processing a couple million rows of data should run in the order of seconds on a regular device.""}, {'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': 'justneurostuff', 'Comment': 'consider using numba to accelerate your numpy code further if you go that route'}, {'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': 'ReputationCold9410', 'Comment': 'If you‚Äôre iterating with Pandas you are generally doing something wrong.'}, {'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': 'mustangdvx', 'Comment': 'If you‚Äôre comfortable around SQL, Duckdb has been my goto when my dataframes are out of memory (or I simply get too frustrated with dataframes syntax).'}, {'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': 'Atheuz', 'Comment': ""I was interested in applying a transform to pandas DataFrame  to get a list of custom objects out, and I found that apply was horrendously slow so I made a test of a bunch of different ways of to do it.\n\nDocumented here: https://stackoverflow.com/questions/76502222/what-is-the-fastest-way-to-iterate-through-a-pandas-dataframe-to-create-custom-o\n\nIf you don't need pandas, then you should avoid using it. \n\nI only did this test because I had no choice: I had to feed in a pandas DataFrame as an argument into library code and I needed to find a way to improve the performance of what that library was doing.\n\nPandas is also very bad w.r.t to memory utilization for large DataFrames.""}, {'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': 'None', 'Comment': ""Yeah, no offense, but if you're iterating row by row you aren't leveraging pandas. Vectorize that stuff""}]"
python,All Python data engineering project (Twitter Monitor),https://www.reddit.com/r/Python/comments/uusegj/all_python_data_engineering_project_twitter/,267,20,No_Engine1637,1653155893.0,"Hi there,

I'd like to show you a project I made to show my data engineering skills to potential employers (I'm looking for an internship or a first tech job).

This is the repository: [https://github.com/jmcmt87/spark\_app\_twitter](https://github.com/jmcmt87/spark_app_twitter)

Any feedback, suggestion or recommendation, especially code-wise, is more than welcome

The app gets information in streaming from Twitter about the war in Ukraine regarding four topics: Biden, Zelensky, Putin and NATO, then process them in batches of one hour and show the information (sentiment analysis and emotion classification) at three aggregation levels: hour, day and total.

You can check the app here: [https://share.streamlit.io/jmcmt87/streamlit\_share/main/streamlit\_share.py](https://share.streamlit.io/jmcmt87/streamlit_share/main/streamlit_share.py)

This is the architecture scheme:

https://preview.redd.it/se4waupjbv091.png?width=1280&format=png&auto=webp&s=82b6210b45e50c48b56e7c9233decd4f2b8aa812

Thanks for checking it out!","[{'Subreddit': 'python', 'Reddit_Title': 'All Python data engineering project (Twitter Monitor)', 'CommentAuthor': 'ElevenPhonons', 'Comment': ""[https://github.com/jmcmt87/spark\\_app\\_twitter/blob/main/tweepy\\_ingestion/utilities/functions.py#L20](https://github.com/jmcmt87/spark_app_twitter/blob/main/tweepy_ingestion/utilities/functions.py#L20)\n\n    def configure_create_topics(servers:str=servers, topics:list=[]) -> None:\n        ....\n\nDefault mutable args can generate difficult to track down bugs and should be avoided if possible.\n\n[https://docs.python-guide.org/writing/gotchas/#mutable-default-arguments](https://docs.python-guide.org/writing/gotchas/#mutable-default-arguments)\n\n`pylint` can be useful to help proactively catch these potential issues.\n\n[https://pylint.pycqa.org/en/latest/](https://pylint.pycqa.org/en/latest/)\n\n    pylint tweepy_ingestion | grep dangerous-default-value                                                                                                                                                                                                                         \n    tweepy_ingestion/utilities/functions.py:20:0: W0102: Dangerous default value [] as argument (dangerous-default-value)\n\nAlso, it might be useful to consider migrating from a `print` model to a logging model. It's also good practice to write errors to `sys.stderr` instead of `sys.stdout` (or log them accordingly). \n\n[https://docs.python.org/3/howto/logging.html](https://docs.python.org/3/howto/logging.html)\n\nBest of luck to you on your project.""}, {'Subreddit': 'python', 'Reddit_Title': 'All Python data engineering project (Twitter Monitor)', 'CommentAuthor': 'Log2', 'Comment': ""This looks pretty good!\n\nHonestly, your bigger problem is going to be getting someone to look at it, unfortunately. People always say to put stuff in your Github, but the truth is 99% of the projects in a random candidate profile will be uninteresting stuff, so a lot of interviewers won't bother (anedacta: I know I don't).\n\nI'm not personally a data engineer, but a SWE in a data team (as in my team is responsible for data ingestion, acting on the data, then sending it along to the data engineering team), and I can tell you that quite a bit of the work a data engineers does is also taking care of the infrastructure on their data pipelines. Learning something like Terraform or Pulumi can be a good skill to have in your CV.""}, {'Subreddit': 'python', 'Reddit_Title': 'All Python data engineering project (Twitter Monitor)', 'CommentAuthor': 'None', 'Comment': 'Looks good.\n\nThe thing where you have `utilities/utilities.py` or `functions/functions.py` is pretty redundant. Just remove the folder and use a normal module.\n\nAdd a `.gitignore` and a `LICENSE` so it looks more like a ""real project"" with hardly any extra effort.\n\nToo many instructions to set up the app; very user unfriendly (""user"" here means ""your coworker""). And the instructions are incomplete, mind you, since you don\'t tell people how to set up the three separate environments! How about a `run.sh` that works in one go, or even better, how about a `docker-compose.yml`that runs everything in a single app? (<- Note: no interviewer is ever going to go this deep.)\n\nOverall, this is pretty darn good for a ""looking for an internship"" project; you\'ll be fine. Best of luck!'}, {'Subreddit': 'python', 'Reddit_Title': 'All Python data engineering project (Twitter Monitor)', 'CommentAuthor': 'NUTTA_BUSTAH', 'Comment': 'Impressive!! This is what we would love to see from new grads. As long as you were a good fit otherwise, there would be no questions about hiring.\n\nSome random tips in no specific order:\n\n>         # Call create_topics to asynchronously create topics, a dict\n>         # of <topic,future> is returned.\n>         fs = a.create_topics(topics, request_timeout=15.0)\n\n>         # Creating a Twitter stream listener class:\n>\n>            class Listener(tweepy.StreamingClient):\n\nThe comments are nice but quite redundant. You can annotate the return types too in case it makes sense for the code to be readable:\n\n`fs: Dict[topic, future] = a.create_topics(...)`\n\n>     # This is a module\n\nIt\'s not. You made it a package by adding the `__init__.py` file. Modules are the Python files themselves. Which also makes me wonder, why is the meat of the application a package called `utilities` with an entrypoint outside of the projects? Utilities are usually for small unspecific things like `to_dict()` or `find_tokens()` or something. It is also a single file which makes me think, why are they not inside the `main.py`, they are so small files.\n\nMaybe try this instead:\n\n\n     tweepy_ingestion/\n     ‚îú‚îÄ tweepy_ingestion/\n     ‚îÇ  ‚îú‚îÄ main.py\n     ‚îÇ  ‚îú‚îÄ kafka_wrapper.py\n     ‚îú‚îÄ Pipfile\n     ‚îú‚îÄ Pipfile.lock\n     ‚îú‚îÄ config.json\n\nI would also love to see the normal dev dependencies to be included in every Python project: `mypy`, `pylint`, `pytest`, `black`, `isort` with automation over them. `mypy` will complain you about your typing, `pylint` will complain you about common mishaps and give your code a score, `pytest` will run tests for your code, `black` will format your code to be quite PEP-compliant and `isort` will sort your imports.\n\nIf you notice you are writing down steps that are pretty much just running commands (instead of doing external things) like here: https://github.com/jmcmt87/spark_app_twitter#start - You probably want a `Makefile` so you can run all steps automatically with `make start` for example.\n\nFor READMEs in general, I like to follow the simple structure of:\n\n- Overview in a few lines\n- Quick start\n  - Prerequisites (tools, credentials)\n  - Running locally (steps)\n  - Deploying\n\nRemove the ""Code map"", we can see the directory structure ourselves.\n\nUse `docs/` and `docs/images/` etc. to keep root directory clean from documentation fluff.\n\nDockerization would be nice for each app. It will be done anyways before deploying anything to production. Docker-compose to build and run all containers at once.\n\nWhen you find yourself doing this:\n\n>         return spark.readStream \\\n>             .format(""kafka"") \\\n>             .option(""kafka.bootstrap.servers"", \n>                 config.get(""kafka_servers"")) \\\n>             .option(""failOnDataLoss"", ""false"") \\\n>             .option(""subscribe"", config.get(""topic_list"")) \\\n>             .option(""startingOffsets"", ""latest"") \\\n>             .load() \\\n>             .select(F.col(\'key\').cast(\'string\'),\n>                 F.from_json(F.col(""value"").cast(""string""), \n>                     schema)[\'data\'][\'created_at\'].alias(\'created_at\'),\n>                 F.from_json(F.col(""value"").cast(""string""), \n>                     schema)[\'data\'][\'text\'].alias(\'text\'),\n>                 F.col(\'topic\')) \\\n>             .withColumn(""hour"", F.date_format(F.col(""created_at""), ""HH"")) \\\n>             .withColumn(""date"", F.date_format(F.col(""created_at""), ""yyyy-MM-dd""))\n\nit has a code smell, it\'s extremely likely there is a `.options()` method where you can pass options in bulk with something like:\n\n    stream_options = {\n        ""format"": ""kafka"",\n        ""kafka.bootstrap.servers"": config.get(kafka_servers),\n        ""failOnDataLoss"": False,\n        ""subscribe"": config.get(""topic_list""),\n        ""startingOffsets"": ""latest""\n    }\n    \n    spark.readStream(options=stream_options).load()#....\n    # or\n    spark.readStream().options(stream_options).load()#....\n\nI would also create the stream reader first and return with just the SQL statement:\n\n     reader = spark.readStream...\n     \n     return reader.select...\n\nAnd this configuration also highlights `config.get`, that method is used when the dict value must return a valid default (`config.get(""topic_list"", [""default_topic""])`) but you are not using them. If they are missing from the configuration, wouldn\'t that be a failure state? You could just use `config[""topic_list""]` for example.\n\n>     # Defining topics of our interest:\n>     \n>     tags = [\'Zelensky\', \'Putin\', \'Biden\', \'NATO\', \'NoFlyZone\']\n>     query = config.get(\'query\')\n>     # -has:multimedia -is:retweet -has:link -is:quote -is:reply\n>     \n>     rules = [f""{config.get(\'zelensky\')} {query}"", \n>         f""{config.get(\'putin\')} {query}"", \n>         f""{config.get(\'biden\')} {query}"", \n>         f""{config.get(\'nato\')} {query}"", \n>         f""{config.get(\'noflyzone\')} {query}""]\n\nI think this is an excellent place to leave the configuration for the user. I suggest making a `config.topics` key to store this info under and then just use `rules = config[""topics""]`. I\'d not allow default values here (`query`) as they hide info and the user definitely wants to configure data ingestion exactly to the tee, instead of getting some defaults.\n\n---\n\nI hope some of these tips help with your future :) In general the code is easy to follow and much better than the beginner-level stuff you see 95% of the time. Very impressed!\n\nI have no doubts about you getting your first job from technical aspect alone. In conclusion, try to keep it simple, less is more, use tools that points fingers at smelly code, automate everything, try not to hide or hard-code anything, make users life a breeze and keep on coding!'}, {'Subreddit': 'python', 'Reddit_Title': 'All Python data engineering project (Twitter Monitor)', 'CommentAuthor': 'sherwoodpynes', 'Comment': 'Looks really nice, definitely a nice project to show prospective employers. Good luck with the job hunt! Good data eng seems to be in high demand and short supply.'}, {'Subreddit': 'python', 'Reddit_Title': 'All Python data engineering project (Twitter Monitor)', 'CommentAuthor': 'h0me_skillet', 'Comment': 'Cool!  Would love to see a graph of emotions by topic over a longer time period.  Would cool to see how it changes.  Nice work!'}, {'Subreddit': 'python', 'Reddit_Title': 'All Python data engineering project (Twitter Monitor)', 'CommentAuthor': 'absolutelinoob', 'Comment': 'No need to pass the SparkSession object around, just do this whenever needed:\n\n    # will be None if no active session exists, otherwise it will always\n    # return the exact same object in memory\n    spark = SparkSession.getActiveSession()\n\n[source](https://spark.apache.org/docs/latest/api/python/reference/api/pyspark.sql.SparkSession.getActiveSession.html)'}, {'Subreddit': 'python', 'Reddit_Title': 'All Python data engineering project (Twitter Monitor)', 'CommentAuthor': 'flaviodiasc1', 'Comment': 'You did a good job with this project! This code is more clean than most interns developers write. At least in my experience! I like that you made an architecture diagram from this solution! This make the difference!\n\nps: sorry for my english.'}, {'Subreddit': 'python', 'Reddit_Title': 'All Python data engineering project (Twitter Monitor)', 'CommentAuthor': 'None', 'Comment': 'Very cool! Thank you for sharing m8!'}, {'Subreddit': 'python', 'Reddit_Title': 'All Python data engineering project (Twitter Monitor)', 'CommentAuthor': 'XBalubaX', 'Comment': 'Hey Buddy nice work!\n\nStreamlit looks awful on mobile üòù\n\nOne question about the infrastructure. Do u have high frequency input datas, or why did u use this kafka - spark - parquete? \n\nWouldn‚Äôt it also work if you go directly python - db?\n\nI know it should be a ‚Äûshowcase portfolio project‚Äú but did u think about the meaningfulness?'}, {'Subreddit': 'python', 'Reddit_Title': 'All Python data engineering project (Twitter Monitor)', 'CommentAuthor': 'No_Engine1637', 'Comment': 'Damn, this is very good feedback, thanks!'}]"
python,any thing like Word Mail Merge to mox text with dynamic placeholders for data,https://www.reddit.com/r/Python/comments/1applpe/any_thing_like_word_mail_merge_to_mox_text_with/,14,21,siraj-samsudeen,1707816856.0,"We have a large report in Word based on several Excel files containing Budget data. We have to generate a PDF report that contains a narrative that is based on the data and we use pandas to manipulate the data - when the data changes, we want the numbers to be updated - for example, I might have a text that says ""The department with the highest increase in budgeting for Staff costs is XYZ with 76.5% increase"". In addition, we will have several data tables presenting the budget data, summarized by different categories, etc. I am looking to replace Word as there is no easy way to insert dynamic data, except for mail merge, which is quite basic. Jupyter Notebook or Quarto would be great choices, but the end users are not programmers - I was wondering whether there are tools to support such a scenario.

<<Update>>: Just got to know - [https://docxtemplater.com/](https://docxtemplater.com/) and it looks quite close to what I wanted to have. Updating here for the benefit of others. ","[{'Subreddit': 'python', 'Reddit_Title': 'any thing like Word Mail Merge to mox text with dynamic placeholders for data', 'CommentAuthor': 'pinkyponkjuice', 'Comment': 'Jinja2'}, {'Subreddit': 'python', 'Reddit_Title': 'any thing like Word Mail Merge to mox text with dynamic placeholders for data', 'CommentAuthor': 'nicholashairs', 'Comment': ""So assuming you've exhausted all the integrations between office modern office products (from memory word let's you embed excel data into it and will keep it in sync).\n\nThe next step might be to look at a combination of https://github.com/Kozea/WeasyPrint (turns html into pdf) and jinja2 (templating language). The user friendliness of this depends on your users. If they can write basic html use Jinja with html templates. If they can't, consider using a WYSIWYG html editor, or using markdown + Jinja (and convert to html after).\n\nYou might need to write your own Jinja filters to generate images from your data.\n\nWeasyprint is pretty good but also depends on the length of your report (and how much ram you have). If you're getting close to 1000 pages you might want to find a way to generate it sections then use another pdf tool to merge them (or just provide a zip or something).\n\nEdit: this route is probably only worth it if you're generating lots of reports.\n\nEdit: latex is also a viable tool if you know how to write latex. The weasyprint Jinja solution is one I came up with because I did not write enough latex to be productive in it but I do know how to write html.""}, {'Subreddit': 'python', 'Reddit_Title': 'any thing like Word Mail Merge to mox text with dynamic placeholders for data', 'CommentAuthor': 'djnrrd', 'Comment': 'I\'ve used [Reportlab](https://www.reportlab.com/) to programmatically create PDF documents.  You can draw direct onto the PDF if you want, which I\'ve done for corporate branded cover sheets, or use their engine for creating a sequence of ""Flowables"", formatted paragraphs, tables and images, that will be placed within the borders of the page, creating more pages as needed.\n\nMy only beef is that it\'s hard to do ""Page X of Y"" style footers, as you don\'t know how many pages the file will be until after it has completed rendering.'}, {'Subreddit': 'python', 'Reddit_Title': 'any thing like Word Mail Merge to mox text with dynamic placeholders for data', 'CommentAuthor': 'hughperman', 'Comment': 'In the past, I have written a word template with {{placeholders}}, then used python to make a copy then replace the placeholders with variables. You need to treat it as a zip file and search the contents for the variable to replace, it was successful after a bit of messy learning.'}, {'Subreddit': 'python', 'Reddit_Title': 'any thing like Word Mail Merge to mox text with dynamic placeholders for data', 'CommentAuthor': 'DivineSentry', 'Comment': 'Latex'}, {'Subreddit': 'python', 'Reddit_Title': 'any thing like Word Mail Merge to mox text with dynamic placeholders for data', 'CommentAuthor': 'ArabicLawrence', 'Comment': 'why can‚Äôt you do everything in Excel? Have one sheet importing all the data, and another sheet inserting it in the text. You can then print the sheet as a pdf or copy the text to Word'}, {'Subreddit': 'python', 'Reddit_Title': 'any thing like Word Mail Merge to mox text with dynamic placeholders for data', 'CommentAuthor': 'char101', 'Comment': 'Generate report in markdown then convert to docx using [pandoc](https://pandoc.org/).'}, {'Subreddit': 'python', 'Reddit_Title': 'any thing like Word Mail Merge to mox text with dynamic placeholders for data', 'CommentAuthor': 'chief167', 'Comment': 'depends on many things\n\npowerautomate could help maybe?'}, {'Subreddit': 'python', 'Reddit_Title': 'any thing like Word Mail Merge to mox text with dynamic placeholders for data', 'CommentAuthor': 'baubleglue', 'Comment': 'Notebook can be exported as PDF (there\'s a plugin) or HTML.\n\nIt sounds like there are multiple independent topics.\n\n* Extract data from multiple Excel files - solved. \n* Data in DB tables - no issues \n* Manipulate data with pandas - solved\n* Final report format - in question\n* Dynamic data/ interactive report \n\n\nAll the story is irrelevant (except the part that customer used to have report in Word format). \n\nYou can go hard way or easier way. There\'s is a rule in programming: ""often it is easier to solve one general problem than many specific"". If you generalize the question: ""how to make interactive BI report"", you will find few options. I think in general there are two and half options\n\n* Custom solution. You build a web site, there\'s huge choices of options from building everything on your own to using libraries to build dashboards. \n* Commercial BI Reporting platforms (Power BI, Tableau) or similar free tools. \n* Odd (but still popular) options like imbedded into word or excel queries. \n\nPower BI is probably the minimum resistance option. You don\'t need to host anything and your company may already have some kind of license for it.  \nIf you have resources/skills building a small web app is not a rocket science too.'}, {'Subreddit': 'python', 'Reddit_Title': 'any thing like Word Mail Merge to mox text with dynamic placeholders for data', 'CommentAuthor': 'Walkintoit', 'Comment': 'Just curious, could the data in the ""file"" be read only? Also, is there a security issue that needs to be addressed?'}, {'Subreddit': 'python', 'Reddit_Title': 'any thing like Word Mail Merge to mox text with dynamic placeholders for data', 'CommentAuthor': 'Then-Papaya-6582', 'Comment': 'Report builder is easy'}]"
python,Analyzing GPS files from sport watches,https://www.reddit.com/r/Python/comments/1aowriu/analyzing_gps_files_from_sport_watches/,20,14,iamgearshifter,1707732754.0,"Hi! I analyzed GPS-based data from my Garmin sport watch using the library [gpxpy](https://github.com/tkrajina/gpxpy). There is no documentation available, so I relied on docstrings to find the methods I needed.

There is a very similar [project](https://betterdatascience.com/data-science-for-cycling-how-to-read-gpx-strava-routes-with-python/) working with files from Strava, but there most of the stats were calculated directly on the pandas dataframe. I used methods from gpxpy wherever possible.

I wrote a [blog post](https://gerritnowald.wordpress.com/2024/02/08/analyzing-gpx-files-from-garmin/) about my project and uploaded the code to [github](https://github.com/gerritnowald/Garmin_analysis).

Please let me know what you think!","[{'Subreddit': 'python', 'Reddit_Title': 'Analyzing GPS files from sport watches', 'CommentAuthor': 'daredevil82', 'Comment': ""Just out of curiosity, why not use gpx to geojson or some other intermediate format and import?\n\nUsing gpxpy in a toy project like this, but with the dev actively ignoring  documentation PRs  and you having to read the lib code to use the thing is a bit more of a red flag for. me and I'd be looking for another approach""}, {'Subreddit': 'python', 'Reddit_Title': 'Analyzing GPS files from sport watches', 'CommentAuthor': 'Oddly_Energy', 'Comment': ""Is there a reason that you don't let your script retrieve the activities from Garmin's API using the garminconnect package?\n\nApart from saving some manual work for saving the files, you will probably get a lot more information over.  As far as I remember, a lot of information goes lost when you convert a Garmin activity to GPX.\n\nI use  the garminconnect package for retrieving and analysing both my health stats and my activities. I haven't used the GPS data from those activities for anything yet, though.""}, {'Subreddit': 'python', 'Reddit_Title': 'Analyzing GPS files from sport watches', 'CommentAuthor': 'SaxonyFarmer', 'Comment': ""Is this a FIT file?  I use 'fitdecode' to process the file uploaded from my Wahoo Elemnt to Dropbox (then to my PC).  I am not processing any of the GPS data but only battery levels and ride stats.""}, {'Subreddit': 'python', 'Reddit_Title': 'Analyzing GPS files from sport watches', 'CommentAuthor': 'iamgearshifter', 'Comment': 'Thank you for your feedback. No doc or examples is inconvenient, but the docstrings were actually quite good. Honestly I did not think about the possibility to convert it to an intermediate format. I think specifically for Garmin watches, it would make most sense to directly parse the fit files (e.g. using [https://github.com/dtcooper/python-fitparse?tab=readme-ov-file](https://github.com/dtcooper/python-fitparse?tab=readme-ov-file)).'}, {'Subreddit': 'python', 'Reddit_Title': 'Analyzing GPS files from sport watches', 'CommentAuthor': 'iamgearshifter', 'Comment': ""Reasons are that I was not aware of the API and that for me it was probably less effort in the beginning to work with gpx files. I don't think I will use this script productively. But API would probably be the best choice for that.""}, {'Subreddit': 'python', 'Reddit_Title': 'Analyzing GPS files from sport watches', 'CommentAuthor': 'iamgearshifter', 'Comment': 'No I used a gpx file downloaded from the Garmin webpage. This is a general, XML based GPS format. Fit file would be better from amount of data and file size, but I wanted to start as simple as possible and use a human readable file.'}, {'Subreddit': 'python', 'Reddit_Title': 'Analyzing GPS files from sport watches', 'CommentAuthor': 'daredevil82', 'Comment': 'That could absolutely work, since the CLI dumps out data in json, which you could extract and load.'}, {'Subreddit': 'python', 'Reddit_Title': 'Analyzing GPS files from sport watches', 'CommentAuthor': 'SaxonyFarmer', 'Comment': ""Understood!  I created a way to gather ride stats and an 'early warning' system for myself of battery levels.  I create a one-row Excel spreadsheet of ride stats I copy and paste as values into a large and comprehensive spreadsheet of ride stats, etc.  I send myself a text message of battery levels for my bike computer and DI2 system after each ride as a reminder when they get low to recharge them.  The FIT file has all of this.  Good luck!""}, {'Subreddit': 'python', 'Reddit_Title': 'Analyzing GPS files from sport watches', 'CommentAuthor': 'iamgearshifter', 'Comment': 'Have you automated the extraction of the data? I did not know that you can run dropbox on a cycling computer. Is your script running on a server? sounds super cool!'}, {'Subreddit': 'python', 'Reddit_Title': 'Analyzing GPS files from sport watches', 'CommentAuthor': 'SaxonyFarmer', 'Comment': ""Yes.  The Wahoo Elemnt allows me to upload my ride data to various sites like Ride with GPS, Strava, etc. and to DropBox (and maybe more, I don't know).  Since DropBox replicates files onto my desktop PC (Ubuntu), when the Elemnt app loads the FIT file to DropBox, a copy is automatically sent to my PC.\n\nOn my PC, I have implemented a service called 'incron' to 'react' when an event occurs with a file or folder.  For this, I have it start a script when a new file is loaded to my PC from DropBox (within a minute after it's uploaded).  This script starts the Python program to read the data and produce the one-line Excel file of the ride stats, send text messages (via emails to my carrier's SMS system) to me with basic ride stats and battery levels (with reminders to recharge a device if it falls below a program-set level) and to my wife so she knows I made it home safely, and it writes selected ride stats to a MySQL database (yeah, I'm a data nerd).  Finally, this script moves the FIT file to another folder.\n\nFor fun, I know my DI2 gets between 1,200 and 1,500 miles between needing to be recharged (I live in FL so I may not shift as much as someone else).  A comprehensive spreadsheet (updated by hand from the one-liner produced by this program) let's me track chain, cassette, and tire life.  I ride over 10k miles per year (I'm retired so no job commitments) and go through 3-4 chains at two cassettes per year.""}, {'Subreddit': 'python', 'Reddit_Title': 'Analyzing GPS files from sport watches', 'CommentAuthor': 'iamgearshifter', 'Comment': 'Thank you for sharing, very cool! Does your Ubuntu PC run all the time or is it enough to just update everything when you are using it anyway? Good idea to have this event tracker!\n\nUnfortunately my fit files from the watch are only synchronized with Garmin, so I would need to pass it through there and use the API to automate it.\n\nHave you thought about automating the spreadsheet part as well, using pandas?\n\nI have roughly 2k bike miles a year just from commuting to work :)'}]"
python,Why is pandas not compiled with -o3 by deafualt?,https://www.reddit.com/r/Python/comments/1andqab/why_is_pandas_not_compiled_with_o3_by_deafualt/,90,59,rejectedlesbian,1707562217.0,"Is it just me or does that seem simply bizzar. 
Like if you have gcc u can just get so much extra speed from doing that simple trick and as far as I can tell from their cython setup they don't seem to... 

Why is that?","[{'Subreddit': 'python', 'Reddit_Title': 'Why is pandas not compiled with -o3 by deafualt?', 'CommentAuthor': 'SweetBeanBread', 'Comment': 'MacOS goes with -Os as default, which is O2 excluding options that increase build size. I myself too found that Os often has the best performance for many applications. This probably is due to cache size in CPU, but I‚Äôm not exactly sure why.\n\nanyway, O3 in my experience has worse performance than O2 in many cases AND it causes unexpected bugs sometimes because many people, without knowing, often write C code with undefined behavior. So not going for O3 is quite common.'}, {'Subreddit': 'python', 'Reddit_Title': 'Why is pandas not compiled with -o3 by deafualt?', 'CommentAuthor': 'night0x63', 'Comment': 'I suggest you build it yourself with -O3 then you compare it yourself to the official build and do your own profiling.\n\nFor numpy and scipy they have extensive unit tests that are easy to run.\n\nI suspect Pandas also has similar tests. So you could profile using Pandas overall built in tests.\n\n---\n\nI would also check to see if Intel python distribution has a panda package. Then test the Intel version. Their releases are very performance oriented.'}, {'Subreddit': 'python', 'Reddit_Title': 'Why is pandas not compiled with -o3 by deafualt?', 'CommentAuthor': 'None', 'Comment': ""There's plenty of times when it's not faster. \n\nhttps://stackoverflow.com/questions/28875325/gcc-optimization-flag-o3-makes-code-slower-than-o2\n\nhttps://www.reddit.com/r/programming/comments/q5gfm9/bubble_sort_slower_with_o3_than_o2_with_gcc/\n\n-O3 tends to include a lot of features that increase code size, like aggressive loop unrolling. If you are jumping around a large amount of code, -O3 generally performs more poorly than -O2, but if you are running a tight loop (like HPC code), -O3 is better.\nIn the past, at a time when I worked on a very performance sensitive codebase that was also limited in scope, we compiled with -Osize and did all the loop optimizations we wanted manually (and with pragmas). That produced faster code than -O2 or -O3.""}, {'Subreddit': 'python', 'Reddit_Title': 'Why is pandas not compiled with -o3 by deafualt?', 'CommentAuthor': 'K900_', 'Comment': '-O3 is generally not a magic ""go faster"" option, and can actually reduce performance.'}, {'Subreddit': 'python', 'Reddit_Title': 'Why is pandas not compiled with -o3 by deafualt?', 'CommentAuthor': 'Eilifein', 'Comment': '`-O3` or also known as ""getting to the wrong answer quicker""'}, {'Subreddit': 'python', 'Reddit_Title': 'Why is pandas not compiled with -o3 by deafualt?', 'CommentAuthor': 'can_i_get_some_help', 'Comment': ""Can someone explain this question for me? I'm a noob with c compilation and would appreciate having my hand held here.""}, {'Subreddit': 'python', 'Reddit_Title': 'Why is pandas not compiled with -o3 by deafualt?', 'CommentAuthor': 'premium_direktsaft', 'Comment': 'As others already wrote, -O3 is not necessarily faster. Also, I personally saw bugs introduced by (over-)aggressive optimisation. Those bugs were often hard to debug, only showed up with some compilers, etc... O3 is just not worth it some of the time.'}, {'Subreddit': 'python', 'Reddit_Title': 'Why is pandas not compiled with -o3 by deafualt?', 'CommentAuthor': 'IncandescentWallaby', 'Comment': 'O3 is not always magically faster. If all optimizations were always a good idea we would not have fast-math, we would just have math.\n\nO3 can do some weird stuff, and the performance is not always guaranteed. It does however create a binary that is a massive pain in the ass to debug vs just looking at the symbols on an o3 build.\n\nI suggest building it yourself and profiling it. I doubt it will be the improvement you are hoping to see. Most of the slowdown is just moving and copying data into these libraries, not the computations.'}, {'Subreddit': 'python', 'Reddit_Title': 'Why is pandas not compiled with -o3 by deafualt?', 'CommentAuthor': 'Moses_Horwitz', 'Comment': 'Historically, the higher the optimization, the higher probability of breakage. Therefore, ""if it ain\'t broke, don\'t fix it.""'}, {'Subreddit': 'python', 'Reddit_Title': 'Why is pandas not compiled with -o3 by deafualt?', 'CommentAuthor': 'Dwarni', 'Comment': 'Gentoo memories :)\n\n-O3 is also often not better than O2\n\nhttps://www.phoronix.com/news/GCC-10.1-Compiler-Optimizations'}, {'Subreddit': 'python', 'Reddit_Title': 'Why is pandas not compiled with -o3 by deafualt?', 'CommentAuthor': 'DatBoi_BP', 'Comment': 'I didn‚Äôt know what O3 was before this post. Thought it was related to PyO3 lmao'}]"
python,Best exploratory data analysis platform/IDE for Python?,https://www.reddit.com/r/Python/comments/19f5mpg/best_exploratory_data_analysis_platformide_for/,86,81,FunHoliday7437,1706175398.0,"I'm doing ad-hoc research on data in python/pandas.  
  
I've been using Sublime IDE, but it's slow to re-run the entire .py file when I just change 1 line at the end.  
  
So I've been resorting to copy-pasting blocks of code into my python interpreter that I have open on the side. Which is probably bad.  
  
I heard Jupyter is supposed to be a good alternative for this. Is Jupyter what I need? I also heard VSCode can run Jupyter notebooks. Is VSCode what I need? What is the best tools/workflow for ad-hoc data exploration?","[{'Subreddit': 'python', 'Reddit_Title': 'Best exploratory data analysis platform/IDE for Python?', 'CommentAuthor': 'Mrz1337', 'Comment': 'JupyterLab is what you are looking for, imo'}, {'Subreddit': 'python', 'Reddit_Title': 'Best exploratory data analysis platform/IDE for Python?', 'CommentAuthor': 'Darwinmate', 'Comment': 'Vs code + jupyter or quarto or whatever notebook software .\xa0\n\n\npycharm has a nice data scientist that mimics rstudio layout. But vs code gets close'}, {'Subreddit': 'python', 'Reddit_Title': 'Best exploratory data analysis platform/IDE for Python?', 'CommentAuthor': 'seph2o', 'Comment': 'Spyder for the dataframe viewer is nice'}, {'Subreddit': 'python', 'Reddit_Title': 'Best exploratory data analysis platform/IDE for Python?', 'CommentAuthor': 'matjaz_b', 'Comment': 'I like spyder.'}, {'Subreddit': 'python', 'Reddit_Title': 'Best exploratory data analysis platform/IDE for Python?', 'CommentAuthor': 'tidersky', 'Comment': 'Pycharm is good too, or I have heard about something called deep note its used for data science and analytics in python'}, {'Subreddit': 'python', 'Reddit_Title': 'Best exploratory data analysis platform/IDE for Python?', 'CommentAuthor': 'WakandaFoevah', 'Comment': 'Dataspell'}, {'Subreddit': 'python', 'Reddit_Title': 'Best exploratory data analysis platform/IDE for Python?', 'CommentAuthor': 'RockportRedfish', 'Comment': 'Check out Google Colab at https://colab.research.google.com/'}, {'Subreddit': 'python', 'Reddit_Title': 'Best exploratory data analysis platform/IDE for Python?', 'CommentAuthor': 'Morpheyz', 'Comment': 'As others have said Jupiter (Lab) or Spyder. Experimental ""Change one line and see what happens"" is the perfect use case for notebooks. If you have a budget (or are a student), I would even recommend PyCharm. It has beautiful support for scientific python packages.'}, {'Subreddit': 'python', 'Reddit_Title': 'Best exploratory data analysis platform/IDE for Python?', 'CommentAuthor': 'EngulfedInThoughts', 'Comment': 'Spyder is great!  The ""Variable Explorer"" window is fantastic!'}, {'Subreddit': 'python', 'Reddit_Title': 'Best exploratory data analysis platform/IDE for Python?', 'CommentAuthor': 'Motoneuron5', 'Comment': 'Spyder \n\nI dont know how people can program in a Notebook. Just curious.'}, {'Subreddit': 'python', 'Reddit_Title': 'Best exploratory data analysis platform/IDE for Python?', 'CommentAuthor': 'OriginalNewton', 'Comment': ""Jetbrains Dataspell is the best you can get for notebooks and data science, it's very very  good.""}]"
python,Go to variable names?,https://www.reddit.com/r/Python/comments/19bzs8o/go_to_variable_names/,29,133,MaxQuant,1705829664.0,"Do you have go-to variable names, say in scratch code?

For instance, mine are: *p* for a Path instance from pathlib module,  *d* for dictionary, *w* for output read within ‚Äòopen‚Äô context, *s* for a string, *i* for index, like first element of tuples generated by ‚Äòenumerate‚Äô generator, and, of course ‚Ä¶, *df* for instance of DataFrame object of pandas module. 

How about yours?

Edit: corrected spelling mistake","[{'Subreddit': 'python', 'Reddit_Title': 'Go to variable names?', 'CommentAuthor': 'samreay', 'Comment': ""`i` for integer index iteration.\n\nActual descriptive names for other variables, even for scratch code.\n\nToo often have I seen scratch code passed to others, committed, or (worst of all) pushed into production. So proper variable names are a habit I try to enforce unless its literally a file I guarantee will be deleted before any other human sets eyes on it.\n\nEven then, if I'm summing something up, I'll always called it `summed` instead of just `s`.""}, {'Subreddit': 'python', 'Reddit_Title': 'Go to variable names?', 'CommentAuthor': 'Obvious_Shower_9203', 'Comment': ""See longer variable names as an investment. The 3 seconds more it takes to write out a word now will save you 3 minutes of wtf'ing later. Plus with all the niceties that IDEs bring these days theres no reason long names should slow you down.""}, {'Subreddit': 'python', 'Reddit_Title': 'Go to variable names?', 'CommentAuthor': 'andrewcooke', 'Comment': 'only i j and k for numeric loops and e for caught exceptions. everything else has meaningful names.'}, {'Subreddit': 'python', 'Reddit_Title': 'Go to variable names?', 'CommentAuthor': 'DustPuppySnr', 'Comment': ""I see a lot of comments in here who's pull requests will get blocked where I work. :)\n\nA variable should always describe the content of the variable.\n\nIn teams, you read more code than you write. So be explicit as possible so the next 400 times the code is being read, people don't need to figure out what x is meant to contain.""}, {'Subreddit': 'python', 'Reddit_Title': 'Go to variable names?', 'CommentAuthor': 'mvdenk', 'Comment': 'I\'d recommend the book ""The art of readable code""'}, {'Subreddit': 'python', 'Reddit_Title': 'Go to variable names?', 'CommentAuthor': 'Irish_beast', 'Comment': ""i, j for loop variables. If I find i,j being referenced more than 10 lines after being declared they need to get promoted to sensible names\n\nfrancis (my name) for a temporary variable. So I can grep francis to make sure I'm exorcised before comitting.""}, {'Subreddit': 'python', 'Reddit_Title': 'Go to variable names?', 'CommentAuthor': 'hughperman', 'Comment': 'Meaningful names outside of a few common contractions used to mirror e.g. documentation'}, {'Subreddit': 'python', 'Reddit_Title': 'Go to variable names?', 'CommentAuthor': 'shymmq', 'Comment': ""I almost never use 1-letter variables. 'path', 'str' are not much longer and are immediately understandable by anyone reading your code. For dicts, indices and file contents use a descriptive name instead. df is so commonly\xa0used that I can give it a pass.""}, {'Subreddit': 'python', 'Reddit_Title': 'Go to variable names?', 'CommentAuthor': 'wineblood', 'Comment': ""Often I'll use `x` if I'm doing a basic list/set/tuple comprehension and `k: v` in dict comprehensions, something like `[x for x in input_data if is_valid(x)]`.\n\nI use the `_filename` suffix for a string that just the name of a file and `_filepath` for the absolute path, so often I'll end up with `thing_filepath = base_dir + thing_filename`.\n\nIf I'm using a dict to map from one thing to another, I'll name it `<key>_<value>_map`. For example with event types and functions to handle that, it'll be `event_handler_map`.""}, {'Subreddit': 'python', 'Reddit_Title': 'Go to variable names?', 'CommentAuthor': 'mew_of_death', 'Comment': 'I\'ll allow single letter names within list and dictionary comprehension: \n\n[f.name for f in files] \n\n[(k, v) for k, v in mydict.items()]\n\nAnd also I use ""fp"" as ""file pointer"" when reading files:\n\nwith open(filepath, \'r\') as fp:\n    filecontent = fp.read()'}, {'Subreddit': 'python', 'Reddit_Title': 'Go to variable names?', 'CommentAuthor': 'freefallfreddy', 'Comment': 'Variables that are short-lived or have a small scope can have a shorter name. Reason: within the small scope the reader will have the context in their head too, so a short name will be descriptive enough. Example `user` inside a function that constructs a database connection string.\n\nVariables or constants that are long lived or have a large scope (maybe the whole app) should have longer names (if that makes sense of course). Reason: the context does not give enough information and confusion may arise. Example: `DB_CONNECTION_USERNAME` as a constant. Anywhere in the app this is used it‚Äôs immediately clear what this constant will hold.'}]"
python,Modern alternatives to Data Science Libraries like Polars with Pandas?,https://www.reddit.com/r/Python/comments/196jbms/modern_alternatives_to_data_science_libraries/,207,70,Ok-Tutor-4321,1705248727.0,"I've been trying Polars and love them more than Pandas. In addition to performance, I find the API better designed (fewer ways to do the same thing) which, I think, allows memorizing the syntax faster, I would recommend Polars instead of Pandas to a new person.

Are there any modern alternatives for data visualization, algorithms, etc. that you are considering as an upgrade to your stack?","[{'Subreddit': 'python', 'Reddit_Title': 'Modern alternatives to Data Science Libraries like Polars with Pandas?', 'CommentAuthor': 'DanklyNight', 'Comment': 'Pystore - data storage for pandas.\nNiceGUI - Excellent frontend for Python.\nKVRocks - On disk K/V store with a Redis API.'}, {'Subreddit': 'python', 'Reddit_Title': 'Modern alternatives to Data Science Libraries like Polars with Pandas?', 'CommentAuthor': 'None', 'Comment': 'DuckDB is always good, orchestration wise there is Dagster & Prefect to separate from Airflow, as well as having SuperDuperDB which I haven‚Äôt tried yet but saw it makes LLM tuning w your data super easy, also Reflex & Streamlit are great for building data apps, and DBT always is good for SQL.'}, {'Subreddit': 'python', 'Reddit_Title': 'Modern alternatives to Data Science Libraries like Polars with Pandas?', 'CommentAuthor': 'Ezibenroc', 'Comment': 'For plotting, I love plotnine. This is a Python implementation of the ggplot2 library from R. It lacks some features compared to the original, but still great to use in my opinion.'}, {'Subreddit': 'python', 'Reddit_Title': 'Modern alternatives to Data Science Libraries like Polars with Pandas?', 'CommentAuthor': 'morrisjr1989', 'Comment': 'Polars recently added plot to DataFrame name space https://docs.pola.rs/py-polars/html/reference/dataframe/api/polars.DataFrame.plot.html#polars.DataFrame.plot so maybe with looking into hv plot for chartin https://hvplot.holoviz.org/reference/index.html'}, {'Subreddit': 'python', 'Reddit_Title': 'Modern alternatives to Data Science Libraries like Polars with Pandas?', 'CommentAuthor': 'Throwaway__shmoe', 'Comment': 'Like others have said, DuckDB.'}, {'Subreddit': 'python', 'Reddit_Title': 'Modern alternatives to Data Science Libraries like Polars with Pandas?', 'CommentAuthor': 'zethiroth', 'Comment': 'hvPlot / HoloViews for matplotlib.'}, {'Subreddit': 'python', 'Reddit_Title': 'Modern alternatives to Data Science Libraries like Polars with Pandas?', 'CommentAuthor': 'LordBertson', 'Comment': 'I have previously used [altair](https://github.com/altair-viz/altair). Selling point for me was the interactivity.'}, {'Subreddit': 'python', 'Reddit_Title': 'Modern alternatives to Data Science Libraries like Polars with Pandas?', 'CommentAuthor': 'houseofleft', 'Comment': 'Criminally underated library from the creator of pandas is Ibis.\n\n\nVery similar api to (although a little simpler than) pandas, but supports multiple back ends such as pandas, duckdb, SQL servers etc. You can change the back end to scale your code if needed withouy rewriting any transformations.\n\n\nPerformance wise, the duckdb engine ibis is very fast and pretty comparable to something like polars.'}, {'Subreddit': 'python', 'Reddit_Title': 'Modern alternatives to Data Science Libraries like Polars with Pandas?', 'CommentAuthor': 'juanluisback', 'Comment': 'Look no further, Polars is awesome and will dominate the Python small-medium data processing landscape in the coming years.\n\nIf they do well as a business, they might go after Spark too.'}, {'Subreddit': 'python', 'Reddit_Title': 'Modern alternatives to Data Science Libraries like Polars with Pandas?', 'CommentAuthor': 'vanatteveldt', 'Comment': ""R tidyverse\n\n(Ok ok I'm leaving, no need for the violence!)""}, {'Subreddit': 'python', 'Reddit_Title': 'Modern alternatives to Data Science Libraries like Polars with Pandas?', 'CommentAuthor': 'MythicJerryStone', 'Comment': 'Upvote on niceGUI. Really a great library for general front end.'}]"
python,15 most watched talks from PyCon 2023 (US and AU),https://www.reddit.com/r/Python/comments/196b3ak/15_most_watched_talks_from_pycon_2023_us_and_au/,142,11,TechTalksWeekly,1705220218.0,"Hiüëã! I think the 2023 edition of both PyCons were awesome and I've compiled a list of the most watched talks including PyCon US and PyCon AU. With some help of Python, Pandas, and Jupyter, here's the final top 15 list (and [**here's the full one**](https://techtalksweekly.substack.com/p/all-pycon-2023-talks-sorted-by-views)):

1. [**""What can't WebAssembly do?"" - Katie Bell (PyCon AU 2023)""**](https://www.youtube.com/watch?v=JbZAsSzzk0E) ‚∏± **+51k views** ‚∏± 00h 29m 03s
1. [**""Mario Munoz: Web Development With A Python-backed Frontend: Featuring HTMX and Tailwind""**](https://youtube.com/watch?v=YUoflPpVLjQ) ‚∏± **+8k views** ‚∏± 02h 26m 00s
2. [**""The Terrifying Longevity of Ideas"" - Benno Rice (PyCon AU 2023)""**](https://youtube.com/watch?v=yc248GXjvA8) ‚∏± **+8k views** ‚∏± 00h 48m 29s- *there's a nice point in this talk about how ideas get locked into place, like CPU design and programming languages like Python.*
3. [**""Matt Harrison: Getting Started with Polars""**](https://youtube.com/watch?v=CJ0f45evuME) ‚∏± **+7k views** ‚∏± 02h 14m 28s
4. [**""Samuel Colvin: How Pydantic V2 leverages Rust's Superpowers""**](https://youtube.com/watch?v=pWZw7hYoRVU) ‚∏± **+5k views** ‚∏± 00h 45m 55s
5. [**""Simon Willison: Data analysis with SQLite and Python""**](https://youtube.com/watch?v=5TdIxxBPUSI) ‚∏± **+4k views** ‚∏± 02h 45m 54s
6. [**""Hynek Schlawack: Subclassing, Composition, Python, and You""**](https://youtube.com/watch?v=k8MT5liCQ7g) ‚∏± **+4k views** ‚∏± 00h 45m 42s
7. [**""Reuven M. Lerner: Comprehending comprehensions""**](https://youtube.com/watch?v=qMv1ZD2V1A4) ‚∏± **+4k views** ‚∏± 02h 17m 33s
8. [**""Lisa Carpenter: How to create beautiful interactive GUIs and web apps""**](https://youtube.com/watch?v=cw44529_OU8) ‚∏± **+4k views** ‚∏± 01h 58m 05s
9. [**""Guido van Rossum's keynote""**](https://youtube.com/watch?v=yp6WuHFhYCo) ‚∏± **+4k views** ‚∏± 00h 30m 51s
10. [**""James Powell's keynote""**](https://youtube.com/watch?v=iKzOBWOHGFE) ‚∏± **+4k views** ‚∏± 00h 25m 43s
11. [**""Bruce Eckel: Rethinking Objects""**](https://youtube.com/watch?v=2Ul6WlKPcgY) ‚∏± **+3k views** ‚∏± 00h 32m 06s
12. [**""Trey Hunner: Intro to Python for Brand New Programmers""**](https://youtube.com/watch?v=v8o-7UICRNk) ‚∏± **+3k views** ‚∏± 02h 16m 41s
13. [**""Ted Patrick: Writing Serverless Python Web Apps with PyScript""**](https://youtube.com/watch?v=RVmltK006CU) ‚∏± **+3k views** ‚∏± 02h 55m 29s
14. [**""Brett Cannon: Python's syntactic sugar""**](https://youtube.com/watch?v=6gjvjkSs570) ‚∏± **+3k views** ‚∏± 00h 31m 11s

[**Here's a full list of PyCon 2023 talks sorted by views**](https://techtalksweekly.substack.com/p/all-pycon-2023-talks-sorted-by-views)

I hope you enjoyed it! Let me know if you'd like more compilations like this in /r/Python.

btw. I'm building a üì¨ newsletter called [**Tech Talks Weekly**](https://techtalksweekly.substack.com/)**. By subscribing, every Thursday you'll receive the top trending and most-watched tech talks from various software engineering conferences that have been recently uploaded.**","[{'Subreddit': 'python', 'Reddit_Title': '15 most watched talks from PyCon 2023 (US and AU)', 'CommentAuthor': 'TechTalksWeekly', 'Comment': ""Oh, and if you're short on time and can only watch one talk, then opt for #2 (https://www.youtube.com/watch?v=yc248GXjvA8)""}, {'Subreddit': 'python', 'Reddit_Title': '15 most watched talks from PyCon 2023 (US and AU)', 'CommentAuthor': 'ElliotSal', 'Comment': ""I built a tool to do this automatically as a way to explore htmx and django.\nPerhaps you and others might appreciate it:\n\n\nhttps://squamishspeaks.ca/\n\n\nI haven't bothered getting a domain for it yet, since I didn't know if people would care, so I just used one I had lying around, so ignore it's name.""}, {'Subreddit': 'python', 'Reddit_Title': '15 most watched talks from PyCon 2023 (US and AU)', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'python', 'Reddit_Title': '15 most watched talks from PyCon 2023 (US and AU)', 'CommentAuthor': 'richsmo', 'Comment': 'PSA: you need to mask up while watching the videos or you will be banned from future PyCons.'}, {'Subreddit': 'python', 'Reddit_Title': '15 most watched talks from PyCon 2023 (US and AU)', 'CommentAuthor': 'unjedai', 'Comment': 'This is great! Thank you!'}, {'Subreddit': 'python', 'Reddit_Title': '15 most watched talks from PyCon 2023 (US and AU)', 'CommentAuthor': 'stickman393', 'Comment': ""Absolutely. All of Benno's talks have been excellent.""}, {'Subreddit': 'python', 'Reddit_Title': '15 most watched talks from PyCon 2023 (US and AU)', 'CommentAuthor': 'autisticpig', 'Comment': 'I appreciate your efforts. bookmarked.'}, {'Subreddit': 'python', 'Reddit_Title': '15 most watched talks from PyCon 2023 (US and AU)', 'CommentAuthor': 'TechTalksWeekly', 'Comment': ""That's really nice, thanks for sharing!""}, {'Subreddit': 'python', 'Reddit_Title': '15 most watched talks from PyCon 2023 (US and AU)', 'CommentAuthor': 'TechTalksWeekly', 'Comment': ""Thanks, I've fixed it now!""}, {'Subreddit': 'python', 'Reddit_Title': '15 most watched talks from PyCon 2023 (US and AU)', 'CommentAuthor': 'chinawcswing', 'Comment': 'Here is the health policy for PyCon 2023:\n\nhttps://us.pycon.org/2023/about/health-safety-guidelines/\n\nTurns out that they actually required n95 masks.\n\nHere is the health policy for Pycon 2024:\n\nhttps://us.pycon.org/2024/about/health-safety-guidelines/\n\nAnd they are still requiring n95 masks.'}, {'Subreddit': 'python', 'Reddit_Title': '15 most watched talks from PyCon 2023 (US and AU)', 'CommentAuthor': 'richsmo', 'Comment': 'Thanks that was exactly my point. I would have loved to go but I cannot in any way support this misguided policy.'}]"
python,Why Python is slow and how to make it faster,https://www.reddit.com/r/Python/comments/191gmtm/why_python_is_slow_and_how_to_make_it_faster/,303,190,moo9001,1704703159.0,"As there was a recent discussion on Python's speed, here is a collection of some good articles discussing about Python's speed and why it poses extra challenges to be fast as CPU instructions/executed code.

* Pycon talk: [Anthony Shaw - Why Python is slow](https://www.youtube.com/watch?v=I4nkgJdVZFA)
* Pycon talk: [Mark Shannon - How we are making CPython faster](https://www.youtube.com/watch?v=wyty6sFMWI0)
* [Python 3.13 will ship with --enable-jit, --disable-gil](https://twitter.com/anthonypjshaw/status/1744144186478375373)
* [Python performance: it‚Äôs not just the interpreter](https://blog.kevmod.com/2020/05/19/python-performance-its-not-just-the-interpreter/)
* [Cinder: Instagram's performance-oriented Python fork](https://twitter.com/anthonypjshaw/status/1744144186478375373)

Also remember, the raw CPU speed rarely matters, as many workloads are IO-bound, network-bound, or a performance question is irrelevant... or: Python trades some software development cost for increased hardware cost. In these cases, Python extensions and specialised libraries can do the heavy lifting outside the interpreter (PyArrow, Polards, Pandas, Numba, etc.).","[{'Subreddit': 'python', 'Reddit_Title': 'Why Python is slow and how to make it faster', 'CommentAuthor': 'None', 'Comment': ""Seeing lots of comments being dismissive of the efforts of improving Python is a bit disheartening. Of course you should strive to write proper code, it's doesn't mean that having a good, fast implementation of the language isn't a large improvement. \n\nI'm thankful for people working on this, just getting glue code, scripts or not easily JIT'able code to run faster is very cool!""}, {'Subreddit': 'python', 'Reddit_Title': 'Why Python is slow and how to make it faster', 'CommentAuthor': 'LeCholax', 'Comment': ""I love python but i came to hate dynamic typing. Yeah you have the typing module but that's just a band-aid.\n\nAnd it boggles my mind that in 2024 such a mainstream language does not support proper multi-threading. Good thing they are working on this.""}, {'Subreddit': 'python', 'Reddit_Title': 'Why Python is slow and how to make it faster', 'CommentAuthor': 'Curious_Cantaloupe65', 'Comment': 'guys who are saying to write code fast instead of doing this should read this PEP https://peps.python.org/pep-0703/\nand read the remarks of all the people working in the industry'}, {'Subreddit': 'python', 'Reddit_Title': 'Why Python is slow and how to make it faster', 'CommentAuthor': 'chase32', 'Comment': ""Pandas is kinda magical. I had a one-off task to merge multiple huge csv's by common column names and just did a quick and dirty python script but killed it when my progress meter told me it would take 17 hours to complete.\n\nI didn't have that much time to get it done and wasn't super familiar with pandas but bit the bullet and converted the script. Was shocked that the pandas version took less than 10 minutes. \n\nIt's a little weird to learn at first but does so much, so fast.""}, {'Subreddit': 'python', 'Reddit_Title': 'Why Python is slow and how to make it faster', 'CommentAuthor': 'EdwinYZW', 'Comment': 'Different tools for different tasks. I don‚Äôt see anyone complaining the performance of shell scripts. If you need the performance, write a C++ library and call it in python, or even rewrite it in C++, which quite a lot of companies are doing now.'}, {'Subreddit': 'python', 'Reddit_Title': 'Why Python is slow and how to make it faster', 'CommentAuthor': 'Pyrotecx', 'Comment': 'Just go Mojo üî•'}, {'Subreddit': 'python', 'Reddit_Title': 'Why Python is slow and how to make it faster', 'CommentAuthor': 'sausix', 'Comment': ""C/C++ is slow too, if the programmer does it wrong.\n\nBut Python as same as Java and other languages should just not be compared to machine code level languages. Beyond that you can compile a Python application in various ways to be faster.\n\nPython is not meant to do heavy calculations. And that's not a bug neither a problem because NumPy and similar tools do exist.\n\nPeople should learn or at least understand Python correctly instead of having prejudices.""}, {'Subreddit': 'python', 'Reddit_Title': 'Why Python is slow and how to make it faster', 'CommentAuthor': 'ConsciousResponse620', 'Comment': ""The tricky part with python, especially with how I've seen it used in Data Science is that most implementations are in the cloud, most who provide near infinite computing power for little to almost no cost.\n\nI can never seem to incentivise my peers to write efficient code.""}, {'Subreddit': 'python', 'Reddit_Title': 'Why Python is slow and how to make it faster', 'CommentAuthor': 'elforce001', 'Comment': ""I'm betting on mojo to become a superset of python ala typescript.""}, {'Subreddit': 'python', 'Reddit_Title': 'Why Python is slow and how to make it faster', 'CommentAuthor': 'ChocolateMagnateUA', 'Comment': 'I really like that people begin to talk more and more about Python performance. All of this suggests that there is demand for making Python fast, and it admires me. This is the competition for performance that will make the whole industry benefit.'}, {'Subreddit': 'python', 'Reddit_Title': 'Why Python is slow and how to make it faster', 'CommentAuthor': 'bloothebear', 'Comment': ""If performance times are a big need for a certain service, wouldn't you just write a Microservice in a language with better performance metrics? \n\nWhat is the use-case for a performance-oriented Python fork vs a microservice written in C?\n\nAm I missing something here?""}]"
python,FireDucks - Compiler Accelerated DataFrame Library for Python with fully-compatible pandas API,https://fireducks-dev.github.io/,19,14,kirara0048,1703477559.0,,"[{'Subreddit': 'python', 'Reddit_Title': 'FireDucks - Compiler Accelerated DataFrame Library for Python with fully-compatible pandas API', 'CommentAuthor': 'BeverlyGodoy', 'Comment': 'Why not Polars? Is it faster than Polars?'}, {'Subreddit': 'python', 'Reddit_Title': 'FireDucks - Compiler Accelerated DataFrame Library for Python with fully-compatible pandas API', 'CommentAuthor': 'AstronomerTerrible49', 'Comment': 'This seems to be closed source. I have never integrated some closed source packages into my code and can‚Äôt even imagine doing so.'}, {'Subreddit': 'python', 'Reddit_Title': 'FireDucks - Compiler Accelerated DataFrame Library for Python with fully-compatible pandas API', 'CommentAuthor': 'Afrotom', 'Comment': 'What do you mean by ""Compiler Accelerated"" ?'}, {'Subreddit': 'python', 'Reddit_Title': 'FireDucks - Compiler Accelerated DataFrame Library for Python with fully-compatible pandas API', 'CommentAuthor': 'PurepointDog', 'Comment': 'I guess the backwards-compat with existing Pandas code? Too bad though, bc the polars api is so solid'}, {'Subreddit': 'python', 'Reddit_Title': 'FireDucks - Compiler Accelerated DataFrame Library for Python with fully-compatible pandas API', 'CommentAuthor': 'sylfy', 'Comment': 'Seems that there are so many dataframe libraries in Python, all claiming to do similar stuff, all claiming to be better than Pandas in some way. There‚Äôs Polars, Dask, cuDF, Ray, etc.'}, {'Subreddit': 'python', 'Reddit_Title': 'FireDucks - Compiler Accelerated DataFrame Library for Python with fully-compatible pandas API', 'CommentAuthor': 'bliepp', 'Comment': 'It\'s not clear immediately, but it\'s licensed under the 3-clause BSD. On the Website click on ""Get started"".'}, {'Subreddit': 'python', 'Reddit_Title': 'FireDucks - Compiler Accelerated DataFrame Library for Python with fully-compatible pandas API', 'CommentAuthor': 'bliepp', 'Comment': 'According to the website it uses JIT to speed up code execution. I think this is what they mean with that.'}, {'Subreddit': 'python', 'Reddit_Title': 'FireDucks - Compiler Accelerated DataFrame Library for Python with fully-compatible pandas API', 'CommentAuthor': 'Dasher38', 'Comment': 'Yeah, when I see ""compatible with pandas"" I think a few things:\n* What version of pandas ? They keep making breaking changes to core APIs. As a result I never succeeded in using any lib like that as actual replacement because it always falls over in some corner\n* I get pandas is widespread, yet it seems the majority of long time users still struggle (at least I do) on basic stuff. \n* Pandas API is eager and prevents optimizations in general, or make them a lot harder to implement\n\nIf it is not going to be compatible from source point of view on any non trivial code base and it sucks for new code and humans, why bother ? Especially now that we have better ...'}, {'Subreddit': 'python', 'Reddit_Title': 'FireDucks - Compiler Accelerated DataFrame Library for Python with fully-compatible pandas API', 'CommentAuthor': 'marsupiq', 'Comment': 'They are all better than pandas, because pandas is setting a low standard. Pandas made some poor design choices, even Wes McKinney says that. I‚Äôm not bashing pandas, I‚Äôve used it a lot and it gets the job done most of the time, but I think it‚Äôs fair to say that it‚Äôs not particularly great at anything it does.\n\nPolars has an amazing API, but compared to Dask or PySpark its scope is limited to single node applications (which may change in the future of course). Dask I see more as a cheap multi node extension of pandas (among other libraries), its API has the same limitations and its performance is not so great either, it‚Äôs just pushing the limits of what you can do without having to change your code too much (unlike PySpark).'}, {'Subreddit': 'python', 'Reddit_Title': 'FireDucks - Compiler Accelerated DataFrame Library for Python with fully-compatible pandas API', 'CommentAuthor': 'B-r-e-t-brit', 'Comment': 'This is ignoring one of pandas main use cases for wide format multidimensional array style data and operations. Essentially a labeled numpy. Yes xarray exists too, but pandas supports both styles (including long format dfs) which essentially no other library really does.'}, {'Subreddit': 'python', 'Reddit_Title': 'FireDucks - Compiler Accelerated DataFrame Library for Python with fully-compatible pandas API', 'CommentAuthor': 'None', 'Comment': 'Not really better. Pandas is so ubiquitous and well supported that any complaints over syntax are basically minor annoyance in comparison to any other consideration.'}]"
python,The hand-picked selection of the best Python libraries and tools of 2023,https://www.reddit.com/r/Python/comments/18n4guw/the_handpicked_selection_of_the_best_python/,100,28,dekked_,1703104385.0,"Hello Python Community!

We're thrilled to present our 9th edition of the **Top Python Libraries and tools**, where we've scoured the Python ecosystem for the most innovative and impactful developments of the year.

This year, it‚Äôs been the boom of Generative AI and Large Language Models (LLMs) which have influenced our picks. Our team has meticulously reviewed and categorized over 100 libraries, ensuring we highlight both the mainstream and the hidden gems.

**Explore the entire list with in-depth descriptions here**: [https://tryolabs.com/blog/top-python-libraries-2023](https://tryolabs.com/blog/top-python-libraries-2023)

Here‚Äôs a glimpse of our top 10 picks:

1. [**LiteLLM**](https://github.com/BerriAI/litellm) ‚Äî Call any LLM using OpenAI format, and more.
2. [**PyApp**](https://github.com/ofek/pyapp) ‚Äî Deploy self-contained Python applications anywhere.
3. [**Taipy**](https://github.com/Avaiga/taipy) ‚Äî Build UIs for data apps, even in production.
4. [**MLX**](https://github.com/ml-explore/mlx) ‚Äî Machine learning on Apple silicon with NumPy-like API.
5. [**Unstructured**](https://github.com/Unstructured-IO/unstructured) ‚Äî The ultimate toolkit for text preprocessing.
6. [**ZenML**](https://github.com/zenml-io/zenml) and [**AutoMLOps**](https://github.com/GoogleCloudPlatform/automlops) ‚Äî Portable, production-ready MLOps pipelines.
7. [**WhisperX**](https://github.com/m-bain/whisperX) ‚Äî Speech recognition with word-level timestamps & diarization.
8. [**AutoGen**](https://github.com/microsoft/autogen) ‚Äî LLM conversational collaborative suite.
9. [**Guardrails**](https://github.com/guardrails-ai/guardrails) ‚Äî Babysit LLMs so they behave as intended.
10. [**Temporian**](https://github.com/google/temporian) ‚Äî The ‚ÄúPandas‚Äù built for preprocessing temporal data.

Our selection criteria prioritize innovation, robust maintenance, and the potential to spark interest across a variety of programming fields. Alongside our top picks, we've put significant effort into the long tail, showcasing a wide range of tools and libraries that are valuable to the Python community.

A huge thank you to the individuals and teams behind these libraries. Your contributions are the driving force behind the Python community's growth and innovation. üöÄüöÄüöÄ

**What do you think of our 2023 lineup? Did we miss any library that deserves recognition?** Your feedback is vital to help us refine our selection each year.","[{'Subreddit': 'python', 'Reddit_Title': 'The hand-picked selection of the best Python libraries and tools of 2023', 'CommentAuthor': 'Drevicar', 'Comment': 'This feels too AI biased and misses the rest of the python community. I would say the project with the most impact on the whole ecosystem for 2023 would be ruff, followed by pydantic.'}, {'Subreddit': 'python', 'Reddit_Title': 'The hand-picked selection of the best Python libraries and tools of 2023', 'CommentAuthor': 'WasterDave', 'Comment': 'How does MLX even get a look in? If it only runs on recent editions of one brand of computer, I think it has excluded itself from being Pythonic.'}, {'Subreddit': 'python', 'Reddit_Title': 'The hand-picked selection of the best Python libraries and tools of 2023', 'CommentAuthor': 'SimplyJif', 'Comment': ""Have not tried AutoMLOps specifically, but my issue with libraries like that is that they typically abstract away too much to be useful in a production setting. I (a DS) feel like we treat data scientists with kid gloves too much. Do your own yaml, it won't kill you!""}, {'Subreddit': 'python', 'Reddit_Title': 'The hand-picked selection of the best Python libraries and tools of 2023', 'CommentAuthor': 'jimtk', 'Comment': ""Way too much AI stuff. \n\nI'm not saying there shouldn't be any, but this is an almost exclusive AI related list. Previous years were more balanced.""}, {'Subreddit': 'python', 'Reddit_Title': 'The hand-picked selection of the best Python libraries and tools of 2023', 'CommentAuthor': 'notreallymetho', 'Comment': 'Unstructured / Guardrails both seem really interesting. I‚Äôm a dev by trade and have been toying with ML the last few weeks and have found it somewhat hard to do (huggingface makes it easier for sure). I‚Äôve messed with fine tuning both using torch / polars and hugging face / pandas. Curious to see if this‚Äôll help me out. I don‚Äôt like unstructured being an API thing though - namely because of the data I‚Äôm working with, I won‚Äôt be able to feed it through there due to our security. Still will be interesting to mess with it!'}, {'Subreddit': 'python', 'Reddit_Title': 'The hand-picked selection of the best Python libraries and tools of 2023', 'CommentAuthor': 'semicausal', 'Comment': '[Rerun.io](https://Rerun.io) I feel is missing from this list - immediate mode GUI library for instrumenting & visualizing robotics, computer vision, and other datasets'}, {'Subreddit': 'python', 'Reddit_Title': 'The hand-picked selection of the best Python libraries and tools of 2023', 'CommentAuthor': 'ForeignSource0', 'Comment': '[Wireup](https://github.com/maldoinc/wireup) is missing from this list. \n\nHelps you achieve DI for when groups of scripts need to grow into a proper application and you need to implement software design patterns and other chores such as testing.'}, {'Subreddit': 'python', 'Reddit_Title': 'The hand-picked selection of the best Python libraries and tools of 2023', 'CommentAuthor': 'semicausal', 'Comment': ""My coworker recently created the **xetcache** library, targeted at Jupyter Notebook users.\n\n[https://github.com/xetdata/xetcache](https://github.com/xetdata/xetcache) \n\nIt's newer and I'm biased, but hey :)""}, {'Subreddit': 'python', 'Reddit_Title': 'The hand-picked selection of the best Python libraries and tools of 2023', 'CommentAuthor': 'None', 'Comment': 'This is a pretty bad list. At least given what the title claims it is supposed to be a list of. These are definitely not the best python libraries/tools of 2023. In fact most of these are a worse and/or less developed version of a much bigger project. \n\nMaybe if you were to title this ‚Äúunder-appreciated python tools that are worth a look in 2024‚Äù then this list would make more sense.\n\nAlso, you might go a step further and say that these are ML specific rather than python in general. There is a lot more going on in the python dev world than just LLM models and data viz.'}, {'Subreddit': 'python', 'Reddit_Title': 'The hand-picked selection of the best Python libraries and tools of 2023', 'CommentAuthor': 'sowenga', 'Comment': 'Thanks for sharing! Great list.'}, {'Subreddit': 'python', 'Reddit_Title': 'The hand-picked selection of the best Python libraries and tools of 2023', 'CommentAuthor': 'everything_in_sync', 'Comment': 'This may be a dumb question but how/are/do people that develop these libraries make money? If everything is free are they selling data? Are they simply doing it out of kindness and potential career advancement?'}]"
python,Beam: Run Python functions on the cloud in seconds,https://www.reddit.com/r/Python/comments/18hiqyq/beam_run_python_functions_on_the_cloud_in_seconds/,155,55,velobro,1702479779.0,"Hi r/python!

I‚Äôm Eli, and my co-founder and I built [Beam](https://beam.cloud) to quickly get your Python code running on the cloud. All you need to do is install a Python SDK, add a decorator to your code, and run a CLI command to get a cloud endpoint for your function.

Here is an extremely simple example of a function that can be deployed onto a GPU, as a REST API:

    from beam import App, Runtime, Image
    
    
    # Register your function to Beam
    app = App(
       name=""quickstart"",
       runtime=Runtime(gpu=""A10G"", image=Image(python_packages=[""requests"", ""pandas""])),
    )
    
    
    # Add a decorator to any function to run it remotely
    @app.rest_api()
    def hello_world():
       return {""This is running on the cloud remotely!""}

This function can be deployed as a REST API by running only one command: `beam deploy app.py:hello_world`

When you run this command, you‚Äôll get a web endpoint with load balancing, authentication, and autoscaling. There‚Äôs also a web dashboard to view logs, metrics, and other data you‚Äôd want to monitor for your app.

We also have GPU support, so it‚Äôs super easy to run compute-heavy workloads on the cloud using Beam.

**The Pricing Model**

Pricing is pay-for-what-you-use. Beam is serverless, so your apps will turn off when you‚Äôre not using them. If you don‚Äôt use your API, you don‚Äôt pay anything. It‚Äôs pretty simple.

Also, Beam has a 10 hour free tier! You can sign up and immediately start running workloads for free.

**Things you can build with Beam**

* [GPU-accelerated APIs for AI inference](https://docs.beam.cloud/examples/stable-diffusion-gpu)
* [Web scrapers](https://docs.beam.cloud/examples/reddit-posts)
* [ASGI apps](https://docs.beam.cloud/examples/gradio)
* [Cron jobs](https://docs.beam.cloud/deployment/schedule)

This is a relatively new platform, so it would be great to hear your thoughts and feedback. Thanks for checking it out!

[https://docs.beam.cloud](https://docs.beam.cloud)","[{'Subreddit': 'python', 'Reddit_Title': 'Beam: Run Python functions on the cloud in seconds', 'CommentAuthor': 'clesiemo3', 'Comment': 'Why the name Beam when Apache Beam already exists?'}, {'Subreddit': 'python', 'Reddit_Title': 'Beam: Run Python functions on the cloud in seconds', 'CommentAuthor': 'DanklyNight', 'Comment': 'Couple of questions, as I would be a potential customer.  \n\n\n* Can it be ran on our own infrastructure?\n* How smart it is regarding functions being called outside of that function?\n* How does it work with localised data sources, lets say my first step is cleaning a few billion datapoints, how does beam handle that?'}, {'Subreddit': 'python', 'Reddit_Title': 'Beam: Run Python functions on the cloud in seconds', 'CommentAuthor': 'LongerHV', 'Comment': 'For a second I thought you are running Python code on Erlang VM (aka BEAM) üíÄ'}, {'Subreddit': 'python', 'Reddit_Title': 'Beam: Run Python functions on the cloud in seconds', 'CommentAuthor': 'rsumit123', 'Comment': 'How is it different from AWS lambda?'}, {'Subreddit': 'python', 'Reddit_Title': 'Beam: Run Python functions on the cloud in seconds', 'CommentAuthor': 'gagarin_kid', 'Comment': 'The product and the documentation is really pretty cool. \n\nIn enterprise setting, the major pain points for me as a ""cloud-inexperienced"" developer are the authentication and permissions management for my runtime (Azure Functions / AWS Lambda / Container Services etc.). After they are configured and the IaC with CI/CD of my code base is set-up, I just deal with the code logic ... So bottom line, the initial set-up is often challenging and not the further development itself.\n\nI think providing your service to be self-hosted and letting the company\'s IT department pre-configure it with sufficient permission would be really cool!'}, {'Subreddit': 'python', 'Reddit_Title': 'Beam: Run Python functions on the cloud in seconds', 'CommentAuthor': 'phira', 'Comment': 'What do you see as your key differentiators versus other players in this space like Modal?'}, {'Subreddit': 'python', 'Reddit_Title': 'Beam: Run Python functions on the cloud in seconds', 'CommentAuthor': 'FancyASlurpie', 'Comment': 'Who are you targeting as your main users? Is it aimed for small startups, standalone devs or large enterprises? It seems to go against things like infrastructure as code / terraform style deployments, do you plan on integrating with anything like those at some point?'}, {'Subreddit': 'python', 'Reddit_Title': 'Beam: Run Python functions on the cloud in seconds', 'CommentAuthor': 'ReporterNervous6822', 'Comment': 'Coiled already has this no? Also Apache beam lol'}, {'Subreddit': 'python', 'Reddit_Title': 'Beam: Run Python functions on the cloud in seconds', 'CommentAuthor': 'faster_puppy222', 'Comment': 'Hello, long shot question. \n\nFor people like myself who have a developer background but are extremely new to python and web applications‚Ä¶ can you explain _briefly_ what **beam** is doing..'}, {'Subreddit': 'python', 'Reddit_Title': 'Beam: Run Python functions on the cloud in seconds', 'CommentAuthor': 'patrick91it', 'Comment': ""very cool! do you think we could collaborate to make it easy to deploy Strawberry (GraphQL) to beam? I'd love that!""}, {'Subreddit': 'python', 'Reddit_Title': 'Beam: Run Python functions on the cloud in seconds', 'CommentAuthor': 'lightmatter501', 'Comment': 'How do I pin package versions, or request variants like, for example, tensorflow with avx512 and cuda supoort? \n\nHow would I provide my own packages (potentially with native components)? \n\nIs there an ARM version? SVE is much better than avx512 for some tasks. \n\n‚ÄúUnlike CPU workloads, GPU workloads can currently only process one task at a time.‚Äù GPUs are literally designed to do multiple things at a time. Why can‚Äôt I split a single larger GPU between 10 or 15 smaller tasks which aren‚Äôt GPU compute or memory bandwidth bound? \n\nIf I don‚Äôt trust you, can I run the app inside of secure enclaves? \n\nHow are you storing secrets? Can I bring my own keys?'}]"
python,Will Pandas have streaming in Future??,https://www.reddit.com/r/Python/comments/18b5bsg/will_pandas_have_streaming_in_future/,86,20,__albatross,1701755960.0,"As Pandas has switched to arrow backend from version 2.0, is there a possibility that we can see Lazy Evaluation or streaming in Pandas so that we'll be able to process datasets larger than memory on a machine as we have in Polars??","[{'Subreddit': 'python', 'Reddit_Title': 'Will Pandas have streaming in Future??', 'CommentAuthor': 'None', 'Comment': ""Didn't realize this was about Python and got really confused""}, {'Subreddit': 'python', 'Reddit_Title': 'Will Pandas have streaming in Future??', 'CommentAuthor': 'tunisia3507', 'Comment': ""Polars' API is much more streaming-friendly than pandas'. And you can easily dip back into pandas when necessary because they can just pass an arrow memory buffer between them.""}, {'Subreddit': 'python', 'Reddit_Title': 'Will Pandas have streaming in Future??', 'CommentAuthor': 'houseofleft', 'Comment': ""I think the main issue with that would be that pandas has an eager execution model and several parts of the api (I'm thinking of stuff like setting values by index slicing) wouldn't make sense without it.\n\nDask is a project that's lazily executed distributed pandas, so I think streaming would probably be more likely to show up there first (I haven't heard any plans of including it though)\n\nThat said, never underestimate the sheer size and backing that pandas has. There's a mammoth community behind it, so I guess anything is possible.\n\nEDIT: oh woah! Dask actually prototyped this a few years back so looks like it's 100% possible: https://blog.dask.org/2017/10/16/streaming-dataframes-1""}, {'Subreddit': 'python', 'Reddit_Title': 'Will Pandas have streaming in Future??', 'CommentAuthor': 'Zomunieo', 'Comment': 'Most of the pandas API isn‚Äôt compatible with streaming or lazy evaluation so it would take some major reworking.'}, {'Subreddit': 'python', 'Reddit_Title': 'Will Pandas have streaming in Future??', 'CommentAuthor': 'just4nothing', 'Comment': 'Awkward does lazy evaluation and there is an awkward-pandas library: https://awkward-pandas.readthedocs.io/en/latest/\n\nSo in theory you can have lazy evaluation by doing an extra step. Or am I misunderstanding the library?'}, {'Subreddit': 'python', 'Reddit_Title': 'Will Pandas have streaming in Future??', 'CommentAuthor': 'PanZWarzywniaka', 'Comment': 'For streaming data I suggest using pyspark.'}, {'Subreddit': 'python', 'Reddit_Title': 'Will Pandas have streaming in Future??', 'CommentAuthor': 'phofl93', 'Comment': 'Lazy is likely to land in pandas in the future, streaming is unlikely for now, that‚Äôs not a focus at the moment'}, {'Subreddit': 'python', 'Reddit_Title': 'Will Pandas have streaming in Future??', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'python', 'Reddit_Title': 'Will Pandas have streaming in Future??', 'CommentAuthor': 'ApolloJackson', 'Comment': 'Is the arrow backend default now in pandas 2.0?'}, {'Subreddit': 'python', 'Reddit_Title': 'Will Pandas have streaming in Future??', 'CommentAuthor': 'Theoverlookedclimber', 'Comment': ""The perspective python backend might work for some streaming use cases https://github.com/finos/perspective it can output arrow so you've nice compatibility with polars/pandas these days""}, {'Subreddit': 'python', 'Reddit_Title': 'Will Pandas have streaming in Future??', 'CommentAuthor': 'None', 'Comment': 'How would you add streaming to an eagerly evaluated piece of software?'}]"
python,Am I stupid because I don‚Äôt have a CS degree?,https://www.reddit.com/r/Python/comments/189es24/am_i_stupid_because_i_dont_have_a_cs_degree/,0,88,ReputationCold9410,1701555969.0,"I am currently employed in data management and have been using Python (specifically pandas and numpy) and SQL regularly for work for the past 6 years but sometimes I feel stupid because I lack the terminology since I am self-taught and do not have a CS degree even though I have created and deployed web apps, created internal dashboards, automated tasks/reports, etc. 

All of my supervisors have been  happy with my work so am I just overthinking things or am I stupid because I don‚Äôt have a CS degree?","[{'Subreddit': 'python', 'Reddit_Title': 'Am I stupid because I don‚Äôt have a CS degree?', 'CommentAuthor': 'None', 'Comment': ""No you're not stupid for not having a CS degree. But you are stupid for thinking you might be stupid for not having a CS degree""}, {'Subreddit': 'python', 'Reddit_Title': 'Am I stupid because I don‚Äôt have a CS degree?', 'CommentAuthor': 'WeakChampionship743', 'Comment': 'I‚Äôve built a variety of projects and been in the field longer than you, self taught.  Used to feel this way but then realized my non engineering background brings a different aspect to problem solving than my peers with cs degrees.  Both sides are good, not one is better than the other.  It‚Äôs good to learn the other side but arguably experience is by far more valuable (imo)'}, {'Subreddit': 'python', 'Reddit_Title': 'Am I stupid because I don‚Äôt have a CS degree?', 'CommentAuthor': 'wineblood', 'Comment': 'A degree gives you a wide foundation which can be nice for some employers and as you\'ve noticed, there\'s terminology you don\'t know. I encountered this early on in my career when our lead dev didn\'t know what polymorphism meant but he was still a way better coder than I was.\n\nMy suggestion is that you read up on some software basics and follow terminology you don\'t know. Find a term you don\'t know, look it up, maybe encounter more new terms and keep going. This should help you with gaps in terminology.\n\nA degree isn\'t necessary, experience counts for a lot more and the only question that matters is ""can you do the job?"".'}, {'Subreddit': 'python', 'Reddit_Title': 'Am I stupid because I don‚Äôt have a CS degree?', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'python', 'Reddit_Title': 'Am I stupid because I don‚Äôt have a CS degree?', 'CommentAuthor': 'arcticfox', 'Comment': 'Stupid is the wrong word.  Ignorant may be a better one.  The good news is that ignorance is curable! :-)\n\nI\'ve been both a prof in CS and worked in industry for 35+ years.  I absolutely LOVE self-taught people because it shows a lot of ambition and drive to learn complex topics on your own.  However, I have also found that self-taught people typically have large gaps in their knowledge mostly because self-taught people tend to be interest-driven and a lot of concepts in CS aren\'t that interesting to a lot of people.  We see that in CS degree programs:  lots of students do not like Theoretical CS and you\'ll often hear them saying ""when will I ever use this?""\n\nWell, they can\'t use it if they never learn it and the fact that these people can go on to be successful in CS convinces them that these topics are useless.  However, people who do learn them use them everyday because it shapes how they understand the world and they typically end up producing far better solutions.  Much of my career has included coming in as a consultant somewhere to fix all the problems caused by people who fundamentally don\'t know what they are doing.  You\'d be absolutely amazed how many people don\'t know what a race-condition is, don\'t know how the halting problem affects distributed systems, aren\'t able to recognise unsolvable problems, don\'t understand that constraining a problem doesn\'t solve it but rather obscures it, and do not understand that the analytic method you use significantly affects the solution you produce (just to name a few).  These people often introduce huge amounts of accidental complexity to the point where their solutions collapse under their own weight when implemented.'}, {'Subreddit': 'python', 'Reddit_Title': 'Am I stupid because I don‚Äôt have a CS degree?', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'python', 'Reddit_Title': 'Am I stupid because I don‚Äôt have a CS degree?', 'CommentAuthor': 'bostonkittycat', 'Comment': 'I studied psychology but work as a Python and JavaScript dev. No one has ever called me stupid. It is funny when people find out I used to work as a psychotherapist they pause for a second and smile at me. I think you are overthinking. I take a capitalist approach to development. If someone is willing to pay you for your dev time then you are a developer. No need to doubt it.'}, {'Subreddit': 'python', 'Reddit_Title': 'Am I stupid because I don‚Äôt have a CS degree?', 'CommentAuthor': 'packetgeeknet', 'Comment': 'I‚Äôm a high school dropout and have been working in the technology industry for 22 years. Look at Kelsey Hightower. He just retired at 42 as a distinguished engineer from google. He doesn‚Äôt have a college degree. You‚Äôre doing just fine.'}, {'Subreddit': 'python', 'Reddit_Title': 'Am I stupid because I don‚Äôt have a CS degree?', 'CommentAuthor': 'loyoan', 'Comment': ""As long your work solves problems of other people, you don't need to be too harsh to yourself. :) I know plenty of people that have CS degrees who don't have the practical experience to build something themselves (like deploying and writing a web app).""}, {'Subreddit': 'python', 'Reddit_Title': 'Am I stupid because I don‚Äôt have a CS degree?', 'CommentAuthor': 'nvec', 'Comment': ""It's not necessarily stupidity to not know something you've never learned, and if you're willing to put the effort into learning it then it's certainly not stupid. \n\nWhen you come across some new terminology or concepts note them down for later research, keep a dedicated page in your notes for this, and spend time reading round the topic rather than just learning the definition.  \n  \nYou've mentioned Big O, which is a classic example of a compsci idea that's not often self-taught. Don't just find out what Big O is but find out what it means, how it relates to the nested loops you're probably used to avoiding, and then a few search/sort algorithms. Great. Now you've not got the topic into as much depth as it's taught in an undergrad course but you've probably got as much as someone who graduated a year ago and forgot the bits they're not using, and probably more than someone who graduated ten years back.\n\nYou want more then a bit more about data structures and how they affect performance of standard algorithms. It's the type of thing only C++ coders really use on a day-to-day basis, choosing Array vs. Vector, List, Deque and Forward List, but it's where Big O really hits the lowest level.""}, {'Subreddit': 'python', 'Reddit_Title': 'Am I stupid because I don‚Äôt have a CS degree?', 'CommentAuthor': 'BigCrackZ', 'Comment': ""You're likely to be over thinking, and you're not stupid. Sounds like you have a knack for data, databases, and development.\n\nI've been a developer (database and software) for under 30 years. Over 20 years ago, I worked with a bloke who left school when he was 16, got a job as a boiler maker (don't know if they still exist), in the late 70's early 80's, the factory he worked at got a computer system, which were green screens hooked up to a main system somewhere (don't know the specifics). But him being the youngest one there, they always put him on the computer.\n\nIn the late 90's when I met and started working with him, he ws one of the best DBA's I have worked with, and was renoun for his skill. From MS SQL Server 7.0, to System/36, AS/400, DB2, even became good at SAP. On Windows NT, HPUX, Solaris, and Redhat Linux at the time.\n\nIf you have the inclination and time for it, which it looks like you have, you will become just as good.\n\nKeep at it, plenty of stuff on YouTube if you want to brush up, or learn a few more things.""}]"
python,What was for you the biggest thing that happened in the Python ecosystem in 2023?,https://www.reddit.com/r/Python/comments/188fo2w/what_was_for_you_the_biggest_thing_that_happened/,380,128,Bricoto,1701447206.0,"Of course, there was Python 3.12, but I'm not only talking about version releases or libraries but also about projects that got big this year, events, etc...  


EDIT : so nobody cared about pandas 2,  mojo or python in Excel ? ","[{'Subreddit': 'python', 'Reddit_Title': 'What was for you the biggest thing that happened in the Python ecosystem in 2023?', 'CommentAuthor': 'pacific_plywood', 'Comment': 'Pydantic v2 and the growth of Polars have both been big'}, {'Subreddit': 'python', 'Reddit_Title': 'What was for you the biggest thing that happened in the Python ecosystem in 2023?', 'CommentAuthor': 'CloudFaithTTV', 'Comment': 'PyDantic, Ruff, Pola.rs, as others have mentioned, GIL with 3.12, are all great. I‚Äôve also noticed many ML-related frameworks picking up sophistication\n\nGreat mentions as well that come to mind, are FASTApi, perhaps just new to me but the auto documentation is worthwhile to understand, and my personal favorite, Reflex(previously pynecone) which is a react compatible front end framework. \n\nNot directly python but claiming to be a superset of python is Mojo, I‚Äôm most excited about this personally as the versatility and integration of the Python ecosystem really set the stage for a new most popular programming language, time will tell of course but Chris Lattner sells it very well too.\n\n2024 is going to be a big year I feel with all of these pieces fitting together better than ever.'}, {'Subreddit': 'python', 'Reddit_Title': 'What was for you the biggest thing that happened in the Python ecosystem in 2023?', 'CommentAuthor': 'Raygereio5', 'Comment': "">nobody cared about python in Excel ?\n\nWith the way it's been implemented it's honestly hard come up with an actual use case for it. When people were clamoring for python in Excel, I think they wanted an alternative to VBA. Not this. \n\nI mean, it's cool that I can type some python code in Excel's formula bar. But I don't need python to have Excel give me the standard deviation of a dataset. And if I have a dataset that's large enough for performance to be a concern, then I'm not using Excel.""}, {'Subreddit': 'python', 'Reddit_Title': 'What was for you the biggest thing that happened in the Python ecosystem in 2023?', 'CommentAuthor': 'Dazzling-Reason-5140', 'Comment': 'ruff'}, {'Subreddit': 'python', 'Reddit_Title': 'What was for you the biggest thing that happened in the Python ecosystem in 2023?', 'CommentAuthor': 'OccultEyes', 'Comment': ""A lot of great features and libraries have been added to python in 2023.\n\nI enjoy ruff, pydantic, polars, ect.\n\nBut the native python feature I've enjoyed the most is pattern matching.""}, {'Subreddit': 'python', 'Reddit_Title': 'What was for you the biggest thing that happened in the Python ecosystem in 2023?', 'CommentAuthor': 'Tangelus', 'Comment': 'Pydantic, FastAPI, Polars boom, and now FastUI, Typer and SQLModel'}, {'Subreddit': 'python', 'Reddit_Title': 'What was for you the biggest thing that happened in the Python ecosystem in 2023?', 'CommentAuthor': 'collectablecat', 'Comment': ""I think it's fair to say that Rust was the biggest thing to happen to the python ecosystem this year.""}, {'Subreddit': 'python', 'Reddit_Title': 'What was for you the biggest thing that happened in the Python ecosystem in 2023?', 'CommentAuthor': 'amadea_saoirse', 'Comment': 'Litestar'}, {'Subreddit': 'python', 'Reddit_Title': 'What was for you the biggest thing that happened in the Python ecosystem in 2023?', 'CommentAuthor': 'GrooseIsGod', 'Comment': 'Pygbag so I can put pygame projects into websites'}, {'Subreddit': 'python', 'Reddit_Title': 'What was for you the biggest thing that happened in the Python ecosystem in 2023?', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'python', 'Reddit_Title': 'What was for you the biggest thing that happened in the Python ecosystem in 2023?', 'CommentAuthor': 'janitux', 'Comment': 'I really liked discovering typer :)'}]"
python,Using Polars in a Pandas world,https://pythonspeed.com/articles/polars-pandas-interopability/,43,22,itamarst,1701358326.0,,"[{'Subreddit': 'python', 'Reddit_Title': 'Using Polars in a Pandas world', 'CommentAuthor': 'AmbidextrousTorso', 'Comment': ""Polars is awesome. Pandas can now run on Cudas, but since I'm mainly using a laptop without Nvidia GPU, for me Polars has proved to be much faster. And not having index has turned out to simplify things quite a bit.""}, {'Subreddit': 'python', 'Reddit_Title': 'Using Polars in a Pandas world', 'CommentAuthor': 'LaOnionLaUnion', 'Comment': 'I‚Äôm interested in Polars. A lot of the work I‚Äôm doing with Pandas involves data exported in Excel. I can tell you that I haven‚Äôt found a way to get Polars to handle Excel well.\n\nI‚Äôll likely try it the next time I get data in csv which I prefer anyhow even in üêº'}, {'Subreddit': 'python', 'Reddit_Title': 'Using Polars in a Pandas world', 'CommentAuthor': 'rcpz93', 'Comment': ""I've switched to polars about a year ago or something, and now I use Polars almost exclusively, unless I really need to use Pandas for some reason (I work mainly with csv/parquet files). \n\nI find Polars' expressions so much more convenient to use than Pandas' syntax, and I can build far more complex pipelines with it. Lazy operations are also a godsend when I'm working with millions of rows at the same time. \n\nI usually do all my data prep in Polars and then convert the df to Pandas for plotting. I only ever need Pandas for formatting and for preparing pivot tables (multi-level indexes are way better in Pandas than Polars).""}, {'Subreddit': 'python', 'Reddit_Title': 'Using Polars in a Pandas world', 'CommentAuthor': 'AurigaA', 'Comment': 'Is there a polars specific subreddit yet? I searched but it didn‚Äôt come up for me'}, {'Subreddit': 'python', 'Reddit_Title': 'Using Polars in a Pandas world', 'CommentAuthor': 'B-r-e-t-brit', 'Comment': ""> not having index has turned out to simplify things quite a bit\n\nDepends on what you‚Äôre doing. Indexes have a lot of value that polars ignores (they have admittedly  become less vocal about this point though).\n\nBump prices in March 2023 up 10%:\n\n    # pandas\n    prices_df.loc['2023-03'] *= 1.1\n\n    # polars\n    polars_df.with_column(\n        pl.when(pl.col('timestamp').is_between(\n            datetime('2023-03-01'),\n            datetime('2023-03-31'),\n            include_bounds=True\n        )).then(pl.col('val') * 1.1)\n        .otherwise(pl.col('val'))\n        .alias('val')\n    )\n\nAdd expected temperature offsets to base temperature forecast at the state county level:\n\n    # pandas\n    temp_df + offset_df\n\n    # polars\n    (\n        temp_df\n        .join(offset_df, on=['state', 'county', 'timestamp'], suffix='_r')\n        .with_column(\n           ( pl.col('val') + pl.col('val_r')).alias('val')\n        )\n        .select(['state', 'county', 'timestamp', 'val'])\n    )""}, {'Subreddit': 'python', 'Reddit_Title': 'Using Polars in a Pandas world', 'CommentAuthor': 'Pinklotuseater13', 'Comment': 'How recent was the CUDA support? I assume it does somewith similar to Jax for gpu utilization?'}, {'Subreddit': 'python', 'Reddit_Title': 'Using Polars in a Pandas world', 'CommentAuthor': 'commandlineluser', 'Comment': 'The default `.read_excel` engine in Polars is more ""minimal"" but ""fast"".\n\nHave you tried `openpyxl`?\n\n> New in version 0.19.3: Added support for ‚Äúopenpyxl‚Äù engine\n\nhttps://pola-rs.github.io/polars/py-polars/html/reference/api/polars.read_excel.html#polars-read-excel'}, {'Subreddit': 'python', 'Reddit_Title': 'Using Polars in a Pandas world', 'CommentAuthor': 'Amgadoz', 'Comment': 'You can reas it from excel using pandas and then switch to polars'}, {'Subreddit': 'python', 'Reddit_Title': 'Using Polars in a Pandas world', 'CommentAuthor': 'PurepointDog', 'Comment': 'You can tell that they planned out Polars at least a pit before they started making it, as opposed to Pandas where they just went for it'}, {'Subreddit': 'python', 'Reddit_Title': 'Using Polars in a Pandas world', 'CommentAuthor': 'itamarst', 'Comment': 'No, but they have a Discord.'}, {'Subreddit': 'python', 'Reddit_Title': 'Using Polars in a Pandas world', 'CommentAuthor': 'commandlineluser', 'Comment': ""`with_column` is gone now.\n\n[In]:\n\n    df.with_columns(\n        pl.when(pl.col('date').dt.to_string('%Y-%m') == '2023-03')\n          .then(pl.col('val') * 1.1)\n          .otherwise(pl.col('val'))\n    )\n\n[In]:\n\n    index = 'state', 'county', 'timestamp'\n    (temp_df\n      .join(offset_df, on=index)\n      .select(*index, pl.col('val') + pl.col('val_right'))\n    )""}]"
python,"What's up Python? New args syntax, subinterpreters FastAPI and cuda pandas‚Ä¶",https://www.bitecode.dev/p/whats-up-python-new-args-syntax-subinterpreters,146,45,alicedu06,1701206687.0,,"[{'Subreddit': 'python', 'Reddit_Title': ""What's up Python? New args syntax, subinterpreters FastAPI and cuda pandas‚Ä¶"", 'CommentAuthor': 'Tinche_', 'Comment': '""I would welcome an subinterpreter based gunicorn personally, so I can finally share caches and pools between my workers.""\n\nSubinterpreters can\'t share those...?'}, {'Subreddit': 'python', 'Reddit_Title': ""What's up Python? New args syntax, subinterpreters FastAPI and cuda pandas‚Ä¶"", 'CommentAuthor': 'fatbob42', 'Comment': 'Meh on the argument syntax. Addresses a very limited situation.'}, {'Subreddit': 'python', 'Reddit_Title': ""What's up Python? New args syntax, subinterpreters FastAPI and cuda pandas‚Ä¶"", 'CommentAuthor': 'abrazilianinreddit', 'Comment': ""It's just me or lately there has been an increase in syntactic sugar PEPs? Which is pretty annoying, since they don't add anything of value and make the language more confusing.""}, {'Subreddit': 'python', 'Reddit_Title': ""What's up Python? New args syntax, subinterpreters FastAPI and cuda pandas‚Ä¶"", 'CommentAuthor': 'Eigenspan', 'Comment': 'Honestly I much prefer var = var over just var = \n\nIt looks so unintuitive to just see an empty assignment like that‚Ä¶'}, {'Subreddit': 'python', 'Reddit_Title': ""What's up Python? New args syntax, subinterpreters FastAPI and cuda pandas‚Ä¶"", 'CommentAuthor': 'marsupiq', 'Comment': 'Beyond the syntactic sugar, I believe the new args syntax will incentivize people to prefer keyword arguments over positional arguments and to use consistent names. Both are good things!'}, {'Subreddit': 'python', 'Reddit_Title': ""What's up Python? New args syntax, subinterpreters FastAPI and cuda pandas‚Ä¶"", 'CommentAuthor': 'duckbanni', 'Comment': 'Personally I\'m a big fan of the proposed argument syntax. It\'s something I was surprised didn\'t already exist in python as it exists in other languages like OCaml. It is consistent with the new ""debug"" syntax in f-strings. My only complaint with the proposal is that it should also extend to matching object attributes inside a `match`.\n\nI also would like to address that it is not ""implicit"" as some here suggested. An inferred type hint or a positional argument can be considered implicit because something non-obvious is inferred by the language that can be a source of errors for a reader. The proposed syntax is 100% unambiguous and is basically equivalent to something like `+=`.'}, {'Subreddit': 'python', 'Reddit_Title': ""What's up Python? New args syntax, subinterpreters FastAPI and cuda pandas‚Ä¶"", 'CommentAuthor': 'jabz_ali', 'Comment': 'I‚Äôm interested in sub-interpreters as I have a valid use case - running the same Python script in different interpreters for regression testing. At present I am using subprocess and venvs and with each venv taking up 400+ MB of disk space and the time it takes to create a new venv this could be great for me although would be interested in seeing the performance impact do these sub interpreters run in the same process? One of the advantages of using subprocess is that it‚Äôs a new process so potentially there is some parallelisation benefit there.'}, {'Subreddit': 'python', 'Reddit_Title': ""What's up Python? New args syntax, subinterpreters FastAPI and cuda pandas‚Ä¶"", 'CommentAuthor': 'Paddy3118', 'Comment': 'Pylint is forever moaning when I reuse a global name as a function argument (which happens in my initial development). I would not want the bare equals for that, and also because it might look ugly when mixed.'}, {'Subreddit': 'python', 'Reddit_Title': ""What's up Python? New args syntax, subinterpreters FastAPI and cuda pandas‚Ä¶"", 'CommentAuthor': 'njharman', 'Comment': '> need to pass bunch of kwargs with same name.\n\nAlmost never. Certainly not enough to warrant more syntax.\n\nArgs vs kwargs have meaning. They inform how callable should/can be used. Non-optional args should not be keyword.'}, {'Subreddit': 'python', 'Reddit_Title': ""What's up Python? New args syntax, subinterpreters FastAPI and cuda pandas‚Ä¶"", 'CommentAuthor': 'wxtrails', 'Comment': ""Really not a fan of the dangling equals - I'd almost prefer it to be in front. Or just...no.""}, {'Subreddit': 'python', 'Reddit_Title': ""What's up Python? New args syntax, subinterpreters FastAPI and cuda pandas‚Ä¶"", 'CommentAuthor': 'PriorProfile', 'Comment': 'Yeah what happened to ‚Äúexplicit is better than implicit‚Äù'}]"
python,Travis Oliphant - One of the greatest computer scientists/programmers of all time?,https://www.reddit.com/r/Python/comments/180r4bg/travis_oliphant_one_of_the_greatest_computer/,201,70,RadiantHovercraft6,1700599911.0,"I love learning about ‚Äúfamous‚Äù computer scientists like Dennis Ritchie (inventor of C and Unix) and Linus Torvalds (creator of Git and Linux).

But I don‚Äôt see Travis Oliphant‚Äôs name pop up that often.

This dude literally founded Anaconda, created NumPy, and helped create SciPy.

By extension, without NumPy, Pandas and SciKit-Learn would not look the same (or even exist).

This single man created the most widely used tools for data science in the world. Without him, I doubt Python would be as widely adopted, nor would data science and machine learning be as accessible to beginner programmers as it is.

Entire fields and careers owe a lot to this man. So just wanted to shout out Travis Oliphant, and also ask - do you think he deserves to go down in history alongside the Turings, Torvalds and Ritchies of the world? Or are his contributions to computer programming not comparable?","[{'Subreddit': 'python', 'Reddit_Title': 'Travis Oliphant - One of the greatest computer scientists/programmers of all time?', 'CommentAuthor': 'ricekrispysawdust', 'Comment': ""As far as whether Travis Oliphant should be considered one of the best programmers of all time, I'm not qualified to say. But he did give a lecture at my university last month and it was great. The guy is super knowledgeable, passionate about open source, and dedicated to making the lives of programmers better. It was super inspiring to me.""}, {'Subreddit': 'python', 'Reddit_Title': 'Travis Oliphant - One of the greatest computer scientists/programmers of all time?', 'CommentAuthor': 'Eightstream', 'Comment': '>do you think he deserves to go down in history alongside the Turings, Torvalds and Ritchies of the world?\n\nlol no\n\nOliphant did a lot to popularise Python as a language for data, but his career is less about innovation and more about packaging up well-established concepts in a way that made them easy for Python people to use (NumPy being a good example).\n\nWorthy and important work - but Alan Turing? Really? Come on man.'}, {'Subreddit': 'python', 'Reddit_Title': 'Travis Oliphant - One of the greatest computer scientists/programmers of all time?', 'CommentAuthor': 'jwink3101', 'Comment': 'I am not doubting the quality of his code or the importance but I also don‚Äôt feel like NumPy was revolutionary. It was a major evolution over Matlab (and I am sure others). I think if he didn‚Äôt write NumPy, there would have been something similar.'}, {'Subreddit': 'python', 'Reddit_Title': 'Travis Oliphant - One of the greatest computer scientists/programmers of all time?', 'CommentAuthor': 'DAVEALLCAPS', 'Comment': ""Check him out on Lex if you haven't yet, a good episode from a couple years ago.\n\n[https://www.youtube.com/watch?v=gFEE3w7F0ww](https://www.youtube.com/watch?v=gFEE3w7F0ww)""}, {'Subreddit': 'python', 'Reddit_Title': 'Travis Oliphant - One of the greatest computer scientists/programmers of all time?', 'CommentAuthor': 'broxamson', 'Comment': 'Love him on Justified'}, {'Subreddit': 'python', 'Reddit_Title': 'Travis Oliphant - One of the greatest computer scientists/programmers of all time?', 'CommentAuthor': 'None', 'Comment': 'Not even near the top, but who cares'}, {'Subreddit': 'python', 'Reddit_Title': 'Travis Oliphant - One of the greatest computer scientists/programmers of all time?', 'CommentAuthor': 'LazyCheetah42', 'Comment': 'Nice try, Travis.'}, {'Subreddit': 'python', 'Reddit_Title': 'Travis Oliphant - One of the greatest computer scientists/programmers of all time?', 'CommentAuthor': 'Fabulous-Possible758', 'Comment': ':: shrug :: You don‚Äôt hear Tom Lane‚Äôs name brought up all that much either.  There‚Äôs a lot of smart people out there who have written some pretty solid software.  I don‚Äôt know that I‚Äôd call them GOATs but they do deserve recognition for their contributions (which I think a lot of them do).'}, {'Subreddit': 'python', 'Reddit_Title': 'Travis Oliphant - One of the greatest computer scientists/programmers of all time?', 'CommentAuthor': 'commandlineluser', 'Comment': 'He is certainly a talented individual who has contributed massively.\n\nHowever:\n\n> created NumPy\n\n> This single man created\n\nIs this actually true?\n\nWould NumPy exist without Jim Hugunin, Perry Green, Tod Miller and Rick White?'}, {'Subreddit': 'python', 'Reddit_Title': 'Travis Oliphant - One of the greatest computer scientists/programmers of all time?', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'python', 'Reddit_Title': 'Travis Oliphant - One of the greatest computer scientists/programmers of all time?', 'CommentAuthor': 'BabyJesusAnalingus', 'Comment': 'He\'s a nice guy, and I enjoy our chats. I should book another one soon, and this is a good reminder. However, I\'ll say this: not even all of us on the original Python team (aside from Guido) are ""famous"" for what we did. ""Celebrity"" in the technical sense has a component of how much you promote yourself and how lucky you are.'}]"
python,Companies that assess Python pandas in interviews?,https://www.reddit.com/r/Python/comments/17sz8sn/companies_that_assess_python_pandas_in_interviews/,8,14,whitet445,1699723785.0,"Hi all. I am a new grad already at a company full time but looking to make a switch sometime soon to a more data focused role. I really enjoy pandas from some of my college courses. What are some companies that assess pandas in their interviews, and for which roles, and what‚Äôs the usual TC for that? I am just asking so that I kno how to use my time wisely when preparing. 

I know that they prob won‚Äôt just ask pandas questions but maybe also stats questions as well

Edit: I checked on Glassdoor but couldn‚Äôt find a clear answer","[{'Subreddit': 'python', 'Reddit_Title': 'Companies that assess Python pandas in interviews?', 'CommentAuthor': 'cmcclu5', 'Comment': 'Look into Data Engineering positions. Pandas/polars/PySpark are the primarily covered topics in those interviews, plus streaming-optimized operations, data structures, etc. Entry level sits around $110k (unless you manage to snatch a FAANG position) plus benefits. I know CapitalOne is really pushing to expand and backfill their data team right now so you might have a shot there. Otherwise, LinkedIn jobs, Otta, Indeed, and Glassdoor are all generally decent sources.'}, {'Subreddit': 'python', 'Reddit_Title': 'Companies that assess Python pandas in interviews?', 'CommentAuthor': 'oscarftm91', 'Comment': ""What I do is usually a take-home assignment which increases with difficulty. It shouldn't take more than 2 hours to so though.\nThen I just ask some basic pandas questions on the live interview to see if they did it themselves. These increase in difficulty as well. \nE.g. for the live questions, I start with simple questions like how do you read a file onto memory?\nI get tricky sometimes by asking the difference between join and merge... but this doesn't disqualify people tbh, it's easy to tell when someone doesn't know it.\n\nPandas is 10% of the interview though, so don't tell just on knowing pandas as your main strength. What we look for is if you know how to solve problems and if you can pick new technologies fast.""}, {'Subreddit': 'python', 'Reddit_Title': 'Companies that assess Python pandas in interviews?', 'CommentAuthor': 'mf_it', 'Comment': 'Search pandas across few job boards and see what comes up. Use that to then go to the direct company website and job listing.'}, {'Subreddit': 'python', 'Reddit_Title': 'Companies that assess Python pandas in interviews?', 'CommentAuthor': 'whitet445', 'Comment': 'That‚Äôs so many things in one interview lol'}, {'Subreddit': 'python', 'Reddit_Title': 'Companies that assess Python pandas in interviews?', 'CommentAuthor': 'rosecurry', 'Comment': 'Do you ever use join? 99% of the time merge does what I need'}, {'Subreddit': 'python', 'Reddit_Title': 'Companies that assess Python pandas in interviews?', 'CommentAuthor': '-phototrope', 'Comment': 'I use pandas daily and can never remember the difference between join/merge/concat'}, {'Subreddit': 'python', 'Reddit_Title': 'Companies that assess Python pandas in interviews?', 'CommentAuthor': 'cmcclu5', 'Comment': 'That‚Äôs just the Python side. One I took recently also included SQL and Cloud Architecture + CI/CD.'}, {'Subreddit': 'python', 'Reddit_Title': 'Companies that assess Python pandas in interviews?', 'CommentAuthor': 'oscarftm91', 'Comment': ""sometimes when I'm using indexes but yeah, I use merge 90% of the time too.\nApparently join should be more efficient but I can't bother testing.\nI ask it as a question because SQL used join so if you work with pandas/SQL, this sort of shows if you tried using it and/or read the documentation, which I think is more important.""}, {'Subreddit': 'python', 'Reddit_Title': 'Companies that assess Python pandas in interviews?', 'CommentAuthor': 'whitet445', 'Comment': 'What‚Äôs ur role?'}, {'Subreddit': 'python', 'Reddit_Title': 'Companies that assess Python pandas in interviews?', 'CommentAuthor': 'whitet445', 'Comment': 'How r u suppose to reasonably kno and apply those things, then well enough to succeed in an interview with them?'}, {'Subreddit': 'python', 'Reddit_Title': 'Companies that assess Python pandas in interviews?', 'CommentAuthor': 'cmcclu5', 'Comment': 'Experience. If you‚Äôre looking for a job in data engineering or data science, this is the minimum.'}]"
python,What does python professionals use to read.,https://www.reddit.com/r/Python/comments/17hibdd/what_does_python_professionals_use_to_read/,0,22,rajathirumal,1698392659.0,"I've been working on my personal project which involves much work with CSV files. Came accross CSV, pandas and open() that could be used to reading a CSV file. What do you think is the best.","[{'Subreddit': 'python', 'Reddit_Title': 'What does python professionals use to read.', 'CommentAuthor': 'None', 'Comment': 'import pandas as pd\n\ndf = pd.read_csv(""something.csv"")\n\nprint(df)'}, {'Subreddit': 'python', 'Reddit_Title': 'What does python professionals use to read.', 'CommentAuthor': 'coffeewithalex', 'Comment': ""Depends on what you wanna do.\n\n* Open a CSV file to go through the rows in order to find something quickly? `import csv`\n* Use Python as a slow processing engine for data, and you're OK with installing large dependencies that take a while to import? `import pandas`\n* Work with CSV efficiently and with strict control over the presence or absence of a value? `import pyarrow`\n* Work with large CSVs fast and easy in just a few lines of code, but you need large dependencies? `import duckdb`.\n* Wanna do what pandas does, but faster? `import polars`\n\n...\n\nand many many more\n\nThe key is to get things done fast, safe, and in the most stable way warranted. Balancing those out for your specific use case will bring you to the answer.""}, {'Subreddit': 'python', 'Reddit_Title': 'What does python professionals use to read.', 'CommentAuthor': 'ProbsNotManBearPig', 'Comment': 'Professionals don‚Äôt want to add dependencies unnecessarily. Use built in csv module.'}, {'Subreddit': 'python', 'Reddit_Title': 'What does python professionals use to read.', 'CommentAuthor': 'nemom', 'Comment': ""If you're only working line-by-line, with-open-as and readline work well.  Open the big CSV.  Iterate through it with readline.  Calc whatever you need to calc on the line.  Or keep only certain fields.  Then append the line to an output file.  That way, your computer doesn't choke trying to load all 50GB into memory.""}, {'Subreddit': 'python', 'Reddit_Title': 'What does python professionals use to read.', 'CommentAuthor': 'virtualadept', 'Comment': '`import csv`'}, {'Subreddit': 'python', 'Reddit_Title': 'What does python professionals use to read.', 'CommentAuthor': 'gwax', 'Comment': 'How big are the csv files and what do you want to do with the data after you read it?'}, {'Subreddit': 'python', 'Reddit_Title': 'What does python professionals use to read.', 'CommentAuthor': 'jward', 'Comment': ""Stock csv is my default.  It does pretty much everything I need.  I like to minimize the number of external libraries I bring in on a project so I'd only use pandas to read csv files if I needed something else from the library.\n\nI'm very guilty of using using open to write csv files in quick scripts, but never for reading them.""}, {'Subreddit': 'python', 'Reddit_Title': 'What does python professionals use to read.', 'CommentAuthor': 'timrprobocom', 'Comment': ""In MY opinion, too many people reach for pandas for jobs that don't require it.  Pandas is ENORMOUS, and its numerical focus doesn't suit all tasks.  I see people bending over backwards trying to make their problem fit pandas when a simple loop with the csv  module would do the job more quickly.""}, {'Subreddit': 'python', 'Reddit_Title': 'What does python professionals use to read.', 'CommentAuthor': 'alexandrehuat', 'Comment': ""That depends on the dependencies of the project. I won't add pandas just to read a CSV. But if I have it and work with tables, it'll be my choice without hesitating""}, {'Subreddit': 'python', 'Reddit_Title': 'What does python professionals use to read.', 'CommentAuthor': 'TheSpaceCoffee', 'Comment': '+1 pandas all the way even just for timestamp and basic stuff. It‚Äôs just so handy and versatile. Maybe I‚Äôm crazy.'}, {'Subreddit': 'python', 'Reddit_Title': 'What does python professionals use to read.', 'CommentAuthor': 'photohuntingtrex', 'Comment': 'I keep seeing people mentioning they started using Polars instead of Pandas.  I don‚Äôt have experience with either yet so am just asking to learn.  Is pandas still pretty standard, as I‚Äôm guessing many libraries depend on it rather than polars atm?  Or would you even choose pandas over polars even if it‚Äôs meant to be faster for any reason?'}]"
python,Function Inheritance!,https://www.reddit.com/r/Python/comments/174fb7i/function_inheritance/,0,61,i3130002,1696923165.0,"Inheritance in classes is nothing new.

I'd like to know if we can use such a thing to upgrade functions.

Normal method:

    def foo1(a,b,c):
        ...
    
    def foo2(a,b,c,d):
        foo1(a,b,c)
        ...

Ideal method:

    def foo1(a,b,c):
        ...
    
    def foo2(c) from foo1:
        foo1(a,b,c)
        ...

I could use such functionality to prevent code repetition for those who ask why. For example, the pandas.plot.hist is really similar to the pandas plot and we can only implement a few new arguments in the function.","[{'Subreddit': 'python', 'Reddit_Title': 'Function Inheritance!', 'CommentAuthor': 'dissonantloos', 'Comment': ""I feel that [decorators](https://book.pythontips.com/en/latest/decorators.html#writing-your-first-decorator) are quite close to what you are looking for. Maybe not exactly your example of extending a function with more arguments, but it is as close to function inheritance 'as a concept' as there is.""}, {'Subreddit': 'python', 'Reddit_Title': 'Function Inheritance!', 'CommentAuthor': 'This_Growth2898', 'Comment': '""Normal method"" syntax seems much clearer than your ""ideal method"". To call a function, you still need to name it and pass arguments. What are the advantages, if any, of ""inherited"" function? With classes, we can do polymorphic calls. What exactly are you trying to achieve?'}, {'Subreddit': 'python', 'Reddit_Title': 'Function Inheritance!', 'CommentAuthor': 'Doomdice', 'Comment': 'Inheritance isn‚Äôt quite right for the comparison you are making. The design pattern you want are decorators; very common pattern in python https://realpython.com/primer-on-python-decorators/'}, {'Subreddit': 'python', 'Reddit_Title': 'Function Inheritance!', 'CommentAuthor': 'Holshy', 'Comment': ""It's not clear to me how you're talking about anything other than functools.partial""}, {'Subreddit': 'python', 'Reddit_Title': 'Function Inheritance!', 'CommentAuthor': 'ForceBru', 'Comment': 'What you call ""normal method"" is the way to go. There\'s no ""function inheritance"" and no special syntax for it.'}, {'Subreddit': 'python', 'Reddit_Title': 'Function Inheritance!', 'CommentAuthor': 'SV-97', 'Comment': ""Oh god please no. Just add the arguments.\n\n>I could use such functionality to prevent code repetition for those who ask why\n\nIf your function has this many arguments that this becomes interesting you should probably refactor anyway tbh.\n\n>For example, the pandas.plot.hist is really similar to the pandas plot and we can only implement a few new arguments in the function.\n\nPandas is absolutely **not** the library to take as a rolemodel for good API design (the API of pandas is often considered to be one of its biggest downsides).\n\nAll that said: I'm pretty sure you could write a decorator that does this. You can read out the signature of the parent and child and dynamically create a new function with the combined signature. I'm not entirely sure if you'd have to mess with the variable lookup, but don't think so""}, {'Subreddit': 'python', 'Reddit_Title': 'Function Inheritance!', 'CommentAuthor': 'Raccoonridee', 'Comment': 'Functions are objects. If you fee like adding inheritance, just make a class with `__call__` instance method and play from there.'}, {'Subreddit': 'python', 'Reddit_Title': 'Function Inheritance!', 'CommentAuthor': 'SV-97', 'Comment': 'Here\'s a prototype for a decorator that does what you want (I think):\n\n    import inspect\n    from collections import OrderedDict\n    from functools import reduce\n    import operator\n    from typing import Callable\n    from itertools import dropwhile\n\n\n    def inherit_args(*parent_funcs: list[Callable]):\n        """"""\n        # Args:\n            * parent_funcs: list of parents with priority on rightmost function\n        """"""\n        def decorator(child_func):\n            signatures = [inspect.signature(fn) for fn in parent_funcs]\n            signatures.append(inspect.signature(child_func))\n            # construct a new signature overriding parameters of the parent(s)\n            # that the child also specifies with those of the child\n            params = reduce(operator.or_, (OrderedDict(sig.parameters) for sig in signatures))\n            # TODO: sort params by their respective kind as necessary\n            new_sig = inspect.Signature(params.values())\n            # extract body of the child\n            # TODO: do this properly: maybe just directly reuse the code of the child_func - or use ast.parse or whatever to get the body\n            # drop all decorators etc\n            body = dropwhile(lambda s: not s.startswith(""def""), inspect.getsource(child_func).split(""\\n""))\n            # call next once to drop the first line of the definition (which we assume to be the function header for simplicity)\n            # this should be fixed together with the previous TODO\n            next(body)\n            body = ""\\n"".join(body)\n            # define the new function by exec-ing the definition in an empty namespace\n            new_func_def = f""def {child_func.__name__}{new_sig}:\\n{body}""\n            namespace = globals()\n            exec(new_func_def, namespace)\n            # and return the newly defined function\n            return namespace[child_func.__name__]\n        return decorator\n\n\n    def f(x,y,z): ...\n\n    @inherit_args(f)\n    def g(z=4):\n        y = 5\n        return x * y + z\n\n    g(2,3) # returns 2 * 5 + 4 because g inherits the arguments x,y,z from f, overriding z with a default of 4'}, {'Subreddit': 'python', 'Reddit_Title': 'Function Inheritance!', 'CommentAuthor': 'genlight13', 'Comment': 'You can give a function as an argument to another function. That‚Äòs how decorators work under the hood. \n\ndef foo(arg1,arg2):\n \n\nDef blah(f, arg1): # using fixed arg2\n  f(arg1, somefixedarg2)\n\nblah(foo, ‚Äûtest‚Äú)\n\nThen you can call anything before and after this function you want.'}, {'Subreddit': 'python', 'Reddit_Title': 'Function Inheritance!', 'CommentAuthor': 'Rawing7', 'Comment': ""Python more or less (if you care about static typing, then definitely less) supports this via `*args` and `**kwargs`:\n\n    def foo1(a, b, c):\n        print(a, b, c)\n\n    def foo2(*args, d, **kwargs):\n        foo1(*args, **kwargs)\n\nUpsides:\n\n* DRY!\n\nDownsides:\n\n* `d` is now keyword-only\n* Static type checkers and IDEs have no clue what the actual parameters of `foo2` are\n\nBut wait, fortunately the devs are aware of this issue! That's why we recently got `**kwargs: Unpack[SomeTypedDict]`. That's definitely very useful! Now you can write code like this instead:\n\n    class Foo1Kwargs(TypedDict):\n        a: int\n        b: int\n        c: int\n    \n    def foo1(**kwargs: Unpack[Foo1Kwargs]):\n        print(kwargs['a'], kwargs['b'], kwargs['c'])\n    \n    def foo2(d, **kwargs: Unpack[Foo1Kwargs]):\n        foo1(**kwargs)\n\nIsn't that amazing?""}, {'Subreddit': 'python', 'Reddit_Title': 'Function Inheritance!', 'CommentAuthor': 'matusaleeem', 'Comment': 'This is the decorator pattern and we already have decorator at home.'}]"
python,Polars but for plotting?,https://www.reddit.com/r/Python/comments/171dgls/polars_but_for_plotting/,66,68,Unuser_,1696601782.0,"I'm looking for a library that does to [Matplotlib](https://matplotlib.org/) what [Polars](https://www.pola.rs/) did to [Pandas](https://pandas.pydata.org/)... let me explain:

As many people, I started my relationship with data by using Excel. Then I learned Pandas, and realized how much more I could do. Then I recently started using [Polars](https://www.pola.rs/) (pypolars to be more exact) and it just blew my mind on how much a **consistent API** makes a difference in terms of user/developer experience (not to speak of the performance!).

While working with Pandas, I used to find myself googling and exploring Stack Overflow for anything and everything I wanted to do, just because it was hard to guess the right syntax, and I think a lot of it has to do with the fact that Pandas is an old and established library: there's just too much history to change the API now.

The same happens to me when I'm using Matplotlib... the functions and syntax feel clunky and arcane. It feels like I'm issuing obscure magic spells, invoking artists wielding axes, with tons abbreviated keywords. If I need to do something slightly different, I have to scour the depths of the internet and find un-intuitive workarounds.

Don't get me wrong, the combo Pandas+Matplotlib is amazing and I'm grateful it exists, but it feels like old tech that eventually needs to be renewed. I would love to see a completely re-written library, with usability, consistency and speed at it's heart... Does anyone know if something like this exists?","[{'Subreddit': 'python', 'Reddit_Title': 'Polars but for plotting?', 'CommentAuthor': 'BratPit24', 'Comment': ""Plotly is the opposite of what polars did to pandas. It's so inefficient that your graphs will begin to stutter at around 10k data points and it will completelly freeze your PC at 100k. Matplotlib will just display as if nothing happened.  \n\n\nIt is very easy to use and make cool interactive plots if your datasets tend to be below that.""}, {'Subreddit': 'python', 'Reddit_Title': 'Polars but for plotting?', 'CommentAuthor': 'sersherz', 'Comment': ""I think you're looking for Plotly or Seaborn. Simpler syntax for the most part for better results, especially with Plotly.""}, {'Subreddit': 'python', 'Reddit_Title': 'Polars but for plotting?', 'CommentAuthor': 'Broric', 'Comment': '[https://pyviz.org/overviews/index.html](https://pyviz.org/overviews/index.html)\n\nThe mind map there should help.\n\nAltair and plotly are good non-Matplotlib alternatives but I like matplotlib/seaborn myself.'}, {'Subreddit': 'python', 'Reddit_Title': 'Polars but for plotting?', 'CommentAuthor': 'JeanC413', 'Comment': ""I haven't tested this, but`Plotnine` has some good reviews. It is inspired in ggplot2, which is my preferred plotting library so far. \n\nOn the other hand, have you tried the object oriented approach to matplotlib?\n\nI used to think that matplotlib API was simply bad, until I found some tutorials on the usage of it as a object oriented interface. This provides much more structure to code and simplify doing more complicated plots.""}, {'Subreddit': 'python', 'Reddit_Title': 'Polars but for plotting?', 'CommentAuthor': 'FirstBabyChancellor', 'Comment': ""Totally agree about Pandas vs. Polars! I switched to Polars' because of its speed, but even if Pandas was just as fast tomorrow, I'd stick with Polars' because of its far more consistent and composable API.\n\nWith respect to plotting, I'd recommend you look up ggplot in R. See if you like its grammar of graphics concept. I, for one, really like it, even if it's a bit more code you have to write.\n\nIn the Python world, Vega-Altair similarly uses a grammar of graphics. However, while many of the underlying concepts are similar, the names of things are different, which can be annoying, especially if you are already used to ggplot's syntax. If so, as another comment points out, you can also check out lets-plot, which seems to be a more faithful recreation of the ggplot API in Python.""}, {'Subreddit': 'python', 'Reddit_Title': 'Polars but for plotting?', 'CommentAuthor': 'ekhazan', 'Comment': ""I'm not sure it's exactly what you want but I like [vedo](https://vedo.embl.es/).\n\nIt's not very well known but I like the syntax and performance.""}, {'Subreddit': 'python', 'Reddit_Title': 'Polars but for plotting?', 'CommentAuthor': 'Drakkur', 'Comment': 'Altair has the best API I have worked with, but you‚Äôll still have to convert from Polars to Pandas to work with it.'}, {'Subreddit': 'python', 'Reddit_Title': 'Polars but for plotting?', 'CommentAuthor': 'vmgustavo', 'Comment': 'Try altair'}, {'Subreddit': 'python', 'Reddit_Title': 'Polars but for plotting?', 'CommentAuthor': 'jcmkk3', 'Comment': ""I'm surprised to not see many mentions of Altair. It is the obvious choice in my mind. I would suggest pairing it with VegaFusion so that you can get high performance computations on the backend to keep things snappy. https://vegafusion.io/""}, {'Subreddit': 'python', 'Reddit_Title': 'Polars but for plotting?', 'CommentAuthor': 'coleddofficial', 'Comment': 'Bokeh'}, {'Subreddit': 'python', 'Reddit_Title': 'Polars but for plotting?', 'CommentAuthor': 'j_oshreve', 'Comment': ""To be fair, it is named Matplotlib because it was intentionally mimicking the (MAT)LAB (plot)ting (lib)raries.  The syntax is inherited due to its original intent.  It is relatively fast, but produces static plots.  Yes, you can make these dynamic with update tricks, but it can only be updated while the program is running.\n\nBokeh and Plotly make things more dynamic because the outputs are javascript driven.  You can output a file that runs in a browser to do updates without requiring Python.  This also makes them generally slower.  They are great for sharing smaller data sets for people to look at on their own as they remain dynamic for more detailed interrogation.\n\nThere are other alternatives to Matplotlib, but they don't tend to have the same completeness of functionality.  It is a tradeoff.  Older programs carry baggage, but they have years of additions to give them more complete feature sets.""}]"
python,Offering free coding tutoring,https://www.reddit.com/r/Python/comments/16zvfp7/offering_free_coding_tutoring/,55,49,fthpi,1696445783.0,"Hello,

I'm working as data engineer. I want to improve my English speaking skills. So I decided to give lesson someone who want to learn programming and can speaking practice with me. Participant must be native English speaker.

I can give lessons in following subjects:

\- Programming & Python fundamentals

\- Data analyse (sql, python pandas, numpy etc.)

\- Other python topics (web scraping, Qt, web frameworks)

\- Linux fundamentals and docker

I haven't prepared syllabus yet. I think we can create syllabus together accordingly your knowledge and goal about the subject. I'm planning to start 2 or 3 days in a week.  Lessons will be between 30 minutes - 1 hour. All lessons will be practical and I will provide support for the necessary installations.

Edit:

I didn't expect that this post get too much interaction. Thanks, everyone. I will reply in DM who write comment and message. 

My knowledge on data science topics (for example scikit-learn, tensorflow etc.) is very limited, so I can't help about this topics. Also I expect someone who is patient, because I can't speak fluently much.

Some users, suggest creating a group. Actually, as a tutor, this will be my first experience. So I want to start with one-on-one lessons for now.

&#x200B;","[{'Subreddit': 'python', 'Reddit_Title': 'Offering free coding tutoring', 'CommentAuthor': 'Ok_Yesterday1188', 'Comment': 'I know a fair amount of python but I have been wanting to learn more about data science'}, {'Subreddit': 'python', 'Reddit_Title': 'Offering free coding tutoring', 'CommentAuthor': 'worthwhilewrongdoing', 'Comment': ""I don't need tutoring, but I just wanted to say that this is really awesome of you to offer. Best of luck to you and your students!""}, {'Subreddit': 'python', 'Reddit_Title': 'Offering free coding tutoring', 'CommentAuthor': 'Particular-Cause-862', 'Comment': 'Hey man, i like your idea, im also an enginerier working as a data-analyst - software developer, i would like to join you and give lessons for free in order to improve my english.\nFeel free to DM me so we can organize some lessons for the guys here :D'}, {'Subreddit': 'python', 'Reddit_Title': 'Offering free coding tutoring', 'CommentAuthor': 'Prior-Product-3673', 'Comment': 'What‚Äôs your native language if I may ask?'}, {'Subreddit': 'python', 'Reddit_Title': 'Offering free coding tutoring', 'CommentAuthor': 'Sebax495', 'Comment': 'I‚Äôm absolutely down to learn and help each other. I speak English like a Native American and can also help with some resources that I have to my disposal. I know the basics of data science and sql but I would love to learn more of python and everything else you have to offer. Feel free to DM me for more info/contact details. Looking forwards to hear from you!'}, {'Subreddit': 'python', 'Reddit_Title': 'Offering free coding tutoring', 'CommentAuthor': 'DNSGeek', 'Comment': ""I would love to learn about data science, I'm pretty good at Python otherwise. I am a native English speaker.""}, {'Subreddit': 'python', 'Reddit_Title': 'Offering free coding tutoring', 'CommentAuthor': 'garybpt', 'Comment': 'Putting my name in the hat here üëã'}, {'Subreddit': 'python', 'Reddit_Title': 'Offering free coding tutoring', 'CommentAuthor': 'Angered_Snow', 'Comment': 'I would be interested. I am familiar with data analysis topics and have just started learning python. Also a native speaker.'}, {'Subreddit': 'python', 'Reddit_Title': 'Offering free coding tutoring', 'CommentAuthor': 'StudentLoanDebt19', 'Comment': 'I am a Native English speaker and I currently need help with a python project! DM‚Äôd!'}, {'Subreddit': 'python', 'Reddit_Title': 'Offering free coding tutoring', 'CommentAuthor': 'SirGladko', 'Comment': ""Hi, I'm interested in improving my English as well. \nIf there are more people wanting to learn about programming and python fundamentals, feel free to DM.""}, {'Subreddit': 'python', 'Reddit_Title': 'Offering free coding tutoring', 'CommentAuthor': 'Blind_Baron', 'Comment': 'Just wanted to say that this is a great idea that benefits everyone involved. Good job OP'}]"
python,"PSA: Python 3.12 releases in one week! NumPy, Pandas and SciPy have 3.12 wheels up on PyPI (among others), get your package ready and wheels uploaded for release!",https://www.reddit.com/r/Python/comments/16shvto/psa_python_312_releases_in_one_week_numpy_pandas/,57,12,Balance-,1695716609.0,"Some resources:

* [What‚Äôs New In Python 3.12](https://docs.python.org/3.12/whatsnew/3.12.html)
* [Python 3.12 release schedule](https://peps.python.org/pep-0693/)
* [cibuildwheel](https://github.com/pypa/cibuildwheel)","[{'Subreddit': 'python', 'Reddit_Title': 'PSA: Python 3.12 releases in one week! NumPy, Pandas and SciPy have 3.12 wheels up on PyPI (among others), get your package ready and wheels uploaded for release!', 'CommentAuthor': 'spez_drank_my_piss', 'Comment': ""I'm *still* trying to get my company to finish transitioning from 2.7 to 3.6""}, {'Subreddit': 'python', 'Reddit_Title': 'PSA: Python 3.12 releases in one week! NumPy, Pandas and SciPy have 3.12 wheels up on PyPI (among others), get your package ready and wheels uploaded for release!', 'CommentAuthor': 'riklaunim', 'Comment': 'We were planning to update our company docker images for a while and now the images will get 3.12. Curious what will explode from 3.9 update ;)'}, {'Subreddit': 'python', 'Reddit_Title': 'PSA: Python 3.12 releases in one week! NumPy, Pandas and SciPy have 3.12 wheels up on PyPI (among others), get your package ready and wheels uploaded for release!', 'CommentAuthor': 'Linx_101', 'Comment': 'Pyarrow is the big package i‚Äôm waiting for. It made 3.11 unusable'}, {'Subreddit': 'python', 'Reddit_Title': 'PSA: Python 3.12 releases in one week! NumPy, Pandas and SciPy have 3.12 wheels up on PyPI (among others), get your package ready and wheels uploaded for release!', 'CommentAuthor': 'runawayasfastasucan', 'Comment': ""\\> somethin = blech  \n\\>               \\^\\^\\^\\^\\^  \n\\>NameError: name 'blech' is not defined. Did you mean: 'self.blech'?\n\n&#x200B;\n\nThis was authored by Pablo, I can hear his voice, haha :) Anyone know if there will be a release stream (might have been this night?)""}, {'Subreddit': 'python', 'Reddit_Title': 'PSA: Python 3.12 releases in one week! NumPy, Pandas and SciPy have 3.12 wheels up on PyPI (among others), get your package ready and wheels uploaded for release!', 'CommentAuthor': 'spiker611', 'Comment': 'Anyone know if there is going to be a 3.12 release party/stream like there was for 3.11/3.10 ?'}, {'Subreddit': 'python', 'Reddit_Title': 'PSA: Python 3.12 releases in one week! NumPy, Pandas and SciPy have 3.12 wheels up on PyPI (among others), get your package ready and wheels uploaded for release!', 'CommentAuthor': 'fatbob42', 'Comment': 'Still waiting for aiohttp'}, {'Subreddit': 'python', 'Reddit_Title': 'PSA: Python 3.12 releases in one week! NumPy, Pandas and SciPy have 3.12 wheels up on PyPI (among others), get your package ready and wheels uploaded for release!', 'CommentAuthor': 'BlauwePil', 'Comment': 'It‚Äôs unfortunate to see that the Curses module is not being extended with the Form and Menu api for a very long time.\n\nIt is with this reason I am going to try to extend it myself.'}, {'Subreddit': 'python', 'Reddit_Title': 'PSA: Python 3.12 releases in one week! NumPy, Pandas and SciPy have 3.12 wheels up on PyPI (among others), get your package ready and wheels uploaded for release!', 'CommentAuthor': 'xAmorphous', 'Comment': '`gh repo delete && rm -rf *` \n\nEzpz'}, {'Subreddit': 'python', 'Reddit_Title': 'PSA: Python 3.12 releases in one week! NumPy, Pandas and SciPy have 3.12 wheels up on PyPI (among others), get your package ready and wheels uploaded for release!', 'CommentAuthor': 'mok000', 'Comment': 'Lol'}, {'Subreddit': 'python', 'Reddit_Title': 'PSA: Python 3.12 releases in one week! NumPy, Pandas and SciPy have 3.12 wheels up on PyPI (among others), get your package ready and wheels uploaded for release!', 'CommentAuthor': 'Balance-', 'Comment': 'Tracking issue: https://github.com/apache/arrow/issues/37880'}, {'Subreddit': 'python', 'Reddit_Title': 'PSA: Python 3.12 releases in one week! NumPy, Pandas and SciPy have 3.12 wheels up on PyPI (among others), get your package ready and wheels uploaded for release!', 'CommentAuthor': 'Balance-', 'Comment': 'Incoming!\n\n> I have merged the wheels support for 3.12. Those will be available as nightly development in our next daily builds. The PyPI availability will be ready as soon as we release Arrow 14.0.0 which we started today with preparations but takes some time (\\~2 weeks) while we stabilize some nightly failures + verify and vote the release.\n\n[https://github.com/apache/arrow/issues/37880](https://github.com/apache/arrow/issues/37880)'}]"
python,Visual Pandas Selector: Visualize and interactively select time-series data,https://www.reddit.com/r/Python/comments/16l5y04/visual_pandas_selector_visualize_and/,96,14,phthah,1694969996.0,"https://i.redd.it/jaafsv37kuob1.gif

GitHub: [https://github.com/manumerous/vpselector](https://github.com/manumerous/vpselector)

Many times when working with time  series data I felt I was missing an easy way to visualize and  interactively select data. Consequently, I chose to create and my own  open source tool, the Visual Pandas Selector, and hope it will help  others speed up their data science and ML workflows!

Since it is my first time publishing a package on PyPi I was wondering if anyone would be interested in giving some feedback on the project (usability, features, documentation, code structure, ect.) or potentially join as a collaborator?","[{'Subreddit': 'python', 'Reddit_Title': 'Visual Pandas Selector: Visualize and interactively select time-series data', 'CommentAuthor': 'phthah', 'Comment': 'The GitHub project can be found here: [https://github.com/manumerous/vpselector](https://github.com/manumerous/vpselector)'}, {'Subreddit': 'python', 'Reddit_Title': 'Visual Pandas Selector: Visualize and interactively select time-series data', 'CommentAuthor': 'vletrmx21', 'Comment': ""this looks cool I'll give it a try when I'm back from vacation""}, {'Subreddit': 'python', 'Reddit_Title': 'Visual Pandas Selector: Visualize and interactively select time-series data', 'CommentAuthor': 'El_Minadero', 'Comment': 'how do you deal with super/subsampling and aliasing? At what data size do things start to get hard to select?'}, {'Subreddit': 'python', 'Reddit_Title': 'Visual Pandas Selector: Visualize and interactively select time-series data', 'CommentAuthor': 'Vxctn', 'Comment': 'This seems like a great tool for scientific computing / Analytical lab data.'}, {'Subreddit': 'python', 'Reddit_Title': 'Visual Pandas Selector: Visualize and interactively select time-series data', 'CommentAuthor': 'Defiant_Astronaut188', 'Comment': 'Well done. This looks very nice!'}, {'Subreddit': 'python', 'Reddit_Title': 'Visual Pandas Selector: Visualize and interactively select time-series data', 'CommentAuthor': 'Only_Struggle_', 'Comment': 'Looks good!! Will give it a try. Keep it up!!!'}, {'Subreddit': 'python', 'Reddit_Title': 'Visual Pandas Selector: Visualize and interactively select time-series data', 'CommentAuthor': 'audentis', 'Comment': 'This reminds me a lot about `[altair](https://altair-viz.github.io/)`, a Python implementation for Vega-lite visualizations. It has similar selection methods and interactivity. That also lets you select data from a scatterplot, for example.'}, {'Subreddit': 'python', 'Reddit_Title': 'Visual Pandas Selector: Visualize and interactively select time-series data', 'CommentAuthor': 'Upbeat-Most9511', 'Comment': 'Hi, \n\nIs it possible to update to PyQt5==5.15?\n\nPyQt5.14 is not installing, their pyproject.toml  has an invalid spacing for the sip requirement.\n\n&#x200B;\n\nThanks'}, {'Subreddit': 'python', 'Reddit_Title': 'Visual Pandas Selector: Visualize and interactively select time-series data', 'CommentAuthor': 'phthah', 'Comment': 'Thanks, that would be much appreciated!'}, {'Subreddit': 'python', 'Reddit_Title': 'Visual Pandas Selector: Visualize and interactively select time-series data', 'CommentAuthor': 'phthah', 'Comment': 'Thanks for the great questions.\n\nCurrently the tool does not deal with super or subsampling. It simply stores the start end dataframe indices for each selected segment (marked in grey) and concatenates them into a new dataframe. So the tool does not directly depend on time and the time between successive measurements (rows in the dataframe) could be non uniform.\n\nSince I would like this tool to be useful for a wide range of different tasks I am not sure if it would make sense to include sampling in the same module. For the example shown above q =  \\[q0, q1, q2, q3\\] represents a unit quaternion that parametrizes a 3D orientation. Since the length of the vector q always need to be equal to 1 we could not simply linearly interpolate between data points.\n\nI started to develop this tool in a project where we wanted to estimate the dynamics of a drone usinf flight data and had to select the sub-portions of data that contains most information for the system identification. Due to the 4D unit sphere constraint of the quaternion we separated that functionality. But i would be curious to know how this would work in other peoples workflows. I can imagine it could also be useful for someone to combine the selection and resampling process.'}, {'Subreddit': 'python', 'Reddit_Title': 'Visual Pandas Selector: Visualize and interactively select time-series data', 'CommentAuthor': 'phthah', 'Comment': 'Regarding the size I did not yet test at what point things stopped working. At some point (over 100k data points) the creation of the plots and concatenation of the dataframe resulted in a small ""lag"". So I think the used matplotlib and pandas libraries will at some point be the bottleneck for adding more data.'}]"
python,When to reconsider using Pandas for data processing,https://www.reddit.com/r/Python/comments/16i3g8k/when_to_reconsider_using_pandas_for_data/,28,31,micropeenandproud,1694650412.0,"What advice do you guys have on when and when *not* to use Pandas for data processing?

And based on my experience, does it sound like I'm probably just implementing Pandas poorly? (I tried to use Pandas' Dataframe methods to do everything, to avoid me doing anything stupidly inefficiently). Or do these experiences match what you'd expect.

Based on my experiences, I'm currently considering building a small library built around numpy for use in all my projects, for basic filtering, sorting, inserting, etc... Is that a dumb idea?

&#x200B;

**My experience that prompted this question:**

I recently set out to build a library for reading in CSVs, categorising them based on headers, loading them into appropriate data classes, and then doing a bunch of normalising, mapping, filtering, enrichment, and checking against detection rules.

The project itself is not as important as what I experienced:

**First issue**

One of the layers of enrichment for my project involved iterating through rows, taking out a value, initialising a class with it as an arg, and then adding some of that class' fields in as new columns. In initial testing this worked great, but then when trying to run this against larger (but relatively small) datasets, I experienced something odd. My program would reach 50,000 / 100,000 IPs, and then slow to a crawl. It seemed that when the memory usage of the Dataframe (hereby df) reached a certain size, time to complete certain operations slowed to a crawl.

My solution: Just as a test, I made this enrichment stage read the df into a numpy array, and then iterate through in the same way. This resulted in very similar speeds but my issue disappeared. No matter how large the dataset, the speed would remain constant and the processing would complete.

&#x200B;

**Second change**

Off the back of this experience with the enrichment, I realised I had another stage of processing that I'd not experienced issues with, could again be done with numpy instead.

This stage iterated rows, then checked column values using a rule engine I built, and inserted some values back into a single new column. Once against, I made my engine class first convert the df into a numpy array (yes aware how inefficient that is) then perform the same iteration and logic.

This change, keeping the implementation as close as possible, just with the more basic datatype, resulted in about 20x speed improvement.

&#x200B;

**This continued...**

I then went back through all libraries that I built for this project, and more or less replaced any method or class that involved any kind of processing with numpy code.

Even whilst still converting from df to arrays and back within each method (just to test the speed difference, I plan on swapping my data classes to only use np arrays eventually), I watched those progress bars shooting by, and was very surprised by the difference.

&#x200B;

*tldr*: I converted all my pandas code to numpy. it sped my program up astoundingly and fixed my memory issues. is this normal? When *should* I be using Pandas.

&#x200B;

*Edit*
I‚Äôve learnt a lot over the last couple days about this topic. So I‚Äôve dropped the key takeaways below:

1) Vectorise it - This wasn‚Äôt relevant to large parts of my project as I needed to do string transformations and enrichment. But where possible, always vectorise.

2) Pandas has problems when you hit memory limits, but speed problems were more often implementation problems by me. 

3) Iterating is slow - Don‚Äôt do in 100,000 loops what you can do in a single action. Consider how long it takes to move a pile of books from one place to another one at a time, versus just moving the whole pile at once. An example from my project was that I was enriching data 1 row at a time when actually I could generate my enrichment data, and literally insert the ‚Äúcolumns‚Äù all at once as a big results array. This took seconds vs minutes.

4) If your program is taking minutes to run, second guess yourself. Check if your ‚Äúlarge‚Äù dataset is really that large. Some systems process millions of records in less than a second, and do some fairly hefty processing in between, so if you‚Äôre spending 3 minutes to process 100,000 Ip addresses, make sure that you aren‚Äôt doing some inefficiently.

5) If you‚Äôre using a library, use its methods and use its classes. I learn that I was heavily underutilising pandas methods to do my transformations. If there‚Äôs a .filter or a .groupby or a .merge based solution to your problem, do that instead of taking the data out and juggling it about. This keeps you within the heavily optimised (both in terms of logic, and also in terms of precompilation) codebase of the library.","[{'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': 'kernco', 'Comment': 'In general you want to avoid iterating through rows, whether in pandas or numpy. Without seeing the code itself it would be hard to know if you can avoid it. But yes numpy will be faster than pandas. You could look into polars as an alternative to pandas if efficiency is important.'}, {'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': 'Quick-Profession9077', 'Comment': ""I'll just leave this here -- [https://stackoverflow.com/questions/16476924/how-to-iterate-over-rows-in-a-dataframe-in-pandas](https://stackoverflow.com/questions/16476924/how-to-iterate-over-rows-in-a-dataframe-in-pandas)\n\nMuch like u/kernco stated you shouldn't be iterating, and certainly not more than a couple thousand rows at most.   For example I have a script that uses a method from a third party library to add a column of geometry to a dataframe with 4.5 million rows.  If I use itertuples() it takes \\~8 minutes, while using a pandas apply approach it takes \\~45 seconds.""}, {'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': 'madrury83', 'Comment': ""As far as I can tell, the only thing you're actually using Pandas for here is to read the csv. After that, you're just looping through the rows and doing some general purpose programming using values stored in the row as input.\n\nPandas is an optimized library for array computations. If your operations are not expressible as linear-algebraic vector operations, then the use of pandas is not getting you anything but an awkward data structure. Given your rough description, I suspect you could write your program with the `csv` module included in the python standard library without giving much up.""}, {'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': 'martinkoistinen', 'Comment': 'From what you wrote you seem to cross back and forth over the Pandas C-API a lot. This is expensive in terms of time.\n\nAlso, sometimes Data Scientists and Analysts use Pandas when their project would go significantly faster in pure Python.\n\nFor example, creating new columns from data contained in the same row could be handled with a pure Python generator which opens your source CSV file for reading and yields one row at a time as a list. This would be consumed by another function that would perform math on the existing ‚Äúcolumns‚Äù in the list to derive the value of a new column and yield the new row (again as a list) which could be consumed by yet another function which opens your output CSV and iterates over the previous function‚Äôs output (a row as a list) and writes to a new file.\n\nThis simple program could process virtually any number of rows and would out-perform Pandas by roughly 2X or more. The best part is, it would use a tiny fraction of the memory Pandas would, because you‚Äôd only have roughly one row in memory at a time, whereas Pandas will naively try to load it all into memory.\n\nThis whole thing will probably go as fast as your input and output file can be read from/written to, but if the calculations in the middle are the bottleneck, you can introduce a ProcessPool to spread the work around to other cores very easily. The only downside of this is your output file might not maintain the same row ordering as the input file. At least not without some additional work.'}, {'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': 'Hard_Thruster', 'Comment': ""Pandas has a lot of high speed vectorized functions largely because it's built on numpy. But often people use for loops and unwarranted solutions.\n\nIf you're dealing with purely numbers, it's not a bad idea to just use numpy but pandas is certainly fast enough for 100,000 rows of data.\n\nI think this is just a lack in knowledge of the api. 100,000 rows is easily handled.""}, {'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': '_Joab_', 'Comment': ""It sounds like your code is not optimized for large scale data processing, and it could probably be greatly improved by properly utilizing vector/matrix operations.\n\nPandas and numpy are great for vectorized operations, and the speed difference between using vector operations in numpy vs iterating rows is huge. Pandas is very memory heavy, so you might want to switch to pure numpy. Translate all your processing to numpy vector operations and that should solve your issue. numpy is very flexible and I haven't encountered many python operations I couldn't translate to vector functions after fidgeting with it for a while. \n\nHit me up if you want some help with translating your script to numpy, or consider opening a Stack Overflow question. Processing a couple million rows of data should run in the order of seconds on a regular device.""}, {'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': 'justneurostuff', 'Comment': 'consider using numba to accelerate your numpy code further if you go that route'}, {'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': 'ReputationCold9410', 'Comment': 'If you‚Äôre iterating with Pandas you are generally doing something wrong.'}, {'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': 'mustangdvx', 'Comment': 'If you‚Äôre comfortable around SQL, Duckdb has been my goto when my dataframes are out of memory (or I simply get too frustrated with dataframes syntax).'}, {'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': 'Atheuz', 'Comment': ""I was interested in applying a transform to pandas DataFrame  to get a list of custom objects out, and I found that apply was horrendously slow so I made a test of a bunch of different ways of to do it.\n\nDocumented here: https://stackoverflow.com/questions/76502222/what-is-the-fastest-way-to-iterate-through-a-pandas-dataframe-to-create-custom-o\n\nIf you don't need pandas, then you should avoid using it. \n\nI only did this test because I had no choice: I had to feed in a pandas DataFrame as an argument into library code and I needed to find a way to improve the performance of what that library was doing.\n\nPandas is also very bad w.r.t to memory utilization for large DataFrames.""}, {'Subreddit': 'python', 'Reddit_Title': 'When to reconsider using Pandas for data processing', 'CommentAuthor': 'None', 'Comment': ""Yeah, no offense, but if you're iterating row by row you aren't leveraging pandas. Vectorize that stuff""}]"
python,What's the point for Pandas and Numpy,https://www.reddit.com/r/Python/comments/165neyy/whats_the_point_for_pandas_and_numpy/,0,25,pmz,1693421967.0,"I'm going through a Datacamp Python course which details the use of Numpy and Pandas; you know loading and converting a csv file into datframes,comparing lists etc

What I noticed is that you can do all the same by using SQL and much easier too. nowadays it's even easier to load a csv into say sqlite or duckdb and then do your processing there.

I'm not a data scientist but a database developer so probably I'm looking at it from that perspective.

So when to use SQL and when to go with those python libraries?","[{'Subreddit': 'python', 'Reddit_Title': ""What's the point for Pandas and Numpy"", 'CommentAuthor': 'ghostofwalsh', 'Comment': '> can do all the same by using SQL and much easier too\n\nThat ""easier"" is certainly debatable.  Though I would be interested to know what the processing time comparisons are for various data crunching operations.  \n\nMy gut says that once you have the data stored locally, numpy and pandas are probably about as efficient as you can easily get to.  But if you\'re sending SQL to a remote database, seems like that could greatly reduce data transfer time if you don\'t need the whole table.'}, {'Subreddit': 'python', 'Reddit_Title': ""What's the point for Pandas and Numpy"", 'CommentAuthor': 'Pr0ducer', 'Comment': 'Let me Google that for you ....\n\nhttps://datascience.stackexchange.com/questions/34357/why-do-people-prefer-pandas-to-sql#34366'}, {'Subreddit': 'python', 'Reddit_Title': ""What's the point for Pandas and Numpy"", 'CommentAuthor': 'sinsworth', 'Comment': 'I get that you percieve Pandas as redundant as someone comfortable with SQL, but at the very least it is often less verbose to quickly wrangle a dataframe with Pandas than it is with SQL.\n\nNumpy though? What kind of tasks are you being taught to do with Numpy? Do people actually do things like linear algebra and high-dimensional tensor arithmetic with SQL?'}, {'Subreddit': 'python', 'Reddit_Title': ""What's the point for Pandas and Numpy"", 'CommentAuthor': 'vEncrypted', 'Comment': 'It simple boils down to the data you are manipulating. Is it messy data that needs to be cleaned up? Or is this clean data that is db ready? Even at that a-lot user-fronting data is never stored on databases. You will normally get these in filetypes such as .xlsx or .csv. Csv being lightweight is a great filetype to use when dealing with large amounts of files.'}, {'Subreddit': 'python', 'Reddit_Title': ""What's the point for Pandas and Numpy"", 'CommentAuthor': 'ofiuco', 'Comment': ""You don't have to create a SQL server and install all the SQL packages and manage indices and all of that crap with pandas and numpy. You can just interact with the CSV directly. I also question whether SQL is faster - that isn't my experience. Both have their uses though.""}, {'Subreddit': 'python', 'Reddit_Title': ""What's the point for Pandas and Numpy"", 'CommentAuthor': 'SL1210M5G', 'Comment': 'Large SQL queries get unwieldy VERY fast.  Pandas is effortless to transform data in practically limitless ways.'}, {'Subreddit': 'python', 'Reddit_Title': ""What's the point for Pandas and Numpy"", 'CommentAuthor': 'riklaunim', 'Comment': ""It's harder to operate on large datasets in databases, often requiring a specialized database for a given specialized task, and then it can be hard to properly insert the data into a database, and get all the indexes and optimizations needed.\n\nFor simple tasks like those you can see in an introduction a lot of tools would work, but then as you move the complexity and specialization fewer and fewer tools will fit.""}, {'Subreddit': 'python', 'Reddit_Title': ""What's the point for Pandas and Numpy"", 'CommentAuthor': 'Wrong_College1347', 'Comment': 'SQL is something to store data in tables, numpy is there to crunch numbers.'}, {'Subreddit': 'python', 'Reddit_Title': ""What's the point for Pandas and Numpy"", 'CommentAuthor': 'mlody11', 'Comment': 'In addition to the many comments made, you can also use dataframes in tools like dask to distribute processing across a large cluster, something that is not so easy with SQL.'}, {'Subreddit': 'python', 'Reddit_Title': ""What's the point for Pandas and Numpy"", 'CommentAuthor': 'Fabulous-Possible758', 'Comment': ""It really depends on what you're doing, but there are a few differences.  Numpy and Pandas tend to have more compact representations for certain types of data than a SQL database does, which allows some operations to be done much faster than a SQL database can handle (eg, adding together billions of numbers simultaneously).\n\nI would agree with you that certain things are much easier in SQL, and honestly I don't really view it as an either/or situation.  It's pretty straightforward to use most SQL databases from Python and they make a lot of data storage and some simple calculations a lot easier.  When you start noticing things slowing down (or you need to parallelize calculations) pull the data from the database into numpy and do it there.""}, {'Subreddit': 'python', 'Reddit_Title': ""What's the point for Pandas and Numpy"", 'CommentAuthor': 'crawl_dht', 'Comment': 'SQL is not in-memory, it writes to the disk. Numpy and pandas do in-memory operations.'}]"
python,Is Apple Silicon mostly supported now?,https://www.reddit.com/r/Python/comments/15pfvxt/is_apple_silicon_mostly_supported_now/,0,36,iWorkSlow,1691875040.0,"I came across the following thread but it is 2 years old:  https://www.reddit.com/r/Python/comments/lto91f/how_to_get_python_numpy_and_pandas_running/ 

Do you still have to install things through Homebrew or Miniforge or is support available 'natively?' 

I began coding in Python a few years ago and I didn't really have to do too much to setup my 2019 Intel 16"" MBP. Everything that I use works: Jupyter, Python (numpy, pandas, matplotlib, requests, etc.), Airflow. But I can't say that everything else will work, especially if I don't know what package I'll be using in the future. For example, there was a project where I used nbconvert to automate a Jupyter Notebook. I haven't used nbconvert since but I'm worried about things like this. 

I'm looking to buy an M1 Max 16"" since there are some great discounts on the machine and I'm wondering where support for packages are like on Apple Silicon now. I don't like using package managers or workarounds like Homebrew or Miniforge.","[{'Subreddit': 'python', 'Reddit_Title': 'Is Apple Silicon mostly supported now?', 'CommentAuthor': 'Mehdi2277', 'Comment': ""I still avoid it for ML but it's getting better. Tensorflow and related libraries (tensorflow-text, tensorflow-transform, etc) still have poor M1 support. tensorflow metal does not count to me as it has disclaimers of major apis being unusable. I think pytorch is in better state, but most of my work is in tensorflow ecosystem.\n\n&#x200B;\n\nI think for more common data science libraries like numpy/matplotlib/pandas it should be fine.""}, {'Subreddit': 'python', 'Reddit_Title': 'Is Apple Silicon mostly supported now?', 'CommentAuthor': 'AmyStrange', 'Comment': 'It‚Äôs a pain in the ass for about 2 hours and then it‚Äôs fine. If you‚Äôre worried, just run in vsCode. It emulates x86 by default on my M1 air'}, {'Subreddit': 'python', 'Reddit_Title': 'Is Apple Silicon mostly supported now?', 'CommentAuthor': 'thephotoman', 'Comment': ""It'll work.  \n\nHomebrew is going to be a part of your life on macOS.  It isn't emulated or virtualized or anything.  But don't use it on a corporate Mac.""}, {'Subreddit': 'python', 'Reddit_Title': 'Is Apple Silicon mostly supported now?', 'CommentAuthor': 'typeryu', 'Comment': 'If you want to use Python for Azure functions, it is still not supported natively and requires workarounds'}, {'Subreddit': 'python', 'Reddit_Title': 'Is Apple Silicon mostly supported now?', 'CommentAuthor': 'aflopes', 'Comment': 'Been working on one without any problems, but currently I‚Äôm only dealing with projects that use really recent libraries versions. I do believe that if you use it to work on projects that contain dependencies released before and way before of these apple CPUs then most likely you will have problems!'}, {'Subreddit': 'python', 'Reddit_Title': 'Is Apple Silicon mostly supported now?', 'CommentAuthor': 'carlinwasright', 'Comment': 'Download and install Python from python.org\n\npip install pandas\n\nDone. It works. This has worked for me on Apple silicon for well over a year.'}, {'Subreddit': 'python', 'Reddit_Title': 'Is Apple Silicon mostly supported now?', 'CommentAuthor': 'Glad-Put1792', 'Comment': 'Most issues have been resolved in 3.9 and above. As far as I know, 3.7 still is not stable on ARM.'}, {'Subreddit': 'python', 'Reddit_Title': 'Is Apple Silicon mostly supported now?', 'CommentAuthor': 'TheDoctorDan', 'Comment': 'How was it being a pain? (Genuinely curious) \n\nI Just set up a macbook pro m2 a gew weeks back using Homebrew, Pyenv, and Poetry, and the only thing that gave me a little bit of a hard time was trying to use Poetry 1.2.0 at first, so I ended up going with 1.5.0.'}, {'Subreddit': 'python', 'Reddit_Title': 'Is Apple Silicon mostly supported now?', 'CommentAuthor': 'iWorkSlow', 'Comment': 'Is your MBA 16GB, by any chance?'}, {'Subreddit': 'python', 'Reddit_Title': 'Is Apple Silicon mostly supported now?', 'CommentAuthor': 'Antar3s86', 'Comment': 'How is it a pain? I got my M1 about a year ago and it was smooth sailing from the start. Not a single issue with any projects (data science) ü§∑\u200d‚ôÇÔ∏è'}, {'Subreddit': 'python', 'Reddit_Title': 'Is Apple Silicon mostly supported now?', 'CommentAuthor': 'SL1210M5G', 'Comment': 'What‚Äôs wrong with Homebrew on a corporate Mac? I work for a Fortune 500, which takes cyber security VERY seriously and Homebrew is often the official method of installation for certain things, such as Docker & Docker-Compose.'}]"
python,Alternative to Spyder IDE with co-pilot integration ?,https://www.reddit.com/r/Python/comments/15j8fgi/alternative_to_spyder_ide_with_copilot_integration/,6,12,dumpysize,1691273665.0,"Hello,

I'm looking to change my IDE. I've been working on Spyder for many years but I'd like to change for one that includes a genAI copilot (e.g. Github Copilot on VScode etc.). Spyder doesn't have one yet and it might take a while until it comes out.

I also deeply need a real variable explorer, similar to the one present in Spyder (which enable exploring classes without going to the source code, display pandas dataframes, explore hashmaps etc.). I tried VScode but the variable explorer is lacklustre.

Is there anything out there that would fit my need ? I don't need anything else really, no git integration or anything fancy.

Cheers!","[{'Subreddit': 'python', 'Reddit_Title': 'Alternative to Spyder IDE with co-pilot integration ?', 'CommentAuthor': 'Waterpepene', 'Comment': 'The free variant of pycharm should do the trick'}, {'Subreddit': 'python', 'Reddit_Title': 'Alternative to Spyder IDE with co-pilot integration ?', 'CommentAuthor': 'debunk_this_12', 'Comment': 'Vscode'}, {'Subreddit': 'python', 'Reddit_Title': 'Alternative to Spyder IDE with co-pilot integration ?', 'CommentAuthor': 'SofisticatiousRattus', 'Comment': 'neovim, if you are open to that sort of thing'}, {'Subreddit': 'python', 'Reddit_Title': 'Alternative to Spyder IDE with co-pilot integration ?', 'CommentAuthor': 'KrazyKirby99999', 'Comment': 'PyCharm meets your requirements'}, {'Subreddit': 'python', 'Reddit_Title': 'Alternative to Spyder IDE with co-pilot integration ?', 'CommentAuthor': 'Phunfactory', 'Comment': 'Try DataSpell. Its basicaly Pycharm for DataScience and properly integrates .py scripting, jupyter, git, and databases in one IDE. I made the switch myself and only miss the dedicated plot tab.'}, {'Subreddit': 'python', 'Reddit_Title': 'Alternative to Spyder IDE with co-pilot integration ?', 'CommentAuthor': 'dumpysize', 'Comment': ""That's the thing. VScode does not have that variable explorer or am I missing an extension ?""}, {'Subreddit': 'python', 'Reddit_Title': 'Alternative to Spyder IDE with co-pilot integration ?', 'CommentAuthor': 'dumpysize', 'Comment': 'Currently installing. Many thanks!'}, {'Subreddit': 'python', 'Reddit_Title': 'Alternative to Spyder IDE with co-pilot integration ?', 'CommentAuthor': 'debunk_this_12', 'Comment': 'You can run ipywidgets in vscode. Also call me crazy but I don‚Äôt like copilot very much'}, {'Subreddit': 'python', 'Reddit_Title': 'Alternative to Spyder IDE with co-pilot integration ?', 'CommentAuthor': 'dumpysize', 'Comment': ""Thanks! I'll download VScode again and give it another shot with that extension (although it seems to be specifically geared towards notebooks ?).  \n\n\nNot a fan of copilot either for now, but I'm pretty sure it will get much better pretty soon. I really want to get used to it asap.""}, {'Subreddit': 'python', 'Reddit_Title': 'Alternative to Spyder IDE with co-pilot integration ?', 'CommentAuthor': 'debunk_this_12', 'Comment': 'Also note vscode is meant for large production grade projects and can run Jupiter notebooks. Spyder is more of a Jupyter clone.'}, {'Subreddit': 'python', 'Reddit_Title': 'Alternative to Spyder IDE with co-pilot integration ?', 'CommentAuthor': 'Archeroe', 'Comment': 'Vscode meant for large prod projects ? If anything I\'ve seen it slows down in that case (at least in the past with large ts projects), it\'s probably the most used text editor by beginners and doesn\'t really need a learning curve. \n\nIt\'s a generalist editor more than anything else, it\'s probably capable of handling ""large/monolithic prod projects"" but isn\'t ""meant for that"".'}]"
python,My firm is afraid of Anaconda/Jupyter Notebook,https://www.reddit.com/r/Python/comments/15b6j1n/my_firm_is_afraid_of_anacondajupyter_notebook/,14,41,Practical_Pie2252,1690475644.0,"Hi! 

I‚Äôm a beginner with Python but I would like to apply what I‚Äôve learned to my day to day job. Unfortunately, my firm is unfamiliar with the technology. And they‚Äôre highly concerned with cyber security and protecting their network. So when they hear the words ‚Äúopen source‚Äù, alarm bells go off. 

My training has been on how to actually use Python for data science by coding in Anaconda/Jupyter notebooks. And not on what anaconda/Jupyter is from an IT infrastructure point of view.

So my understanding is that anaconda actually runs the code and produces the result. While Jupyter is just the interface in which you write it. With the primary advantage being that Jupyter is web based so you can easily access the libraries.

Do I have that right? 

Part 2:

They have offered access to Visual Studio, but when I needed pandas, I had to ask IT to download it onto my machine which took hours. And they watched the internet connection out of fear of hackers because it‚Äôs open source. 

So how do I provide comfort to my managers that the open source libraries are not filled with malicious code? 

And how would you address the problem that Jupyter users could access potentially dangerous libraries? Perhaps visual studio is the only way to restrict users from accessing anything they please? 

Thanks in advance!","[{'Subreddit': 'python', 'Reddit_Title': 'My firm is afraid of Anaconda/Jupyter Notebook', 'CommentAuthor': 'EuroStepJam', 'Comment': ""I'm no python expert, but this post is kind of funny. I'm imagining a small company and everyone gathered around a monitor holding their breath while pandas is downloaded waiting for a ransom message from a hacker to show up any second..![gif](emote|free_emotes_pack|surprise)""}, {'Subreddit': 'python', 'Reddit_Title': 'My firm is afraid of Anaconda/Jupyter Notebook', 'CommentAuthor': 'rahmtho', 'Comment': 'You have it slightly messed up.\n\nAnaconda just provides a manageable environment for python versions and libraries. It means libraries you install won‚Äôt mess up your system python libraries.\n\nJupyter notebooks are just a web based interactive python tool. Its kind of like an IDE. However unlike traditional IDEs, it allows you to cache results in blocks (so you don‚Äôt have to run the whole program again) and allows you to display results including graphics right there in the console.\n\nThe thing that runs your program is the Python Interpreter.\n\nSo conda = environment management, python = runs code, jupyter = ide'}, {'Subreddit': 'python', 'Reddit_Title': 'My firm is afraid of Anaconda/Jupyter Notebook', 'CommentAuthor': 'quts3', 'Comment': ""You shouldn't need IT to download pandas for you unless  pip/conda is firewall restricted.\n\nNo root perms are required, or even desirable, to install pandas.  Some firms do firewall pip downloads though.\n\nIf pip is firewalled you  need to ask them to step up their game and host an alternative intranet ecosystem source like jfrog artifactory or just a private pip source. If a firm firewalls pip either they don't want to use python or they are committing to some real enterprise level package support.\n\nIf pip is not firewalled just get real good with pip venvs which dont require or desire local admin privileges. That's much more common.\n\nPs anaconda doesnt run anything. It's a package manager that installs other run times.\n\nYou are running python. You can also host jupyter locally with your own user perms in a venv provided they haven't locked down your own local machine loopback ports.\n\n\n\n\nGl""}, {'Subreddit': 'python', 'Reddit_Title': 'My firm is afraid of Anaconda/Jupyter Notebook', 'CommentAuthor': 'PlausibleNinja', 'Comment': 'Since you are asking this question, it means you cannot provide comfort to your managers that pandas won‚Äôt contain malicious code.\n\nBecause the truth is, it might.\n\nDevelopers think it‚Äôs completely safe to `pip install` and `npm install` whatever random thing they find on GitHub.\n\nThe truth is, anything you `pip install` will end up executing code on your computer. And if pypi got hacked, or the pandas maintainers got hacked, moments before you `pip install pandas`, you‚Äôre going to execute malicious code inside your companies network.\n\nIf you worked at a bank or hospital, the IT department would be absolutely justified in exercising a paranoid level of caution on things like this.'}, {'Subreddit': 'python', 'Reddit_Title': 'My firm is afraid of Anaconda/Jupyter Notebook', 'CommentAuthor': 'sarc-tastic', 'Comment': 'Why do you need jupyter? You have python and pandas, do what you need to do.'}, {'Subreddit': 'python', 'Reddit_Title': 'My firm is afraid of Anaconda/Jupyter Notebook', 'CommentAuthor': '123_alex', 'Comment': 'Get python from the microsoft store (no admin rights required) and use VSCode (not Visual Studio) or some other light editor. Use pip to install pandas and jupyter notebook (again, no admin rights required).\n\nOr use google colab. Good luck!'}, {'Subreddit': 'python', 'Reddit_Title': 'My firm is afraid of Anaconda/Jupyter Notebook', 'CommentAuthor': 'Tom_STY93', 'Comment': ""I think that depends. I used to work in a very large bank with the kernel trading system and I met the same situation that only IT guys can install the pkgs. For open source software, I think if it's a really critical business, then having infosec for reviewing the whole src shall be necessary and that's the reason why they did not recommend you using it, for it may cost a lot efforts. The tech stack always being restricted in this situation.\n\nI think what you can do it to ask IT whether you can have a stg env that may have independent networks (not connecting to your company's internel network) and you shall control your own env, and all the data you used in stg may all be mocked data or the data unrelated with your work. Then you do it a single way for cp the model/scripts to your dev/prd env with running the real data.\n\nHeckers are really great these days. Do you remember they even hecked git for running Crypto Mining Services.......""}, {'Subreddit': 'python', 'Reddit_Title': 'My firm is afraid of Anaconda/Jupyter Notebook', 'CommentAuthor': 'spinwizard69', 'Comment': "">So my understanding is that anaconda actually runs the code and produces the result. While Jupyter is just the interface in which you write it. With the primary advantage being that Jupyter is web based so you can easily access the libraries.  \nDo I have that right?\n\nNot really.   This would be a long discussion and your specific use case is a factor.   Generally though most Jupyter users are running code through a modified Python interpreter.\n\n&#x200B;\n\n>And they watched the internet connection out of fear of hackers because it‚Äôs open source.  \nSo how do I provide comfort to my managers that the open source libraries are not filled with malicious code?\n\nWell it is open source.   All you need to do is include on obscure package and you can leave your installation compromised.   Repositories like Pypi do a really good job of curating respectable software but even they have had issues.   As for your managers you can't provide 100% comfort with respect to open source, however you can't do that with Visual Studio or any libs you might use with that.   If your managers think that commercial software is safer they are frankly complete idiots.   This especially if they believe letting Microsoft auto update their machines is a good idea.\n\nHonestly I'm not sure you know enough about Jupyter and open source in general to put up a good fight.   All I know is that MicroSoft has caused me a lot of grief with their latest OS releases and MS office releases, as they have been full of bugs.""}, {'Subreddit': 'python', 'Reddit_Title': 'My firm is afraid of Anaconda/Jupyter Notebook', 'CommentAuthor': 'SpiderWil', 'Comment': 'crowd worthless selective sulky reply north chief badge wrong forgetful ` this post was mass deleted with www.Redact.dev `'}, {'Subreddit': 'python', 'Reddit_Title': 'My firm is afraid of Anaconda/Jupyter Notebook', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'python', 'Reddit_Title': 'My firm is afraid of Anaconda/Jupyter Notebook', 'CommentAuthor': 'SittingWave', 'Comment': ""> I‚Äôm a beginner with Python but I would like to apply what I‚Äôve learned to my day to day job. Unfortunately, my firm is unfamiliar with the technology. And they‚Äôre highly concerned with cyber security and protecting their network. So when they hear the words ‚Äúopen source‚Äù, alarm bells go off.\n\nThey are utter morons. Change job asap. It's going to hold you back.""}]"
python,"Python for Finance: Pandas Resample, Groupby, and Rolling",https://ponder.io/python-for-finance-pandas-resample-groupby-and-rolling/,135,28,robotpwns,1685744209.0,,"[{'Subreddit': 'python', 'Reddit_Title': 'Python for Finance: Pandas Resample, Groupby, and Rolling', 'CommentAuthor': 'BathroomItchy9855', 'Comment': ""Are we allowed to mention pandas in this sub? Don't let the Polars bros hear you""}, {'Subreddit': 'python', 'Reddit_Title': 'Python for Finance: Pandas Resample, Groupby, and Rolling', 'CommentAuthor': 'thumbsdrivesmecrazy', 'Comment': 'A great tutorial, thanks! Here‚Äôs also a step-by-step breakdown of perform aggregation, transformation, or other operations with Gropuby: [Getting Started with Pandas Groupby](https://www.codium.ai/blog/efficient-data-analysis-with-pandas-groupby/)'}, {'Subreddit': 'python', 'Reddit_Title': 'Python for Finance: Pandas Resample, Groupby, and Rolling', 'CommentAuthor': 'SpambotSwatter', 'Comment': 'Hey, another bot replied to you;  /u/thumbsdrivesmecrazy is a spammer!  **Do not click any links they share or reply to**.  Please downvote their comment and click the `report` button, selecting `Spam` then `Harmful bots`.  \n\nWith enough reports, the reddit algorithm will suspend this spammer.'}, {'Subreddit': 'python', 'Reddit_Title': 'Python for Finance: Pandas Resample, Groupby, and Rolling', 'CommentAuthor': 'amorous_chains', 'Comment': 'I‚Äôm polars bearish tbh'}, {'Subreddit': 'python', 'Reddit_Title': 'Python for Finance: Pandas Resample, Groupby, and Rolling', 'CommentAuthor': 'None', 'Comment': 'Okey, can someone explain what is ploblem with pandas, seen a very good library.'}, {'Subreddit': 'python', 'Reddit_Title': 'Python for Finance: Pandas Resample, Groupby, and Rolling', 'CommentAuthor': 'None', 'Comment': 'üòÇ them polars paychecks in the mail'}, {'Subreddit': 'python', 'Reddit_Title': 'Python for Finance: Pandas Resample, Groupby, and Rolling', 'CommentAuthor': 'janek3d', 'Comment': ""Both are good. It's just that recently in my use cases polars is simply faster and uses less memory. Also pandas takes 20s to read CSV while polars takes 1,5s""}, {'Subreddit': 'python', 'Reddit_Title': 'Python for Finance: Pandas Resample, Groupby, and Rolling', 'CommentAuthor': 'opteryx5', 'Comment': 'Just realized ‚Äî was the name polars chosen because it‚Äôs another kind of bear? Admittedly I never think of ‚Äúpanda bear‚Äù when I say pandas (probably because I say it so often that it becomes its own sort of word) but if they chose ‚Äúpolars‚Äù as a foil to ‚Äúpandas‚Äù it would make sense. Should we expect grizzlies in 2030?'}, {'Subreddit': 'python', 'Reddit_Title': 'Python for Finance: Pandas Resample, Groupby, and Rolling', 'CommentAuthor': 'GreenWoodDragon', 'Comment': ""It's a mature library, well supported, packed with functions. So of course some bright spark is going to come along, here or on Medium, and start promoting this new 'powerful' thing they wrote last week. \n\nI'm sure Polars is great but it's the new kid on the block so all the neophytes are going to sing its praises.""}, {'Subreddit': 'python', 'Reddit_Title': 'Python for Finance: Pandas Resample, Groupby, and Rolling', 'CommentAuthor': 'Mysterious_Screen116', 'Comment': 'Fwiw, when I need to, I use pyarrow to read csvs then to_pandas().\n\nAlthough I use duckdb for most of this stuff anyway'}, {'Subreddit': 'python', 'Reddit_Title': 'Python for Finance: Pandas Resample, Groupby, and Rolling', 'CommentAuthor': 'None', 'Comment': ""It's funny to me that the benchmark every Polars apologist references is CSV read speeds. You shouldn't even be using CSV for applications where Polars would theoretically be useful.""}]"
python,Made a csv parser library which automatically detects delimiter and start and end of data,https://www.reddit.com/r/Python/comments/13wxiih/made_a_csv_parser_library_which_automatically/,19,16,Oddball777,1685565943.0,"For most purposes, just passing the file path will be sufficient and you will have a pandas data frame of you data. Automatically neglects the random extra information at the top and bottom of a file. Also works with those annoying delimiter within quotes thingies (ex: you have a comma delimiter and one field is ‚ÄúJohn, Andrew and Steven‚Äù). It is on PyPI so you can download it with pip.

https://github.com/Oddball777/csv-scavenger","[{'Subreddit': 'python', 'Reddit_Title': 'Made a csv parser library which automatically detects delimiter and start and end of data', 'CommentAuthor': 'coffeewithalex', 'Comment': '> `num_of_columns = len(line.strip().split(delim))`\n\nAnd another re-invention of CSV parsers that don\'t actually process CSVs.\n\nIt\'s laudable that you\'re trying to improve the status quo, however this is just another one in a long line of projects that wrongly treat CSV, when there\'s an excellent (but not perfect) implementation in the Python standard library.\n\n...\n\nJust use standard libraries that doesn\'t even need dependencies. `import csv` and [away you go](https://docs.python.org/3/library/csv.html#csv.Sniffer).\n\nHere\'s 3 important (and incorrect) assumptions that you shouldn\'t make:\n\n1. The CSV values don\'t contain the delimiter (which they absolutely can, since CSVs can safely store strings that can contain the delimiter)\n2. That the most common character is THE CSV delimiter. It\'s not that. It\'s the character that consistently split the row into the same number of columns on each row.\n3. The file encoding is the same that you launch your Python script with. It\'s nice if everything you have is UTF-8, but some systems like big corporate crap are big on UTF-16 variants, with or without BOM. Also legacy ""local"" systems like to use regional encodings like ISO-8859-1 and whatnot. It\'s a common courtesy to always be explicit about the encoding when you open a file to read as text. If you don\'t know the encoding, use chardet or something.\n\nAnd on top of that, my pet peeve is that the majority of CSV implementations are lossy. Empty columns get read as empty strings, but NULL (None) values get encoded as empty columns. It\'s a lossy conversion. So far only PyArrow handles it correctly, from what I\'ve seen. But if you don\'t care about that, just use `csv`. Don\'t assume that people need to install Pandas just to be able to handle CSVs.'}, {'Subreddit': 'python', 'Reddit_Title': 'Made a csv parser library which automatically detects delimiter and start and end of data', 'CommentAuthor': 'cipri_tom', 'Comment': 'Why `enumerate` followed by `if i%step` when you `for line in lines[::step]`? \n\nComparisons to None are recommended to be made using `is` rather than `==`\n\nOtherwise, looks pretty good! Thanks for making it a package!'}, {'Subreddit': 'python', 'Reddit_Title': 'Made a csv parser library which automatically detects delimiter and start and end of data', 'CommentAuthor': 'OhYouUnzippedMe', 'Comment': 'What‚Äôs wrong with pd.read_csv()?'}, {'Subreddit': 'python', 'Reddit_Title': 'Made a csv parser library which automatically detects delimiter and start and end of data', 'CommentAuthor': 'candyman_forever', 'Comment': ""The link doesn't work""}, {'Subreddit': 'python', 'Reddit_Title': 'Made a csv parser library which automatically detects delimiter and start and end of data', 'CommentAuthor': 'Spleeeee', 'Comment': 'You committed pyc files fyi.'}, {'Subreddit': 'python', 'Reddit_Title': 'Made a csv parser library which automatically detects delimiter and start and end of data', 'CommentAuthor': '64826b00-740d-4be3', 'Comment': 'Lol what a joke.'}, {'Subreddit': 'python', 'Reddit_Title': 'Made a csv parser library which automatically detects delimiter and start and end of data', 'CommentAuthor': '-lq_pl-', 'Comment': 'This. All of it.'}, {'Subreddit': 'python', 'Reddit_Title': 'Made a csv parser library which automatically detects delimiter and start and end of data', 'CommentAuthor': 'Oddball777', 'Comment': 'First, thanks a lot for taking the time to give feedback, this is extremely valuable for me.\n\nThe reason I made this is because I tried using csv.Sniffer, but for some reason couldn‚Äôt get it to work when there‚Äôs extra unnecessary logging information before and after the actual data in the file (even when limiting the delimiter search space to only two options). The tests files I used (which are correctly parsed by my library) are in the repo (example_csvs). If anyone knows of a solution to this with csv.Sniffer, help would be appreciated! If my ignorance makes this library useless, then at least it‚Äôll have been a great time to write it and a great learning experience. \n\nHere‚Äôs my response to your 3 points:\n\n1. I‚Äôm not sure I understand this, unless you‚Äôre talking about quoted values (using the delimiter within quotes). That might be what you mean by strings? If you‚Äôre talking about that, then my library does handle it correctly (see the orgs.csv example file). I will eventually add support for more quote types.\n\n2. I might be wrong, but I think you might have misread what the code actually does. I‚Äôm not just choosing the most common character. For each line, I identify the possible patterns for many commonly used delimiters (delim, num_of_cols) and then I choose the pattern which shows up on the most number of lines. You could have a comma separated file filled with randomly placed  semicolons, but even if there‚Äôs more semicolons in the file than commas, the semicolons don‚Äôt lead to a reliable number of rows and therefore it won‚Äôt be chosen. I believe this is actually pretty similar to how csv.Sniffer works.\n\n3. This is a really good point which I hadn‚Äôt thought about. I‚Äôll see to that. Thanks for the suggestion!\n\nOf course, csv files are kind of a mess in general and I have no doubt that there are a lot of edge cases which will lead to errors. My goal in making this was not to make it foolproof. If you want something that works all the time, just use pd.read_csv and check the delimiter and start row by hand. The goal was for it to be extremely easy and fast. I use internally generated csv files at work a lot, and different systems use different formatting, so this was mostly to make my job easier and faster. I figured that it could be useful to other people as well. Thanks again for the feedback!\n\nEdit: For your first point, I double checked and you were partly right. I did consider the possibility of delimiters within a string, but only while actually creating the dataframe, not while detecting the delimiter. I had tested it for files in which SOME rows had quoted delims (produced no errors), but not in cases where MOST rows had them (in this case it lead to an error). That‚Äôs fixed now, thanks!'}, {'Subreddit': 'python', 'Reddit_Title': 'Made a csv parser library which automatically detects delimiter and start and end of data', 'CommentAuthor': 'y2kdisaster', 'Comment': 'This is the level of programmer wisdom I hope to have one day'}, {'Subreddit': 'python', 'Reddit_Title': 'Made a csv parser library which automatically detects delimiter and start and end of data', 'CommentAuthor': 'th0ma5w', 'Comment': 'I picked up somewhere that it is a rumor more than a standard but this is really the whole deal of why it is unfortunately deceptive that it could be simple.'}, {'Subreddit': 'python', 'Reddit_Title': 'Made a csv parser library which automatically detects delimiter and start and end of data', 'CommentAuthor': 'y2kdisaster', 'Comment': 'If I was OP and I read this comment Id just end my life on the spot'}]"
python,(Q) Advantage of Raw vs Pandas vs SQL based data manipulation in Python,https://www.reddit.com/r/Python/comments/13rly0v/q_advantage_of_raw_vs_pandas_vs_sql_based_data/,2,19,kyleireddit,1685031303.0,"In term of performance, ease to use, and perhaps other efficiency factors, what would you considered better between raw data manipulation (using list, dict & stuff), versus using Pandas (dataframe), versus SQL based libs (like SQLite, DuckDB etc)

I assume people are more familiar with SQL, so is it better for them to stay with SQL based lib, versus learning Pandas or messing with raw data structure?

This assumes the person pull data from external/cloud database, importing csv/excel, do the model and create report/output file, and no graphic/media/other non-text inputs.

TiA","[{'Subreddit': 'python', 'Reddit_Title': '(Q) Advantage of Raw vs Pandas vs SQL based data manipulation in Python', 'CommentAuthor': 'None', 'Comment': 'Id say I get the data like 80-90% with sql, then I use pandas for final clean up and joins'}, {'Subreddit': 'python', 'Reddit_Title': '(Q) Advantage of Raw vs Pandas vs SQL based data manipulation in Python', 'CommentAuthor': 'Adventurous_Math_336', 'Comment': ""It really depends on the specific use case and preferences, but personally, I find the flexibility and ease of use of Pandas to be a game changer. Plus, it's always helpful to expand your knowledge and skills beyond just SQL. However, if you're working with extremely large datasets, raw data manipulation might be more efficient. So, it's all about weighing the pros and cons and choosing what works best for you!""}, {'Subreddit': 'python', 'Reddit_Title': '(Q) Advantage of Raw vs Pandas vs SQL based data manipulation in Python', 'CommentAuthor': 'wwwTommy', 'Comment': 'Im doing all stuff with pandas, because we use files to store the time series data we get. \n\nFrom our customers we get csv or some other files. Then we have to read the file (new format every time) and this can be easily done with pandas. \nAfter we have the raw data we just save it as a hdf5 file or recently as feather (this turn 33GB csv into 2GB feather). \n\nBut I have to say: we have some nice servers with up to 2TB Ram so this is even possible to be done.'}, {'Subreddit': 'python', 'Reddit_Title': '(Q) Advantage of Raw vs Pandas vs SQL based data manipulation in Python', 'CommentAuthor': 'ohtinsel', 'Comment': 'Not a fan of the pandas API (polars seems much better in this regard). I use straight up numpy or C extensions if I really want speed.'}, {'Subreddit': 'python', 'Reddit_Title': '(Q) Advantage of Raw vs Pandas vs SQL based data manipulation in Python', 'CommentAuthor': 'georgesovetov', 'Comment': ""Ease of use:\n\n\\- Pure Python - 10/10\n\n\\- Pandas - 3/10\n\n\\- SQL - 7/10\n\nPerformance and efficiency:\n\n\\- Pure Python - 1/10\n\n\\- Pandas - 10/10\n\n\\- SQL - 5/10\n\nPython is more or less comfortable with up to 100000 rows.\n\nWith SQL and Pandas, you'll get performance and more high-level language at the cost of setup and and time to get familiar with the technologies.""}, {'Subreddit': 'python', 'Reddit_Title': '(Q) Advantage of Raw vs Pandas vs SQL based data manipulation in Python', 'CommentAuthor': 'PacketDragon', 'Comment': 'Generally, databases are very good at storing and retrieving data. If you can use built-in SQL methods to accomplish your data retrieval goals you will be better off for it (performance) as the database code will be closer to the data, and generally run significantly faster than python can do the same types of data retrievals.\n\nPandas is a great tool to share insights, perform low-code analytics and generally barrow from others to accomplish goals.\n\nThey really are sort of two different purpose built tools and I think they should be looked at as such.'}, {'Subreddit': 'python', 'Reddit_Title': '(Q) Advantage of Raw vs Pandas vs SQL based data manipulation in Python', 'CommentAuthor': 'Mysterious_Screen116', 'Comment': '100%.\n\nI\'m a recent duckdb convert: I do nearly all my data manipulation in duckdb /sql including loading parquets, joining with tables & dataframes. I drop the data out to Pandas only to feed it into modules that require it like sklearn.\n\nExample of duckdb:\n\n    %pip install duckdb\n    import duckdb\n    with duckdb.connect() as con:\n        con.execute(""install httpfs;load httpfs"") # load if not already loaded\n        df=con.execute(""""""with data as (select * from \'https://huggingface.co/datasets/duorc/resolve/refs%2Fconvert%2Fparquet/ParaphraseRC/duorc-test.parquet\')\n            pivot data on no_answer using count(*) group by title"""""").df()\n        print(df)'}, {'Subreddit': 'python', 'Reddit_Title': '(Q) Advantage of Raw vs Pandas vs SQL based data manipulation in Python', 'CommentAuthor': 'kyleireddit', 'Comment': 'Final clean up & join?\n\nDo you mind giving us an example of that? \n\nAnd I thought join is easier done with SQL?'}, {'Subreddit': 'python', 'Reddit_Title': '(Q) Advantage of Raw vs Pandas vs SQL based data manipulation in Python', 'CommentAuthor': 'kyleireddit', 'Comment': 'So large dataset manipulation is easier (more efficient) to be done with Pandas, vs SQL based tool?\nHow big of data?\n\nJust curious on your perspective'}, {'Subreddit': 'python', 'Reddit_Title': '(Q) Advantage of Raw vs Pandas vs SQL based data manipulation in Python', 'CommentAuthor': 'kyleireddit', 'Comment': 'I need to check that feather!'}, {'Subreddit': 'python', 'Reddit_Title': '(Q) Advantage of Raw vs Pandas vs SQL based data manipulation in Python', 'CommentAuthor': 'Geenst12', 'Comment': 'I dont get it, pandas literally is a C extention and literally uses numpy arrays for most data types. What am I missing?'}]"
python,Will Python ever be eco friendly?,https://www.reddit.com/r/Python/comments/13qfobf/will_python_ever_be_eco_friendly/,0,12,Academy-,1684917067.0,"Seeing [this](https://www.reddit.com/r/ProgrammerHumor/comments/13q00fb/is_your_language_eco_friendly/?utm_source=share&utm_medium=ios_app&utm_name=ioscss&utm_content=1&utm_term=1) post on /ProgrammerHumor got me thinking about the high energy consumption of Python compared to, e.g., Rust. 
I know that Python 3.11 brings in some significant performance boosts. Same for Pandas 2. Also been told that ‚Äúthe best way to code in Python, is not to code in Python‚Äù, i.e. to utilize C or Rust-based operations in NumPy or Polars. Haven‚Äôt seen any comparisons on this though.

Even so, do you think there is an eco-friendly future for Python?","[{'Subreddit': 'python', 'Reddit_Title': 'Will Python ever be eco friendly?', 'CommentAuthor': 'coffeewithalex', 'Comment': 'Don\'t read or propagate controversial stuff that you don\'t really understand.\n\nControversial: many people question the methodology and relevance of that study, and for good reason. It\'s not anywhere near what a real life use scenario would look like. Really they might as well have included bash there and shame everyone who dares to use bash, when actually some of the most efficient data pipelines I\'ve worked with, had bash in the controlling code.\n\nSo unless you have gone into the study and read the code and the write-up, or understand the origins of those numbers, you don\'t understand the conclusions of that study. Don\'t worry, that\'s pretty common. The media is infamous for taking careful niche study results and blowing them out of proportion with misleading titles. And regular people on Twitter are an order of magnitude worse than that.\n\nAnd if that is the case, then the question you should start asking is ""what does this really mean"", instead of ""how do we fix this big problem that impacts the world"".\n\nWhat this really means is that you shouldn\'t loop through individual bits of your data using raw CPython, and reinventing every single low level algorithm in pure CPython with only built-in types. But hey! You\'re already not doing that, so there\'s nothing to worry about.'}, {'Subreddit': 'python', 'Reddit_Title': 'Will Python ever be eco friendly?', 'CommentAuthor': 'KennyBassett', 'Comment': 'By their nature, the higher level the language, the higher energy consumption.\n\nSure you could write extremely efficient code in assembly, but then you 10x the time it takes to write it. That itself uses extra energy from your computer, monitor, code editor, lights, food, etc.\n\nHow often will you use the code? Does the increase in energy usage while running outweigh the extra time and energy it took to write it?'}, {'Subreddit': 'python', 'Reddit_Title': 'Will Python ever be eco friendly?', 'CommentAuthor': 'crawl_dht', 'Comment': 'IT industry is forcing developers to work from office. Until you solve this problem of increasing the carbon footprint due to unnecessary travel, electricity and fuel consumption, you are nowhere close to the point where you should finally address CPU usage.'}, {'Subreddit': 'python', 'Reddit_Title': 'Will Python ever be eco friendly?', 'CommentAuthor': 'htmx_enthusiast', 'Comment': 'Zero programming languages are eco friendly.\n\nIf you are concerned with the environment, read the [Carbon Almanac](https://thecarbonalmanac.org).\n\nIn a recent interview with Tim Ferriss, Seth Godin said, after working with 300+ contributors on the Carbon Almanac:\n\n- *‚Äù‚Ä¶this is the myth of the carbon footprint. There is nothing you can do personally, as a privileged person of the colonial world, to fix the climate. But what you can do is organize, that if you can figure out how to get five or 10 people together, you can probably ban gas-powered leaf blowers in your village. And that will have 50 times the impact of you switching to an electric car.‚Äù*\n\n- *‚ÄùPlus the idea of banding together with five or 10 or 15 other people, creating the conditions for other people to find something to care about and succeed at it, will fill you with meaning, not with despair.‚Äù*'}, {'Subreddit': 'python', 'Reddit_Title': 'Will Python ever be eco friendly?', 'CommentAuthor': 'pythonHelperBot', 'Comment': ""Hello! I'm a bot!\n\nIt looks to me like your post might be better suited for r/learnpython, \na sub geared towards questions and learning more about python **regardless of how advanced your question might be**. \nThat said, I am a bot and it is hard to tell.\nPlease follow the subs rules and guidelines when you do post there, it'll help you get better answers faster.\n\nShow /r/learnpython **the code you have tried and describe in detail where you are stuck.** \nIf you are getting an error message, include the full block of text it spits out.\nQuality answers take time to write out, and many times other users will need to ask clarifying questions. Be patient and help them help you. \n\nYou can also ask this question in the [Python discord](https://discord.gg/3Abzge7), \na large, friendly community focused around the Python programming language, open to those who wish to learn the language \nor improve their skills, as well as those looking to help others. \n\n\n\n***\n\n[^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) \n^(|)\n[^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) \n^(|)\n^(this bot is written and managed by /u/IAmKindOfCreative) \n\n\n\n^(This bot is currently under development and experiencing changes to improve its usefulness)""}, {'Subreddit': 'python', 'Reddit_Title': 'Will Python ever be eco friendly?', 'CommentAuthor': 'Gloomy-Fix-4393', 'Comment': ""One must factor in the lighting, heating, PC development on-time and coffee machine time when comparing C to Python developer time. It's the TCoD.""}, {'Subreddit': 'python', 'Reddit_Title': 'Will Python ever be eco friendly?', 'CommentAuthor': 'flagos', 'Comment': ""My code in python is mainly generating SQL requests and transforming the result into a JSON payload by calling a C library.\n\nIf you consider the whole thing, it's like spending 99% of the execution time in C language.\n\nNot that much room for improvement in the end.""}, {'Subreddit': 'python', 'Reddit_Title': 'Will Python ever be eco friendly?', 'CommentAuthor': 'Deezl-Vegas', 'Comment': ""It's unfortunate, but when you execute 150 instructions to add 2+2 you're not going to get great performance.""}, {'Subreddit': 'python', 'Reddit_Title': 'Will Python ever be eco friendly?', 'CommentAuthor': 'Stinedurf', 'Comment': 'Your writeup is valid and insightful but I have to take a small issue with your first sentence.  The OP was primarily asking a question and shouldn‚Äôt be chastised for doing so.  It is unreasonable to expect everyone to thoroughly research everything they ask questions about.  By asking the question the OP gave you the opportunity to point out the controversy in the underlying assumption and educate both the OP and others as well.'}, {'Subreddit': 'python', 'Reddit_Title': 'Will Python ever be eco friendly?', 'CommentAuthor': 'coffeewithalex', 'Comment': ""Yes, I am quite direct most of the time. I start with the point. That might seem rough when you don't also see my welcoming and peaceful body language, which makes text-only communication inefficient and difficult.\n\nI didn't have the intention of chastising, but I'm warning against loaded questions, and highlighting how this approach would lead to incorrect paths of reasoning and incorrect conclusions and actions. I have this issue with many colleagues who spend a lot of energy trying to solve very simple problems, that they can't solve in simple ways because they start with such incorrect assumptions that are taken sometimes as axioms.""}, {'Subreddit': 'python', 'Reddit_Title': 'Will Python ever be eco friendly?', 'CommentAuthor': 'Stinedurf', 'Comment': 'I get it, and again I do appreciate the points you were making in your post.  I probably worry too much about scaring away less experienced Reddit participants.'}]"
python,Course to learn code structuring and best practices,https://www.reddit.com/r/Python/comments/13jjff2/course_to_learn_code_structuring_and_best/,26,13,EatDoughnut,1684276390.0,"Hi,

I‚Äôm a Principal Data Engineer and use python and pySpark on day to day basis to read and transform data. Lately, I have been feeling I need to improve my code structuring skills as I tend to spill everything in one big python script and then once code is ready and working, I have to work backwards to see what part can be converted to functions and make th reusable. I‚Äôm looking to improve on the part where I follow best practices and start structuring my code at the start itself. 
Are there any good courses available where I can learn more software engineering side python to be leveraged in data engineering pipelines?","[{'Subreddit': 'python', 'Reddit_Title': 'Course to learn code structuring and best practices', 'CommentAuthor': 'ianitic', 'Comment': ""ArjanCodes on YouTube walks through a good deal of software design in python. Additionally does some code roasts that I think are beneficial.\n\nOther than something like that, how often to you browse python repos on GitHub? That's helped me a lot.""}, {'Subreddit': 'python', 'Reddit_Title': 'Course to learn code structuring and best practices', 'CommentAuthor': 'thisismyredditacct11', 'Comment': 'Are you able to ask for code reviews at work from someone who is skilled in this area? I learned a lot this way myself.\n\nThe book the Pragmatic Programmer is a classic and is remains pretty good today.'}, {'Subreddit': 'python', 'Reddit_Title': 'Course to learn code structuring and best practices', 'CommentAuthor': 'Electronic_Gear_8143', 'Comment': 'Look into source code of open source projects from google, aws, meta‚Ä¶ You‚Äôll learn a lot from them.'}, {'Subreddit': 'python', 'Reddit_Title': 'Course to learn code structuring and best practices', 'CommentAuthor': 'og_tea_drinker', 'Comment': ""I think it's something that just comes with time. I'm in a similar position to you. You'll get to a point soon enough where you know you need to write a block as function. \n\nHave a look at the free Harvard courses, I can't point you to a specific one, but it's good information and they move very quickly, they definity teach proper structure.""}, {'Subreddit': 'python', 'Reddit_Title': 'Course to learn code structuring and best practices', 'CommentAuthor': 'thrallsius', 'Comment': 'https://docs.python-guide.org/'}, {'Subreddit': 'python', 'Reddit_Title': 'Course to learn code structuring and best practices', 'CommentAuthor': 'Exotic-Draft8802', 'Comment': 'Test driven developent might help you. Especially if you try to get high branch coverage you will feel the need to split your code into smaller (testable) parts.'}, {'Subreddit': 'python', 'Reddit_Title': 'Course to learn code structuring and best practices', 'CommentAuthor': 'EatDoughnut', 'Comment': ""I will look up the channel on YT you mentioned. \nAbout git, I usually explore Python libraries that I am using sometimes to get a deep understanding of what the library is doing. That's where I get the inspiration from to write and structure code like that. Are you referring to the same repos or something different?""}, {'Subreddit': 'python', 'Reddit_Title': 'Course to learn code structuring and best practices', 'CommentAuthor': 'ATX_Analytics', 'Comment': 'This'}, {'Subreddit': 'python', 'Reddit_Title': 'Course to learn code structuring and best practices', 'CommentAuthor': 'EatDoughnut', 'Comment': 'Do you mean harvard courses on coursera?'}, {'Subreddit': 'python', 'Reddit_Title': 'Course to learn code structuring and best practices', 'CommentAuthor': 'lattice737', 'Comment': 'The site GitHub hosts all sorts of original Python projects. Exploring them will expose you to different project structures, documentation practices, and modules in addition to the standard ones. You will also notice different project development approaches, such as containerization, automated testing and deployment, and issues and pull requests. GitHub is a whole world, man'}, {'Subreddit': 'python', 'Reddit_Title': 'Course to learn code structuring and best practices', 'CommentAuthor': 'Anti-ThisBot-IB', 'Comment': 'Hey there ATX_Analytics! If you agree with someone else\'s comment, please leave an **upvote** instead of commenting **""This""**! By upvoting instead, the original comment will be pushed to the top and be more visible to others, which is even better! Thanks! :)\n***\n ^(I am a bot! If you have any feedback, please send me a message! More info:) [^(Reddiquette)](https://www.reddithelp.com/hc/en-us/articles/205926439#wiki_in_regard_to_comments)'}]"
python,Interesting use of `self` and `reduce` I saw in the wild,https://www.reddit.com/r/Python/comments/lxjf5l/interesting_use_of_self_and_reduce_i_saw_in_the/,358,89,renzmann,1614861020.0,"I work on ETL pipelines for the most part, and today one of my team members had something like this in a PR:

    from pyspark.sql import DataFrame
    from functools import reduce
    
    # some code where we end up with a list of spark dataframes `dfs`
    
    my_dataframe = reduce(DataFrame.union, dfs)

If you've never used spark dataframes, then all you need to know for this example is that a `DataFrame` has a method `union()` that takes a dataframe as an argument, and returns a new dataframe that is the ""union"" of them. Fairly straightforward.

So my first thought when I saw the code above was ""no, that's not right... normally we would write `lambda x, y: x.union(y)`"" for the function in `reduce`. But if you think for a second, it makes sense. For the `DataFrame.union` method, the first argument is `self`, and the second argument is `other`. Calling say `x.union(y)` is really just syntactic sugar for `DataFrame.union(x, y).` So the code my colleague posted is valid, and I would argue actually more pythonic than the lambda I would normally write. 

It seems like this could be used anywhere that you have a homogeneous iterable with a generically typed method like the one above. What are your thoughts? Is this a common technique that you see often?","[{'Subreddit': 'python', 'Reddit_Title': 'Interesting use of `self` and `reduce` I saw in the wild', 'CommentAuthor': 'james_pic', 'Comment': ""This is a legit approach, and often more succinct, and plays better with serialization (Spark's serialization relies heavily on black magic to serialize lambdas), but it does rely on you knowing the exact type of the first argument (subclasses in particular have the potential to do weird stuff). The advantage of the lambda approach is that it's duck-typed by default.""}, {'Subreddit': 'python', 'Reddit_Title': 'Interesting use of `self` and `reduce` I saw in the wild', 'CommentAuthor': 'moocat', 'Comment': 'Yes, in general:\n\n    object.method(...)\n\nand:\n\n    object.__class__.method(object, ...)\n\nare equivalent.'}, {'Subreddit': 'python', 'Reddit_Title': 'Interesting use of `self` and `reduce` I saw in the wild', 'CommentAuthor': 'Brian', 'Comment': ""That's not that uncommon, or at least didn't use to be.  Another case where you'd sometimes see it is with string methods.  Eg.\n\n    map(str.strip, list_of_strings)\n\nThough these days you can write that as a comprehension, so that kind of usage doesn't get used as much.""}, {'Subreddit': 'python', 'Reddit_Title': 'Interesting use of `self` and `reduce` I saw in the wild', 'CommentAuthor': 'NooShoes', 'Comment': ""Very nice... I've loved python since the 90s but I've never really liked the syntax for lambdas. Feels really clunky compared to other languages, or as you say, un-pythonic.""}, {'Subreddit': 'python', 'Reddit_Title': 'Interesting use of `self` and `reduce` I saw in the wild', 'CommentAuthor': 'pikeamus', 'Comment': 'I use that exact pattern often, with spark dataframes in particular in fact.'}, {'Subreddit': 'python', 'Reddit_Title': 'Interesting use of `self` and `reduce` I saw in the wild', 'CommentAuthor': 'Lomag', 'Comment': ""I run into a similar use when I need a predicate-function to test string objects. The long-form would be:\n\n    >>> def func(x):\n    ...     return x.isupper()\n    >>> \n    >>> func('ABCD')\n    True\n    >>> func('Abcd')\n    False\n\nBut you can just reference the *str* method directly:\n\n    >>> func = str.isupper  # Also islower, isdigit, etc.\n    >>> func('ABCD')\n    True\n    >>> func('Abcd')\n    False\n\n*float* has a method you can use this way, too:\n\n    >>> func = float.is_integer\n    >>> func(2.0)\n    True\n    >>> func(2.5)\n    False\n\nOh also, the *decimal.Decimal* has several more methods like this.""}, {'Subreddit': 'python', 'Reddit_Title': 'Interesting use of `self` and `reduce` I saw in the wild', 'CommentAuthor': 'None', 'Comment': ""> Calling say `x.union(y)` is really just syntactic sugar for `DataFrame.union(x, y)`\n\nWell, this isn't necessarily so.  There are two ways that this can go wrong:\n\n1. `x` might be a derived class which overrides union and not `DataFrame`\n2. Some other code might have overwritten `x.union` after construction\n\nThe second one isn't quite as unreasonable as it sounds - you might for example wrap some function members at runtime depending on runtime parameters:\n\n    if logging:\n        x.union = add_logging(x.union)""}, {'Subreddit': 'python', 'Reddit_Title': 'Interesting use of `self` and `reduce` I saw in the wild', 'CommentAuthor': 'MegaRiceBall', 'Comment': 'One second, I remember it‚Äôs not recommended to chain df.unions for spark df but use function union to operate on a list of dfs to avoid unnecessary shuffle. Is it no longer the case? (We are on 2.4)'}, {'Subreddit': 'python', 'Reddit_Title': 'Interesting use of `self` and `reduce` I saw in the wild', 'CommentAuthor': 'Agent281', 'Comment': 'These idioms are part of the appeal of functional programming. I wish that python embraced it more. Guido famously wanted to remove reduce from the standard library. I wonder if he still feels the same way.'}, {'Subreddit': 'python', 'Reddit_Title': 'Interesting use of `self` and `reduce` I saw in the wild', 'CommentAuthor': 'Ran4', 'Comment': '>It seems like this could be used anywhere that you have a homogeneous iterable with a generically typed method like the one above. What are your thoughts? Is this a common technique that you see often?\n\nIt\'s really cool that you found this on your own!\n\nThis type of stuff is incredibly common in many functional languages. This is because many functional languages (like Haskell, Elm and F#) has something called *currying*.\n\nEssentially, this means that any function that is defined like\n\n    def add(a, b): return a+b\n\nis actually defined as something like\n\n    def add(a):\n        def inner(b):\n                return a+b\n    return inner\n\nSo you can call it with `add(3)(4)`. But you can also do something like\n\n    successor = add(1)\n\nand then later in the code, you could do\n\n    successor(4)     # <- this would return 5\n\nThis type of partical application can make it really easy to create new functions.\n\nFor example `filter(lambda v: not is_prime(v), range(1000))` could instead be written as\n\n    remove_primes = filter(lambda v: not is_prime(v))\n\nand then later on,\n\n    remove_primes(range(1000))\n\n\nPython by default does not curry functions though, but you can create a curried function by using `functools.partial`.\n\nThe ""cons"" of currying-by-default is that languages with this behaviour tends to not support default arguments or optional arguments. So while in Python you\'d trivially write something like\n\n    def do_something(x, *functions):\n        return [f(x) for f in functions]\n\nin many functional languages you\'d typically have to create multiple functions:\n\n    def do_something1(x, function0): ...\n    def do_something2(x, function0, function1): ...\n    def do_something3(x, function0, function1, function2): ...\n    def do_something4(x, function0, function1, function2, function3): ...\n\n...which kind of sucks.\n\nFor example, in Haskell, instead of having a single `zip` function like in Python (roughly, `def zip(**iterables): ...`), you have multiple: https://hackage.haskell.org/package/base-4.14.1.0/docs/Data-List.html#g:17'}, {'Subreddit': 'python', 'Reddit_Title': 'Interesting use of `self` and `reduce` I saw in the wild', 'CommentAuthor': 'trolasso', 'Comment': ""It's actually a somehow smart approach, but I think I'd advice against it in a code review. It also doesn't work well if any of these DataFrames is an instance of a subclass of DataFrame.\n\nAnd, this is just another thing, I don't know this API, but I'd expect a method on DataFrame that would collapse all objects at one fell swoop instead of creating a new frame on each fold just to discard it right away.""}]"
python,"AI Cheatsheets - Now learn Tensorflow, Keras, Pytorch, Dask, Pandas, Numpy, Scipy, Pyspark, R Studio, Matplotlib and many more in an interactive manner",http://www.aicheatsheets.com/,997,67,kailashahirwar12,1567447566.0,,"[{'Subreddit': 'python', 'Reddit_Title': 'AI Cheatsheets - Now learn Tensorflow, Keras, Pytorch, Dask, Pandas, Numpy, Scipy, Pyspark, R Studio, Matplotlib and many more in an interactive manner', 'CommentAuthor': 'buenavista62', 'Comment': 'Looks like a great website. Thanks for sharing!'}, {'Subreddit': 'python', 'Reddit_Title': 'AI Cheatsheets - Now learn Tensorflow, Keras, Pytorch, Dask, Pandas, Numpy, Scipy, Pyspark, R Studio, Matplotlib and many more in an interactive manner', 'CommentAuthor': 'None', 'Comment': 'Great sheet, although there are quite a few typos.'}, {'Subreddit': 'python', 'Reddit_Title': 'AI Cheatsheets - Now learn Tensorflow, Keras, Pytorch, Dask, Pandas, Numpy, Scipy, Pyspark, R Studio, Matplotlib and many more in an interactive manner', 'CommentAuthor': 'None', 'Comment': 'Interactive learning?'}, {'Subreddit': 'python', 'Reddit_Title': 'AI Cheatsheets - Now learn Tensorflow, Keras, Pytorch, Dask, Pandas, Numpy, Scipy, Pyspark, R Studio, Matplotlib and many more in an interactive manner', 'CommentAuthor': 'darkocvet', 'Comment': 'Great sheet.Cool design.I will use it after i learn linear algebra and calculus'}, {'Subreddit': 'python', 'Reddit_Title': 'AI Cheatsheets - Now learn Tensorflow, Keras, Pytorch, Dask, Pandas, Numpy, Scipy, Pyspark, R Studio, Matplotlib and many more in an interactive manner', 'CommentAuthor': 'okayokko', 'Comment': 'there should be a go back to main menu button\nalthough the back button does work, it is not intuitive'}, {'Subreddit': 'python', 'Reddit_Title': 'AI Cheatsheets - Now learn Tensorflow, Keras, Pytorch, Dask, Pandas, Numpy, Scipy, Pyspark, R Studio, Matplotlib and many more in an interactive manner', 'CommentAuthor': 'None', 'Comment': 'Where the fuck is the interactive part? ü§¨'}, {'Subreddit': 'python', 'Reddit_Title': 'AI Cheatsheets - Now learn Tensorflow, Keras, Pytorch, Dask, Pandas, Numpy, Scipy, Pyspark, R Studio, Matplotlib and many more in an interactive manner', 'CommentAuthor': 'kailashahirwar12', 'Comment': ""P.S.: Open-source repository is available at [https://github.com/kailashahirwar/cheatsheets-ai](https://github.com/kailashahirwar/cheatsheets-ai) and the article is available at [https://startupsventurecapital.com/essential-cheat-sheets-for-machine-learning-and-deep-learning-researchers-efb6a8ebd2e5](https://startupsventurecapital.com/essential-cheat-sheets-for-machine-learning-and-deep-learning-researchers-efb6a8ebd2e5).\n\nI am open to suggestions and really appreciate everyone's feedback.""}, {'Subreddit': 'python', 'Reddit_Title': 'AI Cheatsheets - Now learn Tensorflow, Keras, Pytorch, Dask, Pandas, Numpy, Scipy, Pyspark, R Studio, Matplotlib and many more in an interactive manner', 'CommentAuthor': 'inaju', 'Comment': 'Nice work'}, {'Subreddit': 'python', 'Reddit_Title': 'AI Cheatsheets - Now learn Tensorflow, Keras, Pytorch, Dask, Pandas, Numpy, Scipy, Pyspark, R Studio, Matplotlib and many more in an interactive manner', 'CommentAuthor': '-lq_pl-', 'Comment': 'I looked at the Tensor Flow slides and was not impressed. Reading the tutorials and docs provided by Tensor Flow itself seems like a better use of time to me.'}, {'Subreddit': 'python', 'Reddit_Title': 'AI Cheatsheets - Now learn Tensorflow, Keras, Pytorch, Dask, Pandas, Numpy, Scipy, Pyspark, R Studio, Matplotlib and many more in an interactive manner', 'CommentAuthor': 'etrnloptimist', 'Comment': 'I feel like the responses here are an NLP project. Possibly written using one of the aforementioned libraries.'}, {'Subreddit': 'python', 'Reddit_Title': 'AI Cheatsheets - Now learn Tensorflow, Keras, Pytorch, Dask, Pandas, Numpy, Scipy, Pyspark, R Studio, Matplotlib and many more in an interactive manner', 'CommentAuthor': 'anonymousclass', 'Comment': 'very helpful, thank you'}]"
python,I've been happily using python almost exclusively for years commercially. FOMO not using other languages but scared to switch. (+bonus question: do you regret voluntarily switching away from python?),https://www.reddit.com/r/Python/comments/9r4yqw/ive_been_happily_using_python_almost_exclusively/,33,25,throw1984398213,1540424241.0,"&#x200B;

Hi All,

Short background: long time (3+ years) professionally (7+ years) personally python user. Not a webdev (mostly using python, pandas, numpy but also some flask, js, pyspark). **I'm mostly happy** but also sometimes get frustrated (refactoring dynamic code, other's people code, lack of static analysis in python tools, deploying, devops work). I've been looking at Scala but it's so hard because I can't use it at work and whenever I write personal project in Scala I quickly switch to python (can't bear frustration of its stdlib, sbt, inefficiencies, etc. even though Scala is nicer language in few ways. I could deal with those things if I'm getting paid for my scala work).

I'm getting bit scared as I'm approaching 30 in few years and don't really have anything else in my portfolio. I know demand for python and javascript is strong but it still feels unsafe. I'm also fearful that I'm missing out but don't really want to take leap of faith switching. I don't want to end up with JS focused role, neither C++ or pure Java. There doesn't seem to be *that* strong demand for Scala engineers (assuming decent pay; in Zurich and London) - it's hard for me to get interview for scala roles but I canafford to turn down python offers (and currently working as one).

My current idea is to perhaps go deeper in typescript (assuming I can get it for work project), do more in-depth dive into CPython, pypy, py/pandas speed optimization, etc. or come up with good open source project (e.g. be able to get talk at Tier 1 conference) or create profitable side-project.

&#x200B;

Have you experienced something similar? Please share","[{'Subreddit': 'python', 'Reddit_Title': ""I've been happily using python almost exclusively for years commercially. FOMO not using other languages but scared to switch. (+bonus question: do you regret voluntarily switching away from python?)"", 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'python', 'Reddit_Title': ""I've been happily using python almost exclusively for years commercially. FOMO not using other languages but scared to switch. (+bonus question: do you regret voluntarily switching away from python?)"", 'CommentAuthor': 'makeshift_mike', 'Comment': 'Learning another language is definitely helpful in more ways than one. If you spend a few hundred hours getting comfortable writing idiomatic code, then its philosophy gets into your head and your programmer‚Äôs tool box gets that much bigger.\n\nScala is such a large language that it‚Äôs essentially possible to write it in two styles: either ‚ÄúJava without semicolons‚Äù, or functional. Having done a bit of the former, I wouldn‚Äôt recommend it and if I needed a JVM language I‚Äôd look into Kotlin instead; the latter style (functional, full Scala enlightenment) is hard to pick up unless you‚Äôre on a team that embraces it or contributing to a good open source project. But if you‚Äôre looking for a functional language, for front end I‚Äôd suggest Elm, and for back end I‚Äôd suggest Elixir. They both have active and helpful communities.\n\nTypeScript is probably the safest bet commercially because JS is everywhere these days. Personally I steer clear of JS because it‚Äôs not a great language and node‚Äôs async style angers me (its creator now prefers Go, if that says anything).\n\nPersonally, most of my professional coding for the last two years has been in Go and I love it because the language is for the most part very well designed. I prefer static languages because of the reasons you mentioned (maybe it‚Äôs just because I got my start in C++, but I think even in Python if I don‚Äôt know what type 95% of my variables should be, I‚Äôm doing something wrong). And Go has implicit fulfillment of interfaces, which is kinda like duck typing with compile time checks.'}, {'Subreddit': 'python', 'Reddit_Title': ""I've been happily using python almost exclusively for years commercially. FOMO not using other languages but scared to switch. (+bonus question: do you regret voluntarily switching away from python?)"", 'CommentAuthor': 'mathisfakenews', 'Comment': 'Wait.....there are languages other than python?'}, {'Subreddit': 'python', 'Reddit_Title': ""I've been happily using python almost exclusively for years commercially. FOMO not using other languages but scared to switch. (+bonus question: do you regret voluntarily switching away from python?)"", 'CommentAuthor': 'devxpy', 'Comment': '> +bonus question: do you regret voluntarily switching away from python?\n\n100% regret going over to the node/js side of things. I have all these terms in my head, which are really flashy and all but hold no real value to me.'}, {'Subreddit': 'python', 'Reddit_Title': ""I've been happily using python almost exclusively for years commercially. FOMO not using other languages but scared to switch. (+bonus question: do you regret voluntarily switching away from python?)"", 'CommentAuthor': 'Taksin77', 'Comment': 'I did some Erlang professionally as I wanted to try something radically different. It was indeed a very refreshing experience and it reactivated my brain. '}, {'Subreddit': 'python', 'Reddit_Title': ""I've been happily using python almost exclusively for years commercially. FOMO not using other languages but scared to switch. (+bonus question: do you regret voluntarily switching away from python?)"", 'CommentAuthor': 'flutefreak7', 'Comment': 'TIL ""FOMO""'}, {'Subreddit': 'python', 'Reddit_Title': ""I've been happily using python almost exclusively for years commercially. FOMO not using other languages but scared to switch. (+bonus question: do you regret voluntarily switching away from python?)"", 'CommentAuthor': 'ScoutEU', 'Comment': ""Not entirely related to your question but I'm guessing you're 26/27... You're still very young so I wouldn't worry too much about it. You could change languages in 10 years and you would still be relatively young.""}, {'Subreddit': 'python', 'Reddit_Title': ""I've been happily using python almost exclusively for years commercially. FOMO not using other languages but scared to switch. (+bonus question: do you regret voluntarily switching away from python?)"", 'CommentAuthor': 'tomtomtomson', 'Comment': 'I have gone from PLSQL, to Java, to Python, to Go, to TypeScript and back (!), in 7 years. Languages are a toolkit; what fits a projects need best. Diversify as much as you can; you will become a useful engineer when design decisions are to be made.\n\nTypeScript is wonderful - I strongly encourage exposure to it. A lot of frameworks are looking at type safety as the new standard. The business case for JavaScript, actually, is becomming something far more considered as before; due to type safety and the maturity of web frameworks.. and, Node. JavaScript based architecture can still edge toward a tangled web of services but, less so. IMHO.\n\n  \n\n\n  \n'}, {'Subreddit': 'python', 'Reddit_Title': ""I've been happily using python almost exclusively for years commercially. FOMO not using other languages but scared to switch. (+bonus question: do you regret voluntarily switching away from python?)"", 'CommentAuthor': 'Pand9', 'Comment': 'There are things I could do in Scala with much much less boilerplate than Python with types and dataclasses. Sum types, collection manipulations, short lambda syntax won me over the most, as far as I remember. '}, {'Subreddit': 'python', 'Reddit_Title': ""I've been happily using python almost exclusively for years commercially. FOMO not using other languages but scared to switch. (+bonus question: do you regret voluntarily switching away from python?)"", 'CommentAuthor': '__xor__', 'Comment': ""You don't necessarily need another programming language in your portfolio. I've been doing pure python 7+ years now professionally, no other language besides some rare javascript, and when I'm experimenting on my own.\n\nEmployers are often looking for expertise in a single language, and python is everywhere, but portfolio wise you want to spread out with related skills and technologies like django, flask, mysql, mongo, elasticsearch, aws, hadoop, whatever. They will want a python developer with expertise in *specific technologies*, or a specific skillset. I've been doing security related work for a while now, worked on a research team, and python+security is what gets me jobs. One language + other skillsets and domain knowledge.\n\nIt's much easier to match on a specific language that they use heavily. You won't have trouble with python, especially if you open yourself up to web dev. Of course for web dev and fullstack positions you will often run into needing javascript as well, but that's obvious.\n\nIn short, I'd only switch if it's because you want to switch, not because it's to improve your portfolio. 3+ years isn't really so long that you couldn't take your career in a fully different direction.""}, {'Subreddit': 'python', 'Reddit_Title': ""I've been happily using python almost exclusively for years commercially. FOMO not using other languages but scared to switch. (+bonus question: do you regret voluntarily switching away from python?)"", 'CommentAuthor': 'TransferFunctions', 'Comment': 'RemindMe! 3 days'}]"
python,Looking to improve performance reading large JSON returned by requests,https://www.reddit.com/r/Python/comments/8dbrrs/looking_to_improve_performance_reading_large_json/,13,22,ProfessorKaos64,1524109138.0,"I assume I am going about this wrong even if it works overall:

       json_text = r.json()
        # get total length of dictionary keys for tracking
        for key, value in json_text.iteritems():
            item_index = 0
            if key == 'FileStatuses':
                total_items = len(json_text['FileStatuses']['FileStatus'][:])
                for listitems in json_text['FileStatuses']['FileStatus'][:]:
                    perm_set = []
                    item_count = len(json_text['FileStatuses']['FileStatus'][:])
                    octal_perms = json_text['FileStatuses']['FileStatus'][item_index]['permission']
                    replcount = json_text['FileStatuses']['FileStatus'][item_index]['replication']
                    fileuser = json_text['FileStatuses']['FileStatus'][item_index]['owner']
                    filegroup = json_text['FileStatuses']['FileStatus'][item_index]['group']
                    filename = json_text['FileStatuses']['FileStatus'][item_index]['pathSuffix']
                    filetype = json_text['FileStatuses']['FileStatus'][item_index]['type']
                    filelength = json_text['FileStatuses']['FileStatus'][item_index]['length']
                    # modtime is epoch (UNIX time) with the last 3 digits as milliseconds
                    modtime_epoch = json_text['FileStatuses']['FileStatus'][item_index]['modificationTime']
                    modtime = time.strftime('%Y-%m-%d %H:%M', time.gmtime(modtime_epoch/1000.0))
                    # update counter
                    item_index += 1
                    logging.debug(""Analyzing "" + str(item_index) + ' out of ' + str(total_items))

How can I improve this?
 
https://hadoop.apache.org/docs/r1.0.4/webhdfs.html#LISTSTATUS

Update:

Seems ujson is amazing, but I will need to monitor CPU/Mem usage.

https://github.com/mdeguzis/python/tree/python2/json-benchmark","[{'Subreddit': 'python', 'Reddit_Title': 'Looking to improve performance reading large JSON returned by requests', 'CommentAuthor': 'efmccurdy', 'Comment': ""I think you have a couple of redundant the instances of `[:]`.\n\n> len(json_text['FileStatuses']['FileStatus'][:])\n\nIt is making a copy in order to check the length and then discarding the copy.\n\nAlso, just cosmetic, but inside the `for` loop save some ink by doing:\n\n                for listitems in json_text['FileStatuses']['FileStatus']:\n                    perm_set = []\n                    item_count = len(listitems)\n                    this_file = listitems[item_index]\n                    octal_perms = this_file['permission']\n                    replcount = this_file['replication']\n                    # and all such other substitions""}, {'Subreddit': 'python', 'Reddit_Title': 'Looking to improve performance reading large JSON returned by requests', 'CommentAuthor': 'firefwing24', 'Comment': ""ujson is a good suggestion as many were recommending here.\n\nSome people might be suggesting the same thing as me, so ignore any that are repetitive:\n1) You shouldn't be iterating though the entire `json_text` if all you're looking for is `FileStatuses`\n\n2) You don't need to do `for k, v in dict.iteritems()` if you're not going to be using `k` or `v`\n\n3) Don't make copies if you're not planning on editing them apart from the original (usage of `[:]`)\n\n4) You're not using itemcount for anything (looking at your gist). EDIT: Sorry i was looking at your snippet, then looked at your gist. Then realized your gist doesn't have itemcount anymore. Ignore this one.\n\n\nFrom this simple snippet you provided, here's what I would do to already improve the script.\n\n```Python\n    json_text = r.json()\n    # get total length of dictionary keys for tracking\n    if 'FileStatuses' not in json_text:\n        # Raise exception or something\n        print('FileStatuses not found.')\n    else:\n        for listitems in json_text['FileStatuses']['FileStatus']:\n            octal_perms = listitems['permission']\n            replcount = listitems['replication']\n            ...\n            filelength = listitems['json_text']\n            \n             \n```\n\nYou also have a huge chunk of code in your gist where you keep going dictionary[key] = value when in reality you can just declare the whole dictionary once\n\nInstead of \n```\nfilename = filename.encode('ascii','ignore')\nlist_status_dict[hdfs_path] = {}  # Btw, you also have this at the beginning of your for loop\nlist_status_dict[hdfs_path]['filename'] = filename\nlist_status_dict[hdfs_path]['access_time'] = access_time\nlist_status_dict[hdfs_path]['filegroup'] = filegroup.encode('ascii','ignore')\nlist_status_dict[hdfs_path]['filelength'] = filelength\nlist_status_dict[hdfs_path]['modtime'] = modtime\nlist_status_dict[hdfs_path]['fileuser'] = fileuser.encode('ascii','ignore')\nlist_status_dict[hdfs_path]['prefix'] = prefix\nlist_status_dict[hdfs_path]['perms'] = perm_string\nlist_status_dict[hdfs_path]['replcount'] = replcount\nlist_status_dict[hdfs_path]['filetype'] = filetype\n```\n\nYou could just do \n\n```\nlist_status_dict[hdfs_path] = {\n    'filename': filename.encode('ascii', 'ignore'),\n    'access_time': access_time,\n    'filegroup': filegroup.encode('ascii', 'ignore'),\n    ...\n    'filetype': filetype\n```\n\nYou're also doing `return` on the wrong level in your gist (inside the for loop and not outside)\n\nLastly, Always profile your code to see what is taking the most time. Sure you can make good improvements if you can find that you're  using the wrong loops, but for any small changes, always profile before changing (otherwise you're gonna waste a lot of time for microseconds worth of improvements or worse performance)\n\nEdit: Markdown does work. Just not in the old Reddit. There's a newer Reddit they've been slowly releasing to users, and that works with markdown. The non-markdown is in the comments below.""}, {'Subreddit': 'python', 'Reddit_Title': 'Looking to improve performance reading large JSON returned by requests', 'CommentAuthor': 'federicocerchiari', 'Comment': 'I don\'t know what\'s before and after your snippet, but this is what I would do:\n\n    json_text = r.json()\n    # get total length of dictionary keys for tracking\n    items_list = json_text.get(\'FileStatuses\', {}).get(\'FileStatus\', [])\n    total_items = len(items_list)\n    for item_index, item in enumerate(items_list):\n        octal_perms = item[\'permission\']\n        replcount = item[\'replication\']\n        fileuser = item[\'owner\']\n        filegroup = item[\'group\']\n        filename = item[\'pathSuffix\']\n        filetype = item[\'type\']\n        filelength = item[\'length\']\n        # modtime is epoch (UNIX time) with the last 3 digits as milliseconds\n        modtime_epoch = item[\'modificationTime\']\n        modtime = time.strftime(\'%Y-%m-%d %H:%M\', time.gmtime(modtime_epoch/1000.0))\n\n        logging.debug(""Analyzing "" + str(item_index) + \' out of \' + str(total_items))\n\n\nin your code total_items and item_count are the same thing, and you make 2 copies of the same thing doing json_text[\'FileStatuses\'][\'FileStatus\'][:] twice (it makes sense if it\'s a generator, but it seems not) and I guess json_text[key lookup][key lookup][index lookup] is slower than plain iteration...\n\nedit: grammar'}, {'Subreddit': 'python', 'Reddit_Title': 'Looking to improve performance reading large JSON returned by requests', 'CommentAuthor': 'None', 'Comment': 'jq is faster.'}, {'Subreddit': 'python', 'Reddit_Title': 'Looking to improve performance reading large JSON returned by requests', 'CommentAuthor': 'ProfessorKaos64', 'Comment': 'Here is a similar function in full. Speed is key here as this is iterating over a JSON return from requests that contains upwards of ~1 million entries.\n\nhttps://gist.github.com/mtdeguzis/48e5635a9b3395adeb661c92b18ab265'}, {'Subreddit': 'python', 'Reddit_Title': 'Looking to improve performance reading large JSON returned by requests', 'CommentAuthor': 'ProfessorKaos64', 'Comment': "">len(json_text['FileStatuses']['FileStatus'][:])\n\nIs there a better way to get the total count here without making a copy? I can discard the tracking of X out of Y items, but in a huge ~1 million entries, I sort of wanted to know where it was in the process.""}, {'Subreddit': 'python', 'Reddit_Title': 'Looking to improve performance reading large JSON returned by requests', 'CommentAuthor': 'ProfessorKaos64', 'Comment': ""Could you past the code in a gist or in block? Shame reddit doesn't have markdown :/""}, {'Subreddit': 'python', 'Reddit_Title': 'Looking to improve performance reading large JSON returned by requests', 'CommentAuthor': 'ProfessorKaos64', 'Comment': 'Great tips. Thank you'}, {'Subreddit': 'python', 'Reddit_Title': 'Looking to improve performance reading large JSON returned by requests', 'CommentAuthor': 'ProfessorKaos64', 'Comment': ""Yea that was my thought is I'm not really doing plain iteration but a mix. I'll recheck, thanks""}, {'Subreddit': 'python', 'Reddit_Title': 'Looking to improve performance reading large JSON returned by requests', 'CommentAuthor': 'ProfessorKaos64', 'Comment': 'Here is a similar function in full. Speed is key here as this is iterating over a JSON return from requests that contains upwards of ~1 million entries.\n\nhttps://gist.github.com/mtdeguzis/48e5635a9b3395adeb661c92b18ab265'}, {'Subreddit': 'python', 'Reddit_Title': 'Looking to improve performance reading large JSON returned by requests', 'CommentAuthor': 'ProfessorKaos64', 'Comment': 'Than ujson? Just tried that it is extremely fast for large data sets.\n\nhttps://github.com/mdeguzis/python/tree/python2/json-benchmark'}]"
python,Life after Python - Learning a Compiled Language,https://www.reddit.com/r/Python/comments/2v3001/life_after_python_learning_a_compiled_language/,0,15,biobirdman,1423308113.0,"Hi all, 

Im trying to myself acquitted with a compiled language. I have been doing most of my programming in scripted languages python/perl/R/javascript( and its dialect). 

Now that I am confident with these languages, I will like to move on into learning a compiled language for its speed, efficiencies and employability ( i guess). Also, learning a compiled language will let me to know how the computer operate better.

Im thinking of either C++ or Java. Ill be more familiar with C++ since I did some CPython before  its seems like java gives a better payback. With java, I could write apps for andriod, play with apache's fancy tools ( hadoop, spark, etc)  

Yes this is something like a C++ vs Java post, but from the perspective of   a python programmer

Thanks for any feedbacks","[{'Subreddit': 'python', 'Reddit_Title': 'Life after Python - Learning a Compiled Language', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'python', 'Reddit_Title': 'Life after Python - Learning a Compiled Language', 'CommentAuthor': 'diesch', 'Comment': ""Java usually is compiled into bytecode that is then interpreted by the Java Virtual machine (JVM), so it's not that different from Python in that aspect.""}, {'Subreddit': 'python', 'Reddit_Title': 'Life after Python - Learning a Compiled Language', 'CommentAuthor': 'darknessproz', 'Comment': ""For broadening of perspectives, I recommend learning a few different languages.\n\n1. Learn a lisp. Clojure is a pretty good option here. Even if you do not use it on a regular basis, it will certainly affect (in a positive way) how you write your Python code.\n\n2. Learn C (and a bit of asm). It teaches you *a lot* about how your computer actually works. Plus it's immediately useful if you want to speed up your Python (or Ruby or any language with a C extensions API) code.""}, {'Subreddit': 'python', 'Reddit_Title': 'Life after Python - Learning a Compiled Language', 'CommentAuthor': 'peteraba', 'Comment': 'Or you could learn Go and practice concurrency while also having fun.'}, {'Subreddit': 'python', 'Reddit_Title': 'Life after Python - Learning a Compiled Language', 'CommentAuthor': 'None', 'Comment': 'I have been working as a Python developer for all my career(so is most of my team) . Recently we needed to write a web-server for our startup. We chose Go for it, and ended up shifting all our web services in Go.\nWe observed that it was easy for all Python developers to grasp (It is Python-like in its approach to programming, almost just one way to do stuff and minimal code).\nNim is another very cool language, which has no learning curve for its syntax if one comes from Python and I have been trying it out in another side project of our startup.'}, {'Subreddit': 'python', 'Reddit_Title': 'Life after Python - Learning a Compiled Language', 'CommentAuthor': 'hsaliak', 'Comment': 'Why not learn a language that expands your skills into a domain python is not good at -  Android or iOS development.\n\nJava is big and ""different enough\' across various domains. I\'d suggest learning it with a focus on android - makes it easy to think up fun projects to practice your skills with. Ultimately language is not as important as your ability to create robust products.\n\nAlternatively, learn C, understand the Python/C api and eventually things like cython. This will deepen your python skills. \n\nRealistically, if you cant think of good fun projects, you wont get the practice you need to build expertise. \n\n'}, {'Subreddit': 'python', 'Reddit_Title': 'Life after Python - Learning a Compiled Language', 'CommentAuthor': 'tchappui', 'Comment': 'If you come from python, cython (http://cython.org/) might be a good choice. \n\nKind regards\n\nThierry\n\nThierry'}, {'Subreddit': 'python', 'Reddit_Title': 'Life after Python - Learning a Compiled Language', 'CommentAuthor': 'Keda87', 'Comment': 'I came to python from Java :|'}, {'Subreddit': 'python', 'Reddit_Title': 'Life after Python - Learning a Compiled Language', 'CommentAuthor': 'Rapt0r-', 'Comment': 'If you want a job it depends what you want to do, loads of companies do Java with tomcat. I code Python daily and a friend if mine (Embedded developer) writes C++ daily.'}, {'Subreddit': 'python', 'Reddit_Title': 'Life after Python - Learning a Compiled Language', 'CommentAuthor': 'Honwhy', 'Comment': 'C++ is famous for its multiple features?\nand with the std, the compiled information is not so friendly to read'}, {'Subreddit': 'python', 'Reddit_Title': 'Life after Python - Learning a Compiled Language', 'CommentAuthor': 'None', 'Comment': 'Congrats on wanting to learn more. It will help you in the future! The mainstream ""non-scripting"" languages are C, C++, Java, and C#. Knowing any of them will keep you employable for years to come. Knowing all four only makes that more true.\n\nIf you are working in a Mac environment, then Objective-C is (IMO) a better language/environment than C/C++. Apple\'s new language, Swift, combines the syntactic features of many popular ""scripting"" languages with a compiler that generates native code. It comes with a bit of a learning curve, but so do all the others. Swift is still very new (introduced to the public less than a year ago), but already many Mac and iOS apps have been written in it.\n\nGood luck!\n\nEDIT: Added C# to the list of mainstream languages. Really is the best way to write Windows applications these days.'}]"
python,"Luigi is a Python module that helps you build complex pipelines of batch jobs. It handles dependency resolution, workflow management, visualization etc. It also comes with Hadoop support built in.",https://github.com/spotify/luigi,136,18,mtrn,1372184495.0,,"[{'Subreddit': 'python', 'Reddit_Title': 'Luigi is a Python module that helps you build complex pipelines of batch jobs. It handles dependency resolution, workflow management, visualization etc. It also comes with Hadoop support built in.', 'CommentAuthor': 'noedig', 'Comment': 'If you are interested in this, you may also be interested in some of the many scientific workflow management systems out there, such as [Pegasus](http://pegasus.isi.edu), [Triana](http://trianacode.org/), [Taverna](http://www.taverna.org.uk/), [Kepler](https://kepler-project.org), [Askalon](http://www.askalon.org/), [Makeflow](http://www.cse.nd.edu/~ccl/software/makeflow/), or [Swift](http://www.ci.uchicago.edu/swift/main/)'}, {'Subreddit': 'python', 'Reddit_Title': 'Luigi is a Python module that helps you build complex pipelines of batch jobs. It handles dependency resolution, workflow management, visualization etc. It also comes with Hadoop support built in.', 'CommentAuthor': 'Octopuscabbage', 'Comment': '>luigi\n\n>pipelines\n\nheh i get it.'}, {'Subreddit': 'python', 'Reddit_Title': 'Luigi is a Python module that helps you build complex pipelines of batch jobs. It handles dependency resolution, workflow management, visualization etc. It also comes with Hadoop support built in.', 'CommentAuthor': 'zidsal', 'Comment': 'this is amazing, this will really help with my final year project. Thanks a ton for sharing this'}, {'Subreddit': 'python', 'Reddit_Title': 'Luigi is a Python module that helps you build complex pipelines of batch jobs. It handles dependency resolution, workflow management, visualization etc. It also comes with Hadoop support built in.', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'python', 'Reddit_Title': 'Luigi is a Python module that helps you build complex pipelines of batch jobs. It handles dependency resolution, workflow management, visualization etc. It also comes with Hadoop support built in.', 'CommentAuthor': 'None', 'Comment': 'Shit, I wrote exactly this in C++'}, {'Subreddit': 'python', 'Reddit_Title': 'Luigi is a Python module that helps you build complex pipelines of batch jobs. It handles dependency resolution, workflow management, visualization etc. It also comes with Hadoop support built in.', 'CommentAuthor': 'mtrn', 'Comment': ""Here's a nice 30m presentation from pydata: http://vimeo.com/63435580""}, {'Subreddit': 'python', 'Reddit_Title': 'Luigi is a Python module that helps you build complex pipelines of batch jobs. It handles dependency resolution, workflow management, visualization etc. It also comes with Hadoop support built in.', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'python', 'Reddit_Title': 'Luigi is a Python module that helps you build complex pipelines of batch jobs. It handles dependency resolution, workflow management, visualization etc. It also comes with Hadoop support built in.', 'CommentAuthor': 'westurner', 'Comment': '[Celery Canvas: Designing Workflows](http://docs.celeryproject.org/en/latest/userguide/canvas.html)\n\n[AppEngine Pipeline](https://code.google.com/p/appengine-pipeline/)'}, {'Subreddit': 'python', 'Reddit_Title': 'Luigi is a Python module that helps you build complex pipelines of batch jobs. It handles dependency resolution, workflow management, visualization etc. It also comes with Hadoop support built in.', 'CommentAuthor': 'marky1991', 'Comment': 'Oooooh, I feel dumb now. Thank you for this.'}, {'Subreddit': 'python', 'Reddit_Title': 'Luigi is a Python module that helps you build complex pipelines of batch jobs. It handles dependency resolution, workflow management, visualization etc. It also comes with Hadoop support built in.', 'CommentAuthor': 'westurner', 'Comment': 'From https://github.com/spotify/luigi/blob/master/README.md#target :\n\n> Broadly speaking, the Target class corresponds to a file on a disk. Or a file on HDFS. Or some kind of a checkpoint, like an entry in a database. Actually, the only method that Targets have to implement is the exists method which returns True if and only if the Target exists.\n\nREADME.md mentions writing to Cassandra. It must be possible to write to a database or something like [fs](https://pypi.python.org/pypi/fs/) or [filelike](https://pypi.python.org/pypi/filelike/). It would be neat to integrate with [spark](https://github.com/mesos/spark) ([docs](http://spark-project.org/docs/latest/)) and/or [shark](https://github.com/amplab/shark).'}, {'Subreddit': 'python', 'Reddit_Title': 'Luigi is a Python module that helps you build complex pipelines of batch jobs. It handles dependency resolution, workflow management, visualization etc. It also comes with Hadoop support built in.', 'CommentAuthor': 'mtrn', 'Comment': 'Interesting. I think the market for such tools is quite big. Is you project open source? Do you have a link?'}]"
python,Ask: basic map/reduce distributed compute framework?,https://www.reddit.com/r/Python/comments/phag9/ask_basic_mapreduce_distributed_compute_framework/,18,42,dalke,1328757384.0,"I have a task which takes 8 days to run on a single thread on my Mac desktop. It's trivially parallelizable into 1,500 subtasks. I want to farm it out to a bunch of nodes so I can finish it off in a few hours. (This means using 100+ nodes, likely rented from Amazon. Assuming spot rates, that's $6.)

There's all sorts of map-reduce frameworks, but they seem cumbersome. What's a Python+Mac friendly one?

Hadoop support Python, but it's very Java oriented and it doesn't seem to support Mac .. or at least Cloudera's distribution only supports Linux.

Storm (for ""Distributed and fault-tolerant realtime computation"", not the Python ORM) looks neat, but the current code only support Python in the ""bolt""s, and not in the rest of the system. I can't tell if I should spend the few days helping finish off Python support. (I don't have any Java dev experience, otherwise it should be a couple of hours.)

The Disco project is more Python friendly, although I did need to compile+install Erlang. I haven't tried it yet.

Disco and Hadoop each use its own distributed file system, which is rather overkill when most of what I want to do is call a function with parameter and get the result.

What I envision is something over ZeroMQ where the main node spins off the 1,500 tasks. I tell each of the worker clients to connect to the main node to get the task info.  Sounds easy, but watchdog support would also be nice. Even cooler would be if it handles the concurrent.futures API from Python 3.2. And then there's the integration with starting 100+ machines.

No wonder map/reduce frameworks are still complicated beasts. Perhaps my search for a simple solution is still pipe dream.

What do you recommend for simple map/reduce across 100+ machines?","[{'Subreddit': 'python', 'Reddit_Title': 'Ask: basic map/reduce distributed compute framework?', 'CommentAuthor': 'brondsem', 'Comment': 'We at SourceForge developed a python map/reduce system called [Zarkov](http://sourceforge.net/p/zarkov/home/Home/) that uses mongo for data storage and zeromq for communication.  It\'s not simple, well-documented or extremely robust.  But on the other hand we use it in production so it\'s pretty stable, there are some blog post ""docs"", and it meets some of the technical criteria you mention.'}, {'Subreddit': 'python', 'Reddit_Title': 'Ask: basic map/reduce distributed compute framework?', 'CommentAuthor': 'rkern', 'Comment': ""Can you be more specific about your jobs? It sounds like you just want a job queue (call a function with many different parameters and get their results back), not MapReduce specifically. MapReduce implementations can be coerced into doing such things, but it's not what they're for, so that's why they have such an impedance mismatch to your problem.\n\n[PiCloud](http://www.picloud.com) is a really nice way to just throw out a bunch of Python tasks without much preparation or overhead. You do pay a bit of a premium over EC2, but for one-off calculations, you probably make that up in developer-time that you don't have to spend setting up an image.\n\nDisclosure: I work for Enthought, and we partner with PiCloud to provide many of the binaries for the packages they provide in their Python environment.""}, {'Subreddit': 'python', 'Reddit_Title': 'Ask: basic map/reduce distributed compute framework?', 'CommentAuthor': 'semarj', 'Comment': ""I am confused by your 'support Mac' requirement.\n\nWhy do you need this if it is going to run on AWS?""}, {'Subreddit': 'python', 'Reddit_Title': 'Ask: basic map/reduce distributed compute framework?', 'CommentAuthor': 'onjin', 'Comment': 'for simple map reduce:\n\n * http://code.google.com/p/octopy/\n\nor maybe just distributed queue with python support:\n\n * http://gearman.org/'}, {'Subreddit': 'python', 'Reddit_Title': 'Ask: basic map/reduce distributed compute framework?', 'CommentAuthor': 'floydophone', 'Comment': 'You can do this with the multiprocessing module:\n\nhttp://docs.python.org/library/multiprocessing.html#managers\n\nAlso, you can do this with RPyC:\n\nhttp://rpyc.sourceforge.net/\n\nWhat I would do is run RPyC classic mode on all of your EC2 nodes (using Fabric + Boto to get the software on there).'}, {'Subreddit': 'python', 'Reddit_Title': 'Ask: basic map/reduce distributed compute framework?', 'CommentAuthor': 'micro_cam', 'Comment': ""I was faced with a similar conundrum and after much frustration with hadoop, qsub etc we ended up writing what we needed:\n\nhttp://code.google.com/p/golem/\n\nThe core is in go with the command line interface in python with RESTfull job submission and monitoring and node communication over web sockets and it basically just calls tasks on the command line and collects the standard out. Its aimed at quickly getting a researcher's analysis (in python,c,matlab,R,perl, or whatever) running on a 1000 core cluster. \n\nIt doesn't do most of what you asked for but it is intentionally simple code and simple to use. We've found that you can do most things with it by jumping through a few hoops with things like bash where as adapting things for hadoop requires significant effort and esoteric debugging.\n\nOr if you want really simple setup passwordless ssh and use xargs and bash.\n""}, {'Subreddit': 'python', 'Reddit_Title': 'Ask: basic map/reduce distributed compute framework?', 'CommentAuthor': 'nil088', 'Comment': 'https://github.com/Yelp/mrjob'}, {'Subreddit': 'python', 'Reddit_Title': 'Ask: basic map/reduce distributed compute framework?', 'CommentAuthor': 'wcc445', 'Comment': ""Interested in this as well. Hadoop can be a pain, but it's not too bad. You'd kinda want a dedicated Hadoop cluster, though, not set it up from scratch each time.""}, {'Subreddit': 'python', 'Reddit_Title': 'Ask: basic map/reduce distributed compute framework?', 'CommentAuthor': 'None', 'Comment': 'I\'ve been using the dtm module of the package ""deap"" and had success.  it works on MPI and seems to be pretty good. \n\nhttp://pypi.python.org/pypi/deap\n\nImplemented like this:\n\nresults = dtm.map(myfunc, iterable1, iterable2...,  kwargs=blah)\n\n\nI have noticed that subprocess.Popen doesn\'t work sometimes so make sure to catch those errors and try to open a process again.'}, {'Subreddit': 'python', 'Reddit_Title': 'Ask: basic map/reduce distributed compute framework?', 'CommentAuthor': 'brandynwhite', 'Comment': ""Author of [Hadoopy](http://hadoopy.com) here, it works on OSX and I've used it on 1K node/2PB clusters.  Contact me if you need help.""}, {'Subreddit': 'python', 'Reddit_Title': 'Ask: basic map/reduce distributed compute framework?', 'CommentAuthor': 'pinpinbo', 'Comment': ""Take a look at [Gearman](http://gearman.org/). When I had the exact same question, that's how I solved it.\n\nPython API: http://pypi.python.org/pypi/gearman/""}]"
python,[Official announcement] List of all the submissions that got incorrectly autobanned by the spamfilter,https://www.reddit.com/r/Python/comments/brcpk/official_announcement_list_of_all_the_submissions/,121,22,BioGeek,1271346943.0,"Dear Python community,

The reddit admins recently made some changes which allowed the subreddit mods to have a better view on which submissions got autobanned by the spam filter. To our horror, we discovered that the spam filter for the Python subreddit had a terrible false-positive rate. Out of the about 170 autobanned submissions only ten were genuine spam posts!

The spam filter is [trained on a per-reddit basis](http://blog.reddit.com/2008/06/per-reddit-automated-spam-filters.html) each time a moderator bans or un-bans a link or comment. To kick some sense back into our spam-filter I unbanned all 160 posts that got incorrectly trapped. They are listed below for your reference. I give my sincere apologies to all the submitters and authors who were affected. 

I feel especially sorry for all submitters who made a *self*.Python or AskPython post: your question being greeted by complete silence is not the message we as a community want to send out. The reddit admins are [rolling out a system of deputy moderation](http://blog.reddit.com/2010/04/youve-been-drafted.html) which should hopefully prevent this from happening again in the future.

Title|Submitted by|Submitted when
---|---|---
[Serving Git: Wrapping git-shell with Twisted Conch](http://www.reddit.com/tb/bpkp0)|[hesiod84](http://www.reddit.com/user/hesiod84)|3 days ago
[Man in Blacklists](http://www.reddit.com/tb/bnkwv)|[jeanlucpikachu](http://www.reddit.com/user/jeanlucpikachu)|7 days ago
[Notes on using SQLAlchemy's database sharding](http://www.reddit.com/tb/bn037)|[george_v_reilly](http://www.reddit.com/user/george_v_reilly)|9 days ago
[nginx wsgi module (ngx\_http\_wsgi\_module) back to life (after two years)](http://www.reddit.com/tb/bkesd)|[number5](http://www.reddit.com/user/number5)|15 days ago
[Converting PDF to PNG with PyPoppler](http://www.reddit.com/tb/bj0py)|[regomodo](http://www.reddit.com/user/regomodo)|18 days ago
[Application bundling](http://www.reddit.com/r/Python/comments/bijhd/application_bundling/)|[pippy](http://www.reddit.com/user/pippy)|19 days ago
[Hands-on Python Tutorial](http://www.reddit.com/tb/bibez)|[marcosdecarvalho](http://www.reddit.com/user/marcosdecarvalho)|20 days ago
[Python Bibliotheca](http://www.reddit.com/tb/bib61)|[marcosdecarvalh](http://www.reddit.com/user/marcosdecarvalh)|20 days ago
[Building a Twitter Filter With CherryPy, Redis, and tweetstream](http://www.reddit.com/tb/bfc4y)|[placidified](http://www.reddit.com/user/placidified)|27 days ago
[Multiple constructors in a Python class](http://www.reddit.com/tb/bexy8)|[gthank](http://www.reddit.com/user/gthank)|27 days ago
[PyCharm gets a (pair of) REPL(s)](http://www.reddit.com/tb/belnt)|[gthank](http://www.reddit.com/user/gthank)|28 days ago
[Generate Redis Test Data With Python‚Äôs Help](http://www.reddit.com/tb/be132)|[gthank](http://www.reddit.com/user/gthank)|29 days ago
[PyCon 2010:The Zen of CherryPy](http://www.reddit.com/tb/bcid3)|[IbeeX](http://www.reddit.com/user/IbeeX)|1 month ago
[An Introduction to Google Calendars](http://www.reddit.com/tb/b750d)|[IbeeX](http://www.reddit.com/user/IbeeX)|1 month ago
[PyCon 2010:Advanced String Formatting](http://www.reddit.com/tb/b5upz)|[IbeeX](http://www.reddit.com/user/IbeeX)|1 month ago
[Writing Custom Nagios Plugins with Python](http://www.reddit.com/tb/b31f9)|[IbeeX](http://www.reddit.com/user/IbeeX)|1 month ago
[LoggingWebMonitor, a central logging server and monitor](http://www.reddit.com/tb/axaiq)|[IbeeX](http://www.reddit.com/user/IbeeX)|1 month ago
[Random Map Generation with Pyglet](http://www.reddit.com/r/Python/comments/bcqe7/random_map_generation_with_pyglet/)|[phmongeau](http://www.reddit.com/user/phmongeau)|1 month ago
[AVC: Simplifying your GUI Code](http://www.reddit.com/tb/bdams)|[IbeeX](http://www.reddit.com/user/IbeeX)|1 month ago
[PyMOTW: Parsing XML Documents with ElementTree](http://www.reddit.com/tb/bdapf)|[IbeeX](http://www.reddit.com/user/IbeeX)|1 month ago
[Get achievements on your test suite!](http://www.reddit.com/tb/bdo8l)|[fernandotakai](http://www.reddit.com/user/fernandotakai)|1 month ago
[Automated deployments with Fabric - tips and tricks](http://www.reddit.com/tb/bduz8)|[gthank](http://www.reddit.com/user/gthank)|1 month ago
[Py4Science Forum Report](http://www.reddit.com/tb/bc87e)|[tnv](http://www.reddit.com/user/tnv)|1 month ago
[A self replicating program in python](http://www.reddit.com/r/Python/comments/bbye8/a_self_replicating_program_in_python/)|[lonjerpc](http://www.reddit.com/user/lonjerpc)|1 month ago
[Dear PyReddit, I made a Paste-based WSGI micro-framework just for fun](http://www.reddit.com/r/Python/comments/b9oci/dear_pyreddit_i_made_a_pastebased_wsgi/)|[zeemonkee](http://www.reddit.com/user/zeemonkee)|1 month ago
[Is johnny-cache for you?](http://www.reddit.com/tb/b871y)|[jeanlucpikachu](http://www.reddit.com/user/jeanlucpikachu)|1 month ago
[Johnny Cache - a caching framework for django applications](http://www.reddit.com/tb/b7ndr)|[jeanlucpikachu](http://www.reddit.com/user/jeanlucpikachu)|1 month ago
[O'Reilly School of Technology offers new course ""Python 1: Beginning Python""](http://www.reddit.com/tb/b56ug)|[Chomp](http://www.reddit.com/user/Chomp)|1 month ago
[PyCon Videos](http://www.reddit.com/tb/b4pn9)|[lastkarrde](http://www.reddit.com/user/lastkarrde)|1 month ago
[‚öõ Debug Tracing Cassandra With Lazyboy](http://www.reddit.com/tb/b46f4)|[number5](http://www.reddit.com/user/number5)|1 month ago
[Subclassing Django's TestCase](http://www.reddit.com/tb/b2e31)|[jeanlucpikachu](http://www.reddit.com/user/jeanlucpikachu)|1 month ago
[PyMOTW: cgitb - Detailed traceback reports](http://www.reddit.com/tb/awbz2)|[IbeeX](http://www.reddit.com/user/IbeeX)|2 months ago
[What ""Batteries Included"" Means](http://www.reddit.com/tb/at8gv)|[IbeeX](http://www.reddit.com/user/IbeeX)|2 months ago
[HTTP Request Profiler with RRD Storage and Graphing](http://www.reddit.com/tb/aemzz)|[IbeeX](http://www.reddit.com/user/IbeeX)|2 months ago
[Python print performance](http://www.reddit.com/tb/b1mwl)|[gumuz](http://www.reddit.com/user/gumuz)|2 months ago
[Require One Package OR Another](http://www.reddit.com/tb/b0o1t)|[yourmomis1337](http://www.reddit.com/user/yourmomis1337)|2 months ago
[Deploying a Pylons App to Production, Step-by-Step](http://www.reddit.com/tb/b0h78)|[Chr0me](http://www.reddit.com/user/Chr0me)|2 months ago
[Ignore Keyboard Interrupts in Python](http://www.reddit.com/tb/b087o)|[yourmomis1337](http://www.reddit.com/user/yourmomis1337)|2 months ago
[Multiple Concurrent Connections with py-amqplib and Eventlet](http://www.reddit.com/tb/azro7)|[agentdero](http://www.reddit.com/user/agentdero)|2 months ago
[Parallel Machine Learning for Hadoop/Mapreduce ‚Äì A Python Example](http://www.reddit.com/tb/azmwa)|[atveit](http://www.reddit.com/user/atveit)|2 months ago
[Pylons 1.0beta Released](http://www.reddit.com/tb/az09j)|[Chr0me](http://www.reddit.com/user/Chr0me)|2 months ago
[A GIL Adventure (with a happy ending)](http://www.reddit.com/tb/ay9i4)|[rfkelly](http://www.reddit.com/user/rfkelly)|2 months ago
[Hundred-fold speedups over conventional implementations using PyCUDA](http://www.reddit.com/tb/ay4lj)|[rescind](http://www.reddit.com/user/rescind)|2 months ago
[PyCharm - New Python IDE from Jetbrains](http://www.reddit.com/tb/axru3)|[titusz](http://www.reddit.com/user/titusz)|2 months ago
[Recursive lists in Python](http://www.reddit.com/tb/axh5r)|[RaisingMoneyForFilm](http://www.reddit.com/user/RaisingMoneyForFilm)|2 months ago
[First useful thing I've managed to make](http://www.reddit.com/r/Python/comments/awv3b/first_useful_thing_ive_managed_to_make/)|[aceofears](http://www.reddit.com/user/aceofears)|2 months ago
[Wingware Python IDE version 3.2.4 released](http://www.reddit.com/tb/awq7x)|[wingware](http://www.reddit.com/user/wingware)|2 months ago
[A few useful bytearray tricks](http://www.reddit.com/tb/avkes)|[hynek](http://www.reddit.com/user/hynek)|2 months ago
[PyCon 2010: Alex Gaynor on Real Time Python Web Development](http://www.reddit.com/tb/auq18)|[beshrkayali](http://www.reddit.com/user/beshrkayali)|2 months ago
[Asynchronous Shell Commands with Tornado](http://www.reddit.com/tb/athqh)|[greut](http://www.reddit.com/user/greut)|2 months ago
[Install Plone4 on OSX Leopard and Snow Leopard (from scratch)](http://www.reddit.com/tb/assva)|[amleczko](http://www.reddit.com/user/amleczko)|2 months ago
[Tutorial - Modules and Functions ""BAM!""](http://www.reddit.com/tb/arh1d)|[scubanator87](http://www.reddit.com/user/scubanator87)|2 months ago
[Editra - Choco Style Sheet](http://www.reddit.com/tb/aqip2)|[cryzed_](http://www.reddit.com/user/cryzed_)|2 months ago
[Python-LCDproc: Python OOP wrapper library for LCDproc Telnet API](http://www.reddit.com/tb/arf2c)|[jingleman](http://www.reddit.com/user/jingleman)|2 months ago
[Exploring real-time Haiti USGS Earthquake data with MODIS Aqua+Terra satellite imagery](http://www.reddit.com/tb/aqg4g)|[perone](http://www.reddit.com/user/perone)|2 months ago
[New Python static analyzer from Google](http://www.reddit.com/tb/apsya)|[realstevejobs](http://www.reddit.com/user/realstevejobs)|3 months ago
[New Style PyQT Signals and Slots](http://www.reddit.com/tb/apq24)|[stoolpigeon](http://www.reddit.com/user/stoolpigeon)|3 months ago
[Example PYTHONSTARTUP file, what is yours?](http://www.reddit.com/tb/apa7u)|[sridhr](http://www.reddit.com/user/sridhr)|3 months ago
[AskPython: Weird performance difference in string matching vs object matching](http://www.reddit.com/tb/aob1c)|[relix](http://www.reddit.com/user/relix)|3 months ago
[Static analysis for Ruby and Python](http://www.reddit.com/tb/ao4yl)|[mebrahim](http://www.reddit.com/user/mebrahim)|3 months ago
[Python: Where the Hg transition stands](http://www.reddit.com/tb/anymm)|[KangOl](http://www.reddit.com/user/KangOl)|3 months ago


continues [below](http://www.reddit.com/r/Python/comments/brcpk/official_announcement_list_of_all_the_submissions/c0o6szx)","[{'Subreddit': 'python', 'Reddit_Title': '[Official announcement] List of all the submissions that got incorrectly autobanned by the spamfilter', 'CommentAuthor': 'raldi', 'Comment': 'This is exactly the sort of thing that convinced us to prioritize an overhaul of the anti-spam system.'}, {'Subreddit': 'python', 'Reddit_Title': '[Official announcement] List of all the submissions that got incorrectly autobanned by the spamfilter', 'CommentAuthor': 'BioGeek', 'Comment': 'Title|Submitted by|Submitted when\n---|---|---\n[Book Review: Dive Into Python 3](http://www.reddit.com/tb/anpit)|[gst](http://www.reddit.com/user/gst)|3 months ago\n[Python oddity: why does tarfile.extractall ignore errors by default?](http://www.reddit.com/tb/ami60)|[sridhr](http://www.reddit.com/user/sridhr)|3 months ago\n[The Framework Design Balancing-act - Dependency injection and -you-](http://www.reddit.com/tb/an21e)|[Crast](http://www.reddit.com/user/Crast)|3 months ago\n[Fixing packaging terminology confusion: PyPI will be known as ""Python Project Index""](http://www.reddit.com/tb/amvlm)|[sridh](http://www.reddit.com/user/sridh)|3 months ago\n[Pyglet 1.1.4 released](http://www.reddit.com/tb/amoi6)|[caffeinedependent](http://www.reddit.com/user/caffeinedependent)|3 months ago\n[8 Reasons Why You Should Try Django](http://www.reddit.com/tb/amg1h)|[lephron](http://www.reddit.com/user/lephron)|3 months ago\n[Django 1.2 alpha 1 released: release notes](http://www.reddit.com/tb/am62a)|[imbaczek](http://www.reddit.com/user/imbaczek)|3 months ago\n[The ""promise"" of faster Python](http://www.reddit.com/tb/am3nz)|[gst](http://www.reddit.com/user/gst)|3 months ago\n[Server-side image transforms in Python](http://www.reddit.com/tb/am2qn)|[agentdero](http://www.reddit.com/user/agentdero)|3 months ago\n[Python Performance Tips](http://www.reddit.com/tb/alwwx)|[seabre](http://www.reddit.com/user/seabre)|3 months ago\n[Twisted docs generated using Sphinx](http://www.reddit.com/tb/alkzp)|[number5](http://www.reddit.com/user/number5)|3 months ago\n[Dangerous behavior of list(<generator>)](http://www.reddit.com/tb/akjlz)|[sridhr](http://www.reddit.com/user/sridhr)|3 months ago\n[VIM as a Python IDE](http://www.reddit.com/tb/akiiz)|[crankyadmin](http://www.reddit.com/user/crankyadmin)|3 months ago\n[A review of (some) Python editors](http://www.reddit.com/tb/akbav)|[sridhr](http://www.reddit.com/user/sridhr)|3 months ago\n[Web Sockets in Tornado](http://www.reddit.com/tb/ak9ho)|[sridhr](http://www.reddit.com/user/sridhr)|3 months ago\n[Decorators specific to a class](http://www.reddit.com/tb/ak1y9)|[KangOl](http://www.reddit.com/user/KangOl)|3 months ago\n[Welcome to The Hitchhiker‚Äôs Guide to Packaging](http://www.reddit.com/tb/ah7rz)|[krs](http://www.reddit.com/user/krs)|3 months ago\n[Using doctest.testmod() properly](http://www.reddit.com/tb/agzvn)|[amade](http://www.reddit.com/user/amade)|3 months ago\n[Stackless Python gets documentation](http://www.reddit.com/tb/ag6ha)|[euccastro](http://www.reddit.com/user/euccastro)|3 months ago\n[withrestart: Common Lisp\'s condition system done the Python way](http://www.reddit.com/tb/aflnx)|[rfkelly](http://www.reddit.com/user/rfkelly)|3 months ago\n[stream.py -- pipes for Python](http://www.reddit.com/tb/aeyd4)|[amade](http://www.reddit.com/user/amade)|4 months ago\n[Rolling My Own WYSIWYM Editor](http://www.reddit.com/tb/aeai2)|[pkkid](http://www.reddit.com/user/pkkid)|4 months ago\n[Design a GUI for your python project using wxFormBuilder 3.0 beta](http://www.reddit.com/tb/adroe)|[masterfap](http://www.reddit.com/user/masterfap)|4 months ago\n[How To Use Linux epoll with Python](http://www.reddit.com/tb/ade44)|[afoo42](http://www.reddit.com/user/afoo42)|4 months ago\n[Formatting and processing text in TAL templates](http://www.reddit.com/tb/abo4p)|[chompomonim](http://www.reddit.com/user/chompomonim)|4 months ago\n[Automating Excel Pivot Tables with Python](http://www.reddit.com/tb/ab7w6)|[dlwtidder](http://www.reddit.com/user/dlwtidder)|4 months ago\n[Passing Python file objects across a SWIG interface](http://www.reddit.com/tb/ab2ej)|[g4n0n](http://www.reddit.com/user/g4n0n)|4 months ago\n[Run-time compiled C in python scripts](http://www.reddit.com/tb/aaxu8)|[rmtew](http://www.reddit.com/user/rmtew)|4 months ago\n[Python and Pygame - A Primer](http://www.reddit.com/tb/aadmf)|[cannadbt](http://www.reddit.com/user/cannadbt)|4 months ago\n[pymex: Python embedded in MATLAB](http://www.reddit.com/tb/aa0l3)|[Lexarius](http://www.reddit.com/user/Lexarius)|4 months ago\n[Should you go with Google App Engine?](http://www.reddit.com/tb/a9jih)|[vilerman](http://www.reddit.com/user/vilerman)|4 months ago\n[Guide To Writing Games](http://www.reddit.com/tb/a78pr)|[IbeeX](http://www.reddit.com/user/IbeeX)|4 months ago\n[A history of Python packaging](http://www.reddit.com/tb/a2x93)|[gst](http://www.reddit.com/user/gst)|5 months ago\n[An Introduction to Python Objects](http://www.reddit.com/tb/a1re8)|[estherschindler](http://www.reddit.com/user/estherschindler)|5 months ago\n[PyMOTW: sys, Part 4: Exception Handling](http://www.reddit.com/tb/9zz02)|[IbeeX](http://www.reddit.com/user/IbeeX)|5 months ago\n[Python quirks ](http://www.reddit.com/tb/9z3d4)|[discostoo](http://www.reddit.com/user/discostoo)|5 months ago\n[Luban is a python-based, cross-platform user interface builder](http://www.reddit.com/tb/9y29g)|[deleted]|5 months ago\n[A visual state activity of python frameworks via IRC](http://www.reddit.com/tb/9y106)|[apardue](http://www.reddit.com/user/apardue)|5 months ago\n[Reworking the GIL](http://www.reddit.com/tb/9xpv1)|[gst](http://www.reddit.com/user/gst)|5 months ago\n[Writing apps in 24 hours #1: \'Die Schere\', a video editor (with video demo)](http://www.reddit.com/tb/9xdsj)|[ralsina](http://www.reddit.com/user/ralsina)|5 months ago\n[Twisted Web in 60 seconds: logging errors](http://www.reddit.com/tb/9xc55)|[gst](http://www.reddit.com/user/gst)|5 months ago\n[Tarek: Distribute support added in zc.buildout trunk](http://www.reddit.com/tb/9wyy4)|[deleted]|5 months ago\n[PyMOTW: sys, Part 6: Low-level Thread Support](http://www.reddit.com/tb/a4mcr)|[IbeeX](http://www.reddit.com/user/IbeeX)|5 months ago\n[Py in the Sci - what SciPy is all about...](http://www.reddit.com/tb/9wyuu)|[gst](http://www.reddit.com/user/gst)|5 months ago\n[Building a Flash Chat Socket Server with Stackless Python](http://www.reddit.com/tb/9wxpz)|[gst](http://www.reddit.com/user/gst)|5 months ago\n[Aria2 xml-rpc command line control in python. Let you add new http/ftp/torrent/metalink downloads to a running aria2c. Single file script](http://www.reddit.com/tb/9wvq9)|[ccdos](http://www.reddit.com/user/ccdos)|5 months ago\n[python-on-a-chip](http://www.reddit.com/tb/9wtxd)|[finite](http://www.reddit.com/user/finite)|5 months ago\n[PythonTurtle delivers! A ""learn to program"" environment](http://www.reddit.com/tb/9wq6j)|[ubershmekel](http://www.reddit.com/user/ubershmekel)|5 months ago\n[Why I like Redis](http://www.reddit.com/tb/9wmre)|[placidified](http://www.reddit.com/user/placidified)|5 months ago\n[pystates: A simple but powerful state machine framework](http://www.reddit.com/tb/9wk2e)|[placidified](http://www.reddit.com/user/placidified)|5 months ago\n[PyPM: apt-get like package manager for Python from ActiveState](http://www.reddit.com/tb/9wi2h)|[deleted]|5 months ago\n[http://www.reddit.com/tb/9wdmm](http://www.reddit.com/tb/9wdmm)|[gumuz](http://www.reddit.com/user/gumuz)|5 months ago\n[Guido van Rossum proposes a Moratorium on language changes](http://www.reddit.com/tb/9wc2h)|[lorg](http://www.reddit.com/user/lorg)|5 months ago\n[Python messaging with ActiveMQ and RabbitMQ](http://www.reddit.com/tb/9w3po)|[VitaminQQQ](http://www.reddit.com/user/VitaminQQQ)|5 months ago\n[Unladen Swallow Q3 release](http://www.reddit.com/tb/9w3ep)|[gutworth](http://www.reddit.com/user/gutworth)|5 months ago\n[blist: a list-like type with better asymptotic performance](http://www.reddit.com/tb/9w2oz)|[placidified](http://www.reddit.com/user/placidified)|5 months ago\n[Beautiful Coroutines: Cooperative Concurrency in Python using Diesel](http://www.reddit.com/tb/9w1f8)|[placidified](http://www.reddit.com/user/placidified)|5 months ago\n[I wrote a python script to generate memes via memegenerator.net](http://www.reddit.com/tb/9w05h)|[kcbanner](http://www.reddit.com/user/kcbanner)|5 months ago\n[Integration of Python and PyQt into 3d Studio Max](http://www.reddit.com/tb/9vyfv)|[groupthinkjunkie](http://www.reddit.com/user/groupthinkjunkie)|5 months ago\n[tender-multipass, Python utilities for easily integrating Tender\'s MultiPass authentication](http://www.reddit.com/tb/9vx5d)|[siliconflorist](http://www.reddit.com/user/siliconflorist)|5 months ago\n[The September 2009 issue of Python Magazine](http://www.reddit.com/tb/9vsws)|[gst](http://www.reddit.com/user/gst)|5 months ago\n[Import Time Side Effects and You](http://www.reddit.com/tb/9vhjj)|[gst](http://www.reddit.com/user/gst)|5 months ago\n[Tutorial and Tips on using pythons datetime module](http://www.reddit.com/tb/9vfcj)|[vkrams](http://www.reddit.com/user/vkrams)|5 months ago\n[PyMOTW: sys Part 2: Runtime Environment](http://www.reddit.com/tb/9vf50)|[gst](http://www.reddit.com/user/gst)|5 months ago\n[Pyevolve benchmark on different Python flavors](http://www.reddit.com/tb/9vf3b)|[gst](http://www.reddit.com/user/gst)|5 months ago\n[Pyro is short for PYthon Remote Objects. It is an advanced and powerful Distributed Object Technology system written entirely in Python](http://www.reddit.com/tb/9v7u8)|[easytiger](http://www.reddit.com/user/easytiger)|5 months ago\n[Memory Size of Python Objects](http://www.reddit.com/tb/9ix9x)|[plisk](http://www.reddit.com/user/plisk)|7 months ago\n[Token Testing Talk Slides: Djangocon 2009](http://www.reddit.com/tb/9ikb1)|[megaman821](http://www.reddit.com/user/megaman821)|7 months ago\n[I wrote an app to better integrate fckeditor into django, what do you think?](http://www.reddit.com/tb/95tky)|[megaman821](http://www.reddit.com/user/megaman821)|8 months ago\n[Learn about decorators in python](http://www.reddit.com/tb/943vh)|[vk_rams](http://www.reddit.com/user/vk_rams)|8 months ago\n[Testing events with Twisted\'s Trial](http://www.reddit.com/tb/93xos)|[mheitzenroder](http://www.reddit.com/user/mheitzenroder)|8 months ago\n[Buildout for Zine blog, along with a Twitter widget](http://www.reddit.com/tb/92npy)|[ccomb](http://www.reddit.com/user/ccomb)|8 months ago\n'}, {'Subreddit': 'python', 'Reddit_Title': '[Official announcement] List of all the submissions that got incorrectly autobanned by the spamfilter', 'CommentAuthor': 'nevare', 'Comment': 'Thanks for your hard work BioGeek.'}, {'Subreddit': 'python', 'Reddit_Title': '[Official announcement] List of all the submissions that got incorrectly autobanned by the spamfilter', 'CommentAuthor': 'placidified', 'Comment': 'wow four of my links was autobanned :( '}, {'Subreddit': 'python', 'Reddit_Title': '[Official announcement] List of all the submissions that got incorrectly autobanned by the spamfilter', 'CommentAuthor': 'tarekziade', 'Comment': 'Now I understand what happened to some of my news ! ;)\n'}, {'Subreddit': 'python', 'Reddit_Title': '[Official announcement] List of all the submissions that got incorrectly autobanned by the spamfilter', 'CommentAuthor': 'akoumjian', 'Comment': 'That is a lot of false positives. Hopefully this corrected data will help the filter. Thank you for checking into this, and thank the Admins for making these changes so the Mods can do their good work.'}, {'Subreddit': 'python', 'Reddit_Title': '[Official announcement] List of all the submissions that got incorrectly autobanned by the spamfilter', 'CommentAuthor': 'None', 'Comment': 'wow. i wondered why i never saw anything frontpage from this subreddit'}, {'Subreddit': 'python', 'Reddit_Title': '[Official announcement] List of all the submissions that got incorrectly autobanned by the spamfilter', 'CommentAuthor': 'biiaru', 'Comment': 'Really wish the mods of every other subreddit would do exactly this.'}, {'Subreddit': 'python', 'Reddit_Title': '[Official announcement] List of all the submissions that got incorrectly autobanned by the spamfilter', 'CommentAuthor': 'realstevejobs', 'Comment': 'Thank you.'}, {'Subreddit': 'python', 'Reddit_Title': '[Official announcement] List of all the submissions that got incorrectly autobanned by the spamfilter', 'CommentAuthor': 'None', 'Comment': 'Aha, I was wondering why my post dropped off the front page so quickly. '}, {'Subreddit': 'python', 'Reddit_Title': '[Official announcement] List of all the submissions that got incorrectly autobanned by the spamfilter', 'CommentAuthor': 'zeroelixis', 'Comment': ""Cool, now I've got some reading to do!""}]"
Java,What are you using to secure REST APIs?,https://www.reddit.com/r/java/comments/74ob5c/what_are_you_using_to_secure_rest_apis/,59,36,greyf0x55,1507303388.0,"I've recently come across several articles claiming JWT is not secure, its not a good idea to use it, and basically don't use it. I've used JWT with Spring Security in the past.

The question comes to if JWT is so bad what do we use instead with Spring / Spring Security to secure a RESTful API? Assume the client could be anything, a browser, and mobile application, another server / service, etc.","[{'Subreddit': 'Java', 'Reddit_Title': 'What are you using to secure REST APIs?', 'CommentAuthor': '_dban_', 'Comment': ""You really shouldn't be storing session state in a JWT. Session state is also not something that Spring Security is concerned with.\n\nJWT is perfectly fine when you are storing *authorization* information (such as user roles), which allows resource servers to authorize requests without having to go to a central authentication server. JWT should be short lived and used in conjunction with *refresh tokens* (which are just random strings).\n\nSession state is different from authentication/authorization. To keep session state secure, you really should keep it on the server. This is the easiest way to secure session state, through centralized control.\n\nThis does go against REST, which suggests distributing state to clients for scalability and client independence from the server (in case you lose the network). \n\nDistributing state to the client does introduce security concerns, which means that the server will have to perform security checks on requests to ensure that the client doesn't get the server into a bad state.""}, {'Subreddit': 'Java', 'Reddit_Title': 'What are you using to secure REST APIs?', 'CommentAuthor': 'ceremony816', 'Comment': 'I believe the problem is when they are used for session management. For REST APIs they should be fine if used properly.\n\nhttps://www.owasp.org/index.php/REST_Security_Cheat_Sheet#Access_Control\n\nhttps://www.owasp.org/index.php/JSON_Web_Token_(JWT)_Cheat_Sheet_for_Java'}, {'Subreddit': 'Java', 'Reddit_Title': 'What are you using to secure REST APIs?', 'CommentAuthor': 'johnwaterwood', 'Comment': 'A simple key vending backed by a cache works pretty well.\n\nA bit like this: http://arjan-tijms.omnifaces.org/2014/11/header-based-stateless-token.html'}, {'Subreddit': 'Java', 'Reddit_Title': 'What are you using to secure REST APIs?', 'CommentAuthor': 'zalpha314', 'Comment': ""If you use spring security oauth, you can configure it to give you access tokens.  You can then exchange this access token for your user info from the auth service.  It still tries to give you that session garbage, but with the right configurations, you can still get stateless authorization with it.\n\nBut answering the question in the title, I use auth0 for my personal projects (which give you the option of using both jwt id and secure access tokens).\n\nAt work, I've made my own OAuth monstrosity that runs on AWS lambda behind API gateway.  It gives you secure access tokens, and no JWT.  For my other services, API Gateway is configured to add stateless authorization via a lambda, which exchanges your access token for your profile with the auth service, and then returns all the api gateway endpoints you have access to based on the grants in that profile.""}, {'Subreddit': 'Java', 'Reddit_Title': 'What are you using to secure REST APIs?', 'CommentAuthor': 'None', 'Comment': ""JWT is easy to get wrong, and it pointlessly shifts secret information (albeit encoded) to the client, which you can otherwise retain on the server.\n\nSo I'd say: yes, JWT is neither a general-purpose solution for authentication, nor it should be anyone's default. It has its purpose and application, but most people don't need the complete decentralization it offers. Decentralization is a drawback when you don't need it.\n\nThe alternative is a simple random token key of *at least* 128 bits, where the payload is kept secure on the server. Also makes revocation much easier.""}, {'Subreddit': 'Java', 'Reddit_Title': 'What are you using to secure REST APIs?', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Java', 'Reddit_Title': 'What are you using to secure REST APIs?', 'CommentAuthor': 'Mamoulian', 'Comment': ""Spring's 'RememberMe' token.\n\nIf its db-lookup-per-request affects performance you can use cookie based sessions; optionally redis-backed if you need scale or distributed servers.\n\nBecause of the power JWTs give a hacker I wouldn't consider them unless I was sure there will always be *VERY GOOD* secret management. Like 'what's the worst someone could do if they could pretend to be an admin user without us noticing' level risk.\n\nSpring's RememberMe token is based on a hash of the user's password which gives the advantage (?) that the token expires when the user changes their password... If that's what you want.""}, {'Subreddit': 'Java', 'Reddit_Title': 'What are you using to secure REST APIs?', 'CommentAuthor': 'None', 'Comment': 'Like any tool when someone ya no idea what they‚Äôre doing it is insecure. There‚Äôs nothing wrong with jwt tokens if you know what you are doing. '}, {'Subreddit': 'Java', 'Reddit_Title': 'What are you using to secure REST APIs?', 'CommentAuthor': 'Kamiwaza', 'Comment': 'Perhaps check out Fernet.'}, {'Subreddit': 'Java', 'Reddit_Title': 'What are you using to secure REST APIs?', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Java', 'Reddit_Title': 'What are you using to secure REST APIs?', 'CommentAuthor': 'nutrecht', 'Comment': ""> I've recently come across several articles claiming JWT is not secure\n\nCare to link these? Because I'm getting the feeling you might simply misinterpreted them (or the articles themselves misinterpreted something).\n\nMost important bit to understand when you're implementing JWT is that you have to know the standard has a [glaring fault](https://auth0.com/blog/critical-vulnerabilities-in-json-web-token-libraries/).\n\nTL;DR: the standard has a 'none' algorithm that some libraries accept by default. It's retarded to even have this in the standard but it's something you need to be aware of in your implementation. Other than that JWTs are not 'not secure' at all. ""}]"
Java,Are ORMs suited for REST Web Services?,https://www.reddit.com/r/java/comments/5ppqbn/are_orms_suited_for_rest_web_services/,17,12,rouge_dev,1485188481.0,"One of my more senior colleagues was making an argument that ORMs are usually not well suited from building web services, specifically REST, because typically you wouldn't be returning domain / entity objects, you'd be returning light weight DTOs. The extra layer of converting between domain to DTO is not worth the effort, and in many cases you'd probably result to native SQL or custom JPQL queries, that could be done easier and safer with something like JOOQ / QueryDSL. He also went on about how mapping FetchType in JPA wrong with RestAPI can lead to performance problems. 

It seems like it would depend on what exactly your rest API is designed to return though no? I can definitely see his point where the request / response format differs from the backend table structure completely. 

There is also the question of breaking down your api. Lets say you have an Actor, and a list of movies that actor has been in? Do you group the data all in the /actor/{id} response, or make the client call /actor/{id}/movies? ORM and JPA make fetching associated / nested data a breeze. ","[{'Subreddit': 'Java', 'Reddit_Title': 'Are ORMs suited for REST Web Services?', 'CommentAuthor': 'None', 'Comment': 'The ORM sits in a completely different layer than your public API interface. The objects are required when you perform some sort of domain state change, in which case the logic for doing so would be  embedded in said objects.\n\nWhile I\'m not a fan of the popular ORM solutions, saying they\'re not ""suited"" for REST is a non-sequitur. This is entirely dependent on your *domain\'s business logic* and the way you decide to *factor this business logic*. The API can be put on top of just about anything.\n\n> Do you group the data all in the /actor/{id} response, or make the client call /actor/{id}/movies? ORM and JPA make fetching associated / nested data a breeze.\n\nThis is entirely up to the use cases of your API clients. Ideally what you\'d do is make it an option. Let the API clients ask for the association, and supply it. When they don\'t ask... don\'t supply it.\n\nFor an example of how this looks, check GraphQL, which allows your API clients to make detailed queries and specify exactly what they need.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are ORMs suited for REST Web Services?', 'CommentAuthor': '___sh0rug0ru', 'Comment': ""Converting between DTOs and domain objects is almost always a good idea. DTOs are used to pass data between system boundaries, which a REST API certainly is. They have no behavior and expose only certain bits of data.\n\nThe mapping between domain objects and DTOs allows you to control just how much data from the domain object is exposed to the REST endpoint (output DTO), or control what the domain object consumes to initialize or change state (input DTO). Otherwise, you risk leaking implementation details which makes it difficult to [protect internal state from external input](https://www.owasp.org/index.php/Top_10_2010-A4-Insecure_Direct_Object_References), or [expose data you shouldn't be](https://www.owasp.org/index.php/Top_10_2007-Information_Leakage_and_Improper_Error_Handling) for the user's access level. There might be mapping overhead, but the overhead pays for increased API security.\n\nThis has nothing to do with ORMs, which manage persistence of domain objects. How you interact with the ORM is controlled by the methods available on a [Repository interface](https://msdn.microsoft.com/en-us/library/ff649690.aspx), in which you define the expected data access patterns of the application. This will allow more efficient usages not only of ORMs, but other data access technologies, like Cassandra (a badly specified query can take down a database node!). You get the best performance from any data store by predicting the kinds of queries you expect to run and designing your access and storage strategies accordingly.\n\nIn any case, you should not be directly exposing the ORM to the REST API layer! Although [Spring Data REST](https://spring.io/guides/gs/accessing-data-rest/) disagrees with this premise.\n\nCheck out [Clean Architecture](https://8thlight.com/blog/uncle-bob/2012/08/13/the-clean-architecture.html)""}, {'Subreddit': 'Java', 'Reddit_Title': 'Are ORMs suited for REST Web Services?', 'CommentAuthor': 'bedobi', 'Comment': ""ORM entities are for the ORM and shouldn't be exposed anywhere outside the data layer. Use Immutables or something similar in all other layers of the app.\n\nQueryDSL SQL (ie not QueryDSL JPA) or JOOQ are better than ORMs in my opinion. They're very powerful and much better than JDBC but unlike ORMs also very transparent and simple.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Are ORMs suited for REST Web Services?', 'CommentAuthor': 'greyf0x55', 'Comment': ""I think it depends on the complexity or simplicity of your database / data model. I've personally found ORMs like Hibernate can make some things very easy, while conversely making other things difficult. I'm not anti ORM, nor am I pro ORM. ORMs are more beneficial when you are working with a transactional (OLTP) application vs an OLAP application. Not to say you couldn't do everything in JPA/Hibernate since you can do native SQL and call stored procedures, but it comes down to using the right tool for the task at hand. \n\nAlso this is a good talk on DDD concepts in REST services which you might find useful. https://www.infoq.com/presentations/ddd-rest""}, {'Subreddit': 'Java', 'Reddit_Title': 'Are ORMs suited for REST Web Services?', 'CommentAuthor': 'lukaseder', 'Comment': ""Since you're mentioning jOOQ, [here's a simple example how to use jOOQ with JAX-RS (backed by Jersey and Spring)](https://github.com/jOOQ/jOOQ/tree/master/jOOQ-examples/jOOQ-jax-rs-example)\n\nNote that the example abuses the JAX-RS annotations for *convenience* (like many people do). I wouldn't go as far as calling that example truly RESTful ([if you know what I mean](http://i.imgur.com/5kBUz87.png)), but hey. Maybe HTTP and a bit of JSON is good enough, rather than being religious about REST?""}, {'Subreddit': 'Java', 'Reddit_Title': 'Are ORMs suited for REST Web Services?', 'CommentAuthor': 'DJDavio', 'Comment': 'Seems like he\'s making a (somewhat reasonable) case against ORM in general, not just ORM coupled with REST. I\'ve recently moved from ORM to MyBatis, which has the ""benefit"" of writing custom/optimized SQL queries, while still making it easy to map back to domain objects.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are ORMs suited for REST Web Services?', 'CommentAuthor': 'evil_burrito', 'Comment': ""The benefit of ORMs are abstracting away DB implementation. If you have to support a bunch of different database implementations, you might appreciate not having to write custom SQL for each one. It makes other DB-related tasks easier, too. Need a new table? It's an annotation or two away.\n\nThe opposing argument is that ORM will probably always be slower than writing native SQL. It does make your app more brittle, since you'll end up being tied to a particular database implementation once you move past very simple cases.\n\nI usually end up doing both, with a strong bias towards ORM and straight SQL only when I'm doing something funky with stored procedures or really needs to be performant, particularly around inserts.\n\nORM to REST is not a problem per se, and I would go that route without concern unless performance became an issue.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Are ORMs suited for REST Web Services?', 'CommentAuthor': 'killinghurts', 'Comment': '> The extra layer of converting between domain to DTO is not worth the effort\n\n[dozer](http://dozer.sourceforge.net/) or [orika](https://orika-mapper.github.io/orika-docs/) make that pretty easy.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are ORMs suited for REST Web Services?', 'CommentAuthor': 'nutrecht', 'Comment': ""I do more or less agree with him. REST interfaces often present views on data that are rather different from the underlying relational model. So there is often a stronger coupling between the view and the data than between a canonical 'model' and the data. \n\nWhen 'reading' from an API the mapping from a query result to objects is typically fairly straightforward when you tailor your SQL query to that view (rowmappers tend to work well by default). Often you can more or less directly pass the repository results into your controller.\n\nWhen you use JPA you tend to move the mapping 'logic' from your projection in your SQL statement to some 'glue' layer, often found in the 'business' layer somewhere. You can use HQL for this to get close but then you're building another layer of complexity into your application that you actually don't really need. \n\nI have used both JPA and 'plain' SQL (using Springs JdbcTemplate) in REST projects and I feel I'm more productive just writing the SQL myself. ""}, {'Subreddit': 'Java', 'Reddit_Title': 'Are ORMs suited for REST Web Services?', 'CommentAuthor': 'rniestroj', 'Comment': 'How does it work with REST and JPA?\n> 1. I request a Actor /actor/{id} for editing im my webapp - i fetch the entity from DB by ID\n> 2. I change his name and the assigned projects\n> 3. I HTTP PUT back the Actor /actor/{id} to the server.\n> 4. In my Java controller i have to fetch **again** the entity by id, set the fields i want and save to DB.\n\nIs this second fetch *normal* in REST architecture? If i would use plain SQL i would in step 4 do just an SQL UPDATE. In JPA it seems i would need a SELECT before an UPDATE.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are ORMs suited for REST Web Services?', 'CommentAuthor': 'ivan0x32', 'Comment': 'Exposing your entities or domain model to HTTP layer is kind of an anti-pattern, because not only you\'re gonna be running a huge security risk but its also just inconvenient as fuck - your API will dependent on how you\'re storing your data in database and vice-versa, this creates all kinds of fucked up ""ad-hoc solutions"". \n\nAlso you don\'t really need to map everything by hand, there are data mapper libraries after all. '}]"
Java,Jersey REST web service API Documentation,http://www.dzone.com/articles/jersey-rest-service-api,3,11,chandi123,1412693427.0,,"[{'Subreddit': 'Java', 'Reddit_Title': 'Jersey REST web service API Documentation', 'CommentAuthor': 'badpotato', 'Comment': 'Why use Jersey 1.9 instead of Jersey 2.x ?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Jersey REST web service API Documentation', 'CommentAuthor': 'jhonecater', 'Comment': 'seems very useful !!'}, {'Subreddit': 'Java', 'Reddit_Title': 'Jersey REST web service API Documentation', 'CommentAuthor': 'Tillerino', 'Comment': 'All I see is a login page. Does Jersey make REST login pages?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Jersey REST web service API Documentation', 'CommentAuthor': 'dstutz', 'Comment': 'Wow...doesn\'t even work if I log in.\n\n""Access Denied\nYou are not authorized to access this page.""'}, {'Subreddit': 'Java', 'Reddit_Title': 'Jersey REST web service API Documentation', 'CommentAuthor': 'jrh3k5', 'Comment': ""That's just the servlet adapter to run a Jersey 2.x application in a servlet container, though, isn't it? Does it include any of the working parts, such as the server components, the annotations, and other components?""}, {'Subreddit': 'Java', 'Reddit_Title': 'Jersey REST web service API Documentation', 'CommentAuthor': 'jrh3k5', 'Comment': ""Yeah, don't use this page. Jersey 1.x is in maintenance mode; Jersey 2.x (and the accompanying JAX-RS 2.x spec) are where you should focus new development.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Jersey REST web service API Documentation', 'CommentAuthor': 'jhonecater', 'Comment': 'ya it has all other dependencies '}, {'Subreddit': 'Java', 'Reddit_Title': 'Jersey REST web service API Documentation', 'CommentAuthor': 'jhonecater', 'Comment': 'main purpose of this article is to show how cuubez api visualizer working with jersey so no need to worry about jersey version.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Jersey REST web service API Documentation', 'CommentAuthor': 'chandi123', 'Comment': 'IF you need to change jersey version. It is very simple just change maven dependency version. '}, {'Subreddit': 'Java', 'Reddit_Title': 'Jersey REST web service API Documentation', 'CommentAuthor': 'jrh3k5', 'Comment': 'Not at all, actually. There are substantial non-passive changes between the two. They implement two different versions of the JAX-RS specification.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Jersey REST web service API Documentation', 'CommentAuthor': 'jhonecater', 'Comment': 'i tested this sample with \n\n<dependency>\n    <groupId>org.glassfish.jersey.containers</groupId>\n     <artifactId>jersey-container-servlet</artifactId>\n     <version>2.5.1</version>\n </dependency>\n\nit work fine for me.\n'}]"
Java,"[Q] Why, or why don't you, prefer IntelliJ over Eclipse?",https://www.reddit.com/r/java/comments/1avhtwk/q_why_or_why_dont_you_prefer_intellij_over_eclipse/,36,190,PopRockz03,1708436271.0,"I've been using Eclipse for a while now, and I have recently been using IntelliJ because I have seen online that many programmers prefer IntelliJ over Eclipse. But why? Maybe I am just used to Eclipse, but I don't notice any real benefits with IntelliJ. IntelliJ is more modern (it reminds me of vscode) than Eclipse. I think my programs may compile faster on IntelliJ but I'm not 100% on that either.

I've read that IntelliJ has better plugin support than Eclipse, which I definitely agree with, but is that the only real difference? I can see why people doing company-level work would prefer IntelliJ, but I am still in school, so I don't notice the difference when working on personal projects or school assignments.

I have read from others that when you switch IDEs, you are just switching problems. I do want to switch over to IntelliJ just because of how outdated Eclipse is. Still, I would like to know if there are any other advantages IntelliJ has over Eclipse that I am not aware of.","[{'Subreddit': 'Java', 'Reddit_Title': ""[Q] Why, or why don't you, prefer IntelliJ over Eclipse?"", 'CommentAuthor': '431p', 'Comment': 'I used to have IDE issues all the time with eclipse, much less with intellij.'}, {'Subreddit': 'Java', 'Reddit_Title': ""[Q] Why, or why don't you, prefer IntelliJ over Eclipse?"", 'CommentAuthor': 'abanakakabasanaako', 'Comment': ""I'm an intelliJ user but I have to admit, the spring tie-in being free in Eclipse is a BIG advantage in my department.""}, {'Subreddit': 'Java', 'Reddit_Title': ""[Q] Why, or why don't you, prefer IntelliJ over Eclipse?"", 'CommentAuthor': '_Zouth', 'Comment': ""A few years ago IntelliJ felt significantly faster than Eclipse in my experience but IntelliJ has become slower and slower as well. Don't know how they compare nowadays as I haven't used Eclipse in almost 10 years.""}, {'Subreddit': 'Java', 'Reddit_Title': ""[Q] Why, or why don't you, prefer IntelliJ over Eclipse?"", 'CommentAuthor': 'Yugen42', 'Comment': 'When my old company started to switch to intellij over 10 years ago I was one of the longest eclipse holdouts. I was hesitant to accept the change and philosophically Eclipse is more open sourcy. But then I tried IntelliJ Ultimate and got used to it quickly, its smarter, more stable and more logical. Eclipse has always had strange issues in Linux with scaling and theming too. Id love to at least use it at home, but its hard to remember how to use two IDEs to its fullest, and any eclipse based software I use always still has those silly scaling and theming issues, like dark mode in KDE being applied incompletely, or 125% scaling causing all buttons to be cut off etc.'}, {'Subreddit': 'Java', 'Reddit_Title': ""[Q] Why, or why don't you, prefer IntelliJ over Eclipse?"", 'CommentAuthor': 'RoxSpirit', 'Comment': 'What over what ? I use NetBeans...'}, {'Subreddit': 'Java', 'Reddit_Title': ""[Q] Why, or why don't you, prefer IntelliJ over Eclipse?"", 'CommentAuthor': 'hippydipster', 'Comment': ""I switched from eclipse to intellij 7 years ago.  I switched back 2 months ago (because jobs both times).\n\nEclipse handles multi-project workspaces better, though it's not true that intellij can't, you just have to know how to pull in the other projects as peers.\n\nEclipse doesn't seem to lose track of things the way intellij does.  In intellij, when I change a maven pom file, it can just get stuck never properly updating itself.  It can easily forget little details like the fact that the current project is using preview features.  You can get into situations where you simply have to blow away your .m2 directory and start over.  I think this mostly comes down to intellij's caching and indexing and it can go awry.\n\nEclipse has incremental compilation and you can see your errors in your whole project at a glance.  The fact that you cannot do this in intellij is the biggest broken thing about intellij.  Sure, you can tell intellij to use eclipse's compiler, but in the UI it simply doesn't work as well.\n\nDebugging in both is different, and at first, you'll hate how the other works if you switch.  However, I think they are roughly equivalent.\n\nWhere intellij shines and eclipse falls short is in the plugin market and in actual editing of java code.  Eclipse's plugin market is a ghost town.  Utterly disastrous and sad.  \n\nWhen editing, intellij is just better at helping you generate java code.  Everything about it is better.  This is a big enough deal that I would choose to give up the better incremental compilation and view of project-wide errors for thediting experience of intellij.""}, {'Subreddit': 'Java', 'Reddit_Title': ""[Q] Why, or why don't you, prefer IntelliJ over Eclipse?"", 'CommentAuthor': 'i_ate_god', 'Comment': 'I like both for different reasons.\n\n""Find usages"" is far better than ""references""\n\nSpring tie in is free in eclipse. Intellij often feels much snappier especially on large projects, dark theme in intellij works fine on Linux, eclipse has a better UI out of the box, but intellij has a nicer search files UI, I could go on.\n\nThey both have strengths and weaknesses'}, {'Subreddit': 'Java', 'Reddit_Title': ""[Q] Why, or why don't you, prefer IntelliJ over Eclipse?"", 'CommentAuthor': 'roiroi1010', 'Comment': 'I switched from Eclipse to IntelliJ seven years ago. It‚Äôs way smoother in IntelliJ. The switch itself was a bit painful since I had to relearn my shortcuts and way of navigating the code. I am more productive in IntelliJ.'}, {'Subreddit': 'Java', 'Reddit_Title': ""[Q] Why, or why don't you, prefer IntelliJ over Eclipse?"", 'CommentAuthor': 'pragmasoft', 'Comment': ""I am fullstack developer. I would prefer to use the same IDE for both front and back ends. To be fair, Eclipse sucks in frontend. Due to this, i moved to\xa0vscode long ago. Now i do java development in vscode as well, which is far from good, just bearable. Actually vscode java language server is based on eclipse jdt.\xa0\nI also tried to switch to intellij several times, but somehow I just ended up hating it. I like vscode so far, just hope java support will be improved. There's good progress in this so far.""}, {'Subreddit': 'Java', 'Reddit_Title': ""[Q] Why, or why don't you, prefer IntelliJ over Eclipse?"", 'CommentAuthor': 'bobteebob', 'Comment': 'Netbeans for me! I‚Äôve tried Eclipse and IntelliJ and keep coming back to Netbeans. Even simple things like having multiple projects open in the same window isn‚Äôt possible in IntelliJ'}, {'Subreddit': 'Java', 'Reddit_Title': ""[Q] Why, or why don't you, prefer IntelliJ over Eclipse?"", 'CommentAuthor': 'wildjokers', 'Comment': ""I am a long time IntelliJ user (since 2004) so I am quite the fan; however, the one thing that is starting to bug me about Jetbrains though is their lack of response to feature requests and bug reports. It can be _years_ before a bug is fixed or a feature is implemented. They of course can't implement every feature that is requested but it is unconscionable that bug fixes are taking years. It is also annoying there is no way to get support even if you are paying for a license. You can open a bug report and then watch it get ignored for years, that is what constitutes support. (although to be fair their @intellijsupport twitter account generally responds pretty fast if you just have a question)\n\nHere is one example of a seemingly critical but that took 4 years to fix:\n\nhttps://youtrack.jetbrains.com/issue/IDEA-180772/Copyright-profile-for-default-project-is-not-working\n\nThat was even more critical because copyright profiles in default project settings was Jetbrains' suggested workaround for not having global copyright profiles (https://youtrack.jetbrains.com/issue/IDEA-136468/Create-Global-Copyright-Profiles#focus=Change-27-919419.0-0).  Global copyright profiles themselves took them 9 years to implement (just added to 2024.1 EAP).\n\nAnother huge usability problem, first reported 10 years ago:\n\nhttps://youtrack.jetbrains.com/issue/IDEA-117060/Window-splits-do-not-have-independent-history-stack\n\nAnother one open for 2 years:\n\nhttps://youtrack.jetbrains.com/issue/DBE-13867/Better-keyboard-focus-usability-in-Parameters-dialog\n\nWhy are we paying for licenses if it takes years to get any kind of bugs fixed or usability problems addressed?""}]"
Java,Interest in Desktop Spring Boot?,https://www.reddit.com/r/java/comments/1ar4a3b/interest_in_desktop_spring_boot/,35,22,rootException,1707962134.0,"I am the creator of the [Maven JPackage template](https://github.com/wiverson/maven-jpackage-template). Basically it's a nice starting point for folks that are interested in building JavaFX or Swing apps that will generate nice Windows, macOS, and Linux installers. It uses jlink to produce small JVMs while also maintaining compatibility with standard Maven dependency management.

Over the years, I have had several people ping me about using this template with Spring Boot.

I've got two ideas for how to do this properly.

1. create a template using the JavaFX web view. Pro: fairly easy to do. Con: Relies on the JavaFX embedded web view, which I believe is based on WebKit. Minimum app size for a Hello World I believe would be around 60mb.

2. create a template that uses GraalVM and Tauri. Pro: the experiments I've done have shown this to be quite fast to load. I can add an interface back to the JVM code to make calls into the Tauri subsystems just like the JavaScript code via Tauri commands, which includes [much more modern APIs](https://tauri.app/v1/api/js/). Uses the modern browser webviews. No reliance on Swing or JavaFX. As Tauri mobile comes out, I think it could even support mobile. Could use the Tauri built-in auto-updater system. Cons: GraalVM is slower for builds.

My question is... would anyone use either of these? If you would use it, would it be for personal projects / solo developer stuff, or would this be something interesting for enterprise\[s\] or commercial stuff?","[{'Subreddit': 'Java', 'Reddit_Title': 'Interest in Desktop Spring Boot?', 'CommentAuthor': 'Disastrous_Bike1926', 'Comment': 'Given how trivial the code to launch a desktop application is, it‚Äôs hard to imagine what Spring Boot would buy anyone but bloat.\n\nThe things it would give you are of limited usefulness in a desktop app - dependency injection might be useful at launch time, but doesn‚Äôt make much sense at runtime - like, injecting events into listener-like things or similar - the performance hit isn‚Äôt worth it for code that may get called every time the mouse moves one pixel.\n\nMeanwhile, the stuff that actually **is** hard about launching a desktop app - getting the threading right, dealing with platform differences in keyboard shortcuts, main menu handling on Apple, getting antialiasing turned on everywhere, setting up the right look and feel - Spring Boot does nothing for that.\n\nI‚Äôm guessing the people asking for this are web developers who feel a little intimidated by desktop apps and want something familiar. But it would do far less than they hope.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Interest in Desktop Spring Boot?', 'CommentAuthor': 'cserepj', 'Comment': ""Looks cool. I'm not into desktop apps, but I'm into wicket on the web which has very similar api to swing. Bookmarking in case I need anything done on the desktop. Also, spring boot works well with wicket as web layer, so there may be some opportunities there to explore...""}, {'Subreddit': 'Java', 'Reddit_Title': 'Interest in Desktop Spring Boot?', 'CommentAuthor': 'mmccaskill', 'Comment': 'I‚Äôm old. I helped write a JFace/SWT app that, among other things, used Spring to wire up things.  Mind you this is 2005-06 so Spring was very new. This kind of project might‚Äôve alleviated some of the issues we had merging the lifecycle of Spring components and JFace components.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Interest in Desktop Spring Boot?', 'CommentAuthor': 'maethor', 'Comment': 'I was just thinking about using Spring Boot and Swing last night for a couple of personal projects.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Interest in Desktop Spring Boot?', 'CommentAuthor': 'MocoNinja', 'Comment': ""Even if I get why people request it, I don't think it's a good idea. Spring boots magic (which feels rather pointless in a desktop app to IMO) might make the app slow to start and overall feel a little bloated so as an user, I would probably prefer another alternative""}, {'Subreddit': 'Java', 'Reddit_Title': 'Interest in Desktop Spring Boot?', 'CommentAuthor': 'Glum_Past_1934', 'Comment': 'Spring full stack seems pretty good honestly. Its a real productiom ready battle tested framework so why not. On the other side im a big fan of JS (dont hate me) so its my choice de facto for front'}, {'Subreddit': 'Java', 'Reddit_Title': 'Interest in Desktop Spring Boot?', 'CommentAuthor': 'Basic-Sandwich-6201', 'Comment': 'There is already a spring boot desktop.\nIts called Mulesoft'}, {'Subreddit': 'Java', 'Reddit_Title': 'Interest in Desktop Spring Boot?', 'CommentAuthor': 'walen', 'Comment': 'Option 2 seems like the more interesting option but, if option 1 is ""fairly easy to do""... Why not implement both, and offer them as two flavors, so to say?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Interest in Desktop Spring Boot?', 'CommentAuthor': 'UgnogSquigfukka', 'Comment': 'There is good connector library for javaFX and spring, called javafx-weaver. Fit good in my pet project for raspi4.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Interest in Desktop Spring Boot?', 'CommentAuthor': 'horatio_cavendish', 'Comment': 'Spring is bloat in webapps too'}, {'Subreddit': 'Java', 'Reddit_Title': 'Interest in Desktop Spring Boot?', 'CommentAuthor': 'meamZ', 'Comment': 'Imagine this:\nYou have a Webapp and you want to make a cheap local version of it. Then what you would likely do is package the frontend using electron and somehow launch the backend with sqlite in the background or something...'}]"
Java,Question about Generics and type reification,https://www.reddit.com/r/java/comments/19fd93o/question_about_generics_and_type_reification/,1,21,cowwoc,1706200111.0,"I skimmed through [https://openjdk.org/projects/valhalla/design-notes/in-defense-of-erasure](https://openjdk.org/projects/valhalla/design-notes/in-defense-of-erasure) and wanted to ask for some clarification.

I see that ""full"" Generics reification was considered, but did anyone consider adding partial reification incrementally, similar to how pattern matching has been incrementally added to the language?

Specifically, I am wondering if this could be implemented in terms of syntactic sugar instead of enforcing reified typed at the JVM and type-system level.

* Make the value of type parameters available at runtime for classes that are not raw-types.
* For raw-types, either omit type information or (does this make sense?) return a type of ""Object"" for all parameters.

We would keep the ability to cast generic types to raw types and back again, as it provides a useful escape hatch (example below). I believe this would allow us to add the following language-level features:

* Instantiate new instances of generic types without having to pass Class<T> into methods.
* Performing instanceof checks on generic types: if (foo instanceof List<Integer>)

&#8203;

    if (foo instanceof List<Integer>)

instead of

    if (foo instanceof List<?>)

* Implementing self-types without the use of bounded type parameters or wildcards.

&#8203;

    new T();

So please, can someone in the know please clarify the pro/cons of this approach?

Thank you in advance.

&#x200B;

&#x200B;

    public class EscapeHatch {
    
    	public static void print(Collection<Integer> coll) {
    		for (Integer element : coll) {
    			System.out.println(element + 1);
    		}
    	}
    
    	public static void main(String[] args) {
    
    		// Imagine we are given a huge Collection<Object>, and we somehow know that it only contains Integers.
    		Collection<Object> integers = new ArrayList<>();
    		integers.add(1);
    		integers.add(2);
    		
    		// We could create a Collection<Integer> and copy elements over from the old collection, but the
    		// collection is huge, so this would be an expensive operation. Instead, we cheat and cast the collection
    		// in place.
    
    		print((Collection<Integer>) (Collection) integers); // OK, prints 1 and 2
    	}
    }","[{'Subreddit': 'Java', 'Reddit_Title': 'Question about Generics and type reification', 'CommentAuthor': 'john16384', 'Comment': ""You don't need raw types for the escape hatch. You can cast to either `Object` or `Collection<?>` first, then to `Collection<Integer>`.\n\nRaw types have no place in modern Java anywhere anymore.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Question about Generics and type reification', 'CommentAuthor': 'rzwitserloot', 'Comment': '>  I am wondering if this could be implemented in terms of syntactic sugar instead of enforcing reified typed at the JVM and type-system level.\n\nI doubt it.\n\n> Make the value of type parameters available at runtime for classes that are not raw-types.\n\nThat is a non sequitur statement. Either you\'re using terms in weird ways or you don\'t understand how any of this works. Which isn\'t intended as a personal attack in the slightest: This stuff is really, really complicated. But, \'easy\' solutions to the problems that lack of reification cause were, of course, debated. It\'s possible that a really good idea is available but was never thought of. That\'s possible. The odds someone who has no idea how any of it works will think of that is... less possible. Or, rather, of the 1000 ideas they\'re going to have, 999 are going to be trivially impossible to implement.\n\nHence, if you feel you\'re on to something, that\'s great! But you should probably invest then if you want to make something of it. Read the Java Lang Spec soup to nuts, go check the code, perhaps fork the JDK (you can do that, it\'s on github amongst other places) and implement your idea.\n\nThe reason it\'s a non-sequitur:\n\nThere is no such thing as a __class__ that is a __raw type__. No, it\'s __type references__ that can be raw or non-raw. Given:\n\n```\nList<String> x = new ArrayList<String>();\n```\n\nYou have a boatload of AST nodes here. Just focusing on the relevant ones (there are more layers to it, but I\'ve removed the irrelevant parts):\n\n* That\'s a single statement of type JCAssignment.\n* That assignment has 2 fields: ""left"" and ""right"".\n* Assignment.left is a \'local variable declaration\', which consists of a typeref and a name.\n* Assignment.left.name is `x`. Assignment.left.type is a __type reference__. Such a reference can have generics. It can also be raw.\n* The right hand side is a \'new instance\' AST node. They can consist of a heck of a lot of things, but here, it\'s simply: __A type reference__, along with a list of parameters. That list is, of course, empty, given that we invoke the no-args constructor here.\n* `assignment.rhs.typeRef` is a type reference that can be raw, or can have generics. It\'s not just generalized \'generics\' - it could even have the diamond operator.\n* Both of these are type use. There\'s also the X in e.g. `class Foo<X> {}` or the Y in `public <Y> Y ident(Y param) { return param;}` - the first Y (in the `<>`) is declaring a typevar, the other Ys are using it. Both generics in `List<String> x = new ArrayList<String>();` are of the \'use\' variety. Otherwise we\'d be declaring a new typevar named `String` which would be a really bad idea.\n\nPoint is, type references are __fundamentally__ a construct of an AST; the compiler takes your sack-o-bytes (the content of a `.java` source file), turns that into an AST, turns _that_ into an LST (AST to LST is the step where the compiler turns `java.lang.String` into ""Oh, that is referring to the type `java/lang/String` which can be found in that location and here is the list of methods that type has""; an AST just knows \'uh, select String on node `java.lang` which is \'select `lang` on ident node `java`\' - no idea what any of those are. Probably packages, but who knows, maybe `java` is a class, `lang` is an inner class in `java`, and `String` is an inner-inner class), and finally turns the LST into a class file, and once `javac` exits, the AST and LST, which are intermediate steps, just poof out of process memory. They aren\'t stored anywhere.\n\nThe notion of \'typeref\' is a thing introduced at the AST phase and it __disappears__ before we get to `class` phase. There\'s simply nothing to store!'}, {'Subreddit': 'Java', 'Reddit_Title': 'Question about Generics and type reification', 'CommentAuthor': 'SaishDawg', 'Comment': ""There are middle ground approaches that Java could take.  And there are existing (limited) ways to get type information at runtime (for example, types are preserved when extending an abstract class).  \n\nHere is Kotlin's take.  And while not full reification, it is more than Java offers.  Both are JVM languages, so it should be possible for Java to do something similar.\n\n[https://kotlinexpertise.com/kotlin-reified-types/](https://kotlinexpertise.com/kotlin-reified-types/)\n\n(Or just pass a class to a method parameter or constructor, and do it the hard way).""}, {'Subreddit': 'Java', 'Reddit_Title': 'Question about Generics and type reification', 'CommentAuthor': 'cowwoc', 'Comment': ""Good to know, thanks. That said, I'm still wondering what prevents Java from adding runtime information for type parameters...""}, {'Subreddit': 'Java', 'Reddit_Title': 'Question about Generics and type reification', 'CommentAuthor': 'rzwitserloot', 'Comment': 'A second key issue is use-site vs. declaration site. Given:\n\n```\nList<List<String>> x = new ArrayList<List<String>>();\nSystem.out.println(x.getComponentType());\n```\n\nI gather from your post you intend for that to be capable of being written, and that it would print `List<String>`. Currently `getComponentType()` does not exist, and, indeed, cannot be written. Also keep in mind that, where it to exist, what is its return type? `java.lang.Class`? That\'s a really big problem - `j.l.Class` instances don\'t ""know"" about their generics. There\'s just the j.l.Class instance representing `java.util.List`, you can\'t introduce the notion that j.l.Class instances can represent both `List<String>` as well as `List<Integer>`.\n\nWhat you wrote gives absolutely no inkling of a path to making that work. So, how _would_ it work?\n\nHow does the __instance__ keep track of this? Presumably, we need to create out of whole cloth a runtime concept that can store complete type signatures (not just `String`, but also `List<String>`) - we have a runtime bridge, it\'s called `java.lang.Class`, and __it will not suffice for these needs__ as j.l.C doesn\'t convey generics, and if you change it so that it does, you\'re breaking backwards compatibility. You\'ll need something new.\n\nEven if we have that:\n\nInstances share their code but not their fields. In other words, if you make 100 `java.lang.Integer` objects, in memory, there\'s only one place where the methods live (because every instance has the same code), but 100 different locations each representing the total fields of `j.l.Integer`. Which is just `int value;`.\n\nIn that sense, if you make 100 arraylists, you have 100 `Object[] data`, 100 `int size` - the 2 fields that ArrayList has. If I make 100 arraylists, they could have 100 different components, so, we also need 100 field-like constructs to track that. It\'s like arraylists gain a field `Type componentType;`, where Type is something you\'ll have to design probably.\n\nThat\'s a problem on its own: The memory load of your average java app balloons if you do this, serialization is by definition now broken (in that old instances didn\'t have this field-like concept), this fundamentally cannot be applied as fix to method-level typevar declarations, and __no__ existing code would care, as all java libraries and processes are designed not to require perusing this field.\n\nWe also break what casting means. Right now:\n\n```\nList rawList = new ArrayList<String>();\nList<Integer> myList = (List<Integer>) rawList;\nmyList.add(10);\n```\n\n\'works\', in that it compiles (with warnings), and even runs without issue. With your ideas applied, surely this either does not compile or at least fails at runtime. And if it doesn\'t, that\'s.. even weirder, no? But, __how__ do you propose this dilemma is addressed? Whatever answer you provide it\'ll break backwards compatibility. Which isn\'t an instant end to your proposal, but it does raise the bar considerably.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Question about Generics and type reification', 'CommentAuthor': 'RandomName8', 'Comment': 'Kotlin\'s approach requires inlining, which somewhat goes against tenets of Java on abstraction and binary compatibility. Once a method is inlined, the bytecode is copied over to your binary, instead of coming from the original library, this has all sorts of implications when it comes to security (under the ""new"" modules system) and also library upgrades.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Question about Generics and type reification', 'CommentAuthor': 'cowwoc', 'Comment': 'First of all, thank you for your detailed answer. I\'ll be the first to acknowledge that you understand this area of the JVM better than I do. Here is the naive way I saw this working...\n\n* I\'m going to skip over your AST discussion because it sounds like a surmountable problem if the rest of the discussion makes sense.\n\nYou mentioned that modifying java.lang.Class would break backwards compatibility. I\'d like to understand why this would be the case if we\'re only adding new fields and providing reasonable defaults for older code. As far as I can tell, this would be backwards compatible.\n\nSay we add two new fields to  `Class` instances:\n\n* `String nestedType` would contain the fully-qualified name of the raw type referenced by the class.\n* `Map<String, Class<T2>> typeParameters` would map each type parameter to its runtime value.\n\nTaking your example of `List<List<String>>`:\n\n* `Class<String>` would have an nestedType of ""java.lang.String"" and an empty map (no type parameters).\n* `Class<List<String>>` would have a nestedType of ""java.util.List"" and a map containing `[""T"", Class<String>]`\n* Class<List<List<String>>> woudl have a nestedType of ""java.util.List"" and a map containing `[""T"", Class<Class<String>>]`\n\nand so on. I\'m pretty sure that I am doing a lot of hand waving here and you\'ll be able to point out what I\'m missing. Please let me know...\n\nNow, as to backwards compatibility... we have no idea what the nestedType or typeParameters are for older classes. Whatever methods we add to `java.lang.Class` that would return the nested type and type parameters, we would specify that if the return value is null then this runtime information is not available (i.e. we\'re dealing with an older class or someone chose to omit this information for performance reasons, etc).\n\n* You are absolutely right about the added memory/space consumption this brings up. How do C# and other languages handle this problem?\n* The point you brought up about method-level typevar declarations is also valid. Couldn\'t we add the equivalent of `nestedType, typeParameters` to the java.lang.Method class to handle this case?\n* With respect to the type system, my proposal was to start out by not touching the type system for now. I want to see if we could introduce aspects of reification incrementally much like the guys have been delivering pattern matching functionality incrementally. That said, if we did want to update the type system couldn\'t we do the following?\n\n&#8203;\n\n    List rawList = new ArrayList<String>();\n    List<Integer> myList = (List<Integer>) rawList;\n    myList.add(10);\n\nwould become:\n\n    List<String> rawList = new ArrayList<String>();\n    List<Integer> myList = (List<Integer>) (Object) rawList; myList.add(10);\n\nWhere the intermediate cast to `Object` is equivalent to Typescript using an intermediate cast to ""unknown"" in order to suppress warnings for unsafe casts. This code works today. The only change that would be needed is to teach the compiler to hold its nose and suppress warnings if it spots an intermediate cast to Object. It ""knows"" that a List<String> cannot possibly be compatible with a List<Integer> but we are telling it to proceed anyway. A better example of where this is useful would be this:\n\n    List<Object> rawList = new ArrayList<Object>();\n    rawList.add(10);\nList<Integer> myList = (List<Integer>) (Object) rawList; myList.add(20);\n\nWe know that this particular case is safe, but the compiler does not. So we suppress the warning like we have done in the past.\n\nThoughts? Be gentle :)'}, {'Subreddit': 'Java', 'Reddit_Title': 'Question about Generics and type reification', 'CommentAuthor': 'SaishDawg', 'Comment': 'Yes, inlining is a double-edged sword.  All great points.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Question about Generics and type reification', 'CommentAuthor': 'vips7L', 'Comment': 'I‚Äôm assuming this would mess up stack traces too right? Since any potential error would no longer be present where the code was actually defined.\xa0'}, {'Subreddit': 'Java', 'Reddit_Title': 'Question about Generics and type reification', 'CommentAuthor': 'rzwitserloot', 'Comment': '> Say we add two new fields to  Class\n\nYou\'ve skipped over a _much_ bigger deal: This means if throughout some app\'s code base, the following end up being used:\n\n```\nList<String>\nList<List<String>>\nList<Integer>\nList<List<? extends Number>>\n```\n\nWe now have __4__ `j.l.Class` objects in core memory, whereas before your update we only had 1.\n\nSo, do we garbage collect these? That\'s a whole nother can of worms. Do we just let it accumulate? Probably the right answer but the space where Class instances are stored balloons in size when you do this. Also, what\'s the component type? At the first \'level\' of generics you can state it\'s always reified (no `List<T>`), but at the second level, even reified that can happen. I can write:\n\n```\nnew ArrayList<List<?>>();\n```\n\nJust fine. Even if `new ArrayList<?>()` is a compiler error. So, when I say \'that might balloon the amount of j.l.Class instances we have\', I mean it. By a factor of hundreds maybe.\n\n> Class<List<String>> would have a nestedType of ""java.util.List"" and a map containing [""T"", Class<String>]\n\nOkay. So what does a `Class<List<Map<? super Number, ? extends List<?>>>` have?\n\n> You are absolutely right about the added memory/space consumption this brings up. How do C# and other languages handle this problem?\n\nC itself treats generics as templates. Writing `class List<T> {}` means: ""This is merely a template; no actual List class exists whatsoever. Until some code is compiled that writes, say, `List<String>`, then use this template to __fabricate out of whole cloth__ a type named `List$String`. And, if some other code we compile writes `List<Integer>`, fire up that fabricator machine, we\'re making another whole new class\'. This results in epic levels of duplication and more crucially means that generalizing just does not work. At best these fabricated impls all `implements TheSameInterface` so we can sort of write code that accepts a `List<?>` and works whether we hand it an instance of `List<Integer>` or `List<String>`, but once we try to get to e.g:\n\n```\npublic void copyAndAdd5(List<? extends Number> a, List<? super Double> b) {\n  for (Number n : a) b.add(n.doubleValue() + 5.0);\n}\n```\n\nthat just __cannot be written at all in C__ and that is in large part what \'in defense of no reification\' was all about. That by not reifying you _can_ write that stuff in java.\n\n> How does C# do it?\n\nI don\'t know. I know go just added them to their core collection types and implemented the \'extra field\' solution, and similarly restricted quite how far you could go with `? super` and `? extends` shenanigans, severely hampering what generics can be used for. The fact that java has genericsed `java.util.Comparator`, for example, just isn\'t something you can do without the ability to write `? super` and `? extends`. Not without having a lot of bizarro surprises in your code base (why can\'t I sort a list of integers based on this \'comparator that can compare any two objects\'?)'}, {'Subreddit': 'Java', 'Reddit_Title': 'Question about Generics and type reification', 'CommentAuthor': 'RandomName8', 'Comment': 'not necessarily, the compiler outputs frame data as debug info (source file and line of code), so even though the bytecode is inlined, it can still point to the right source and line.'}]"
Java,First job using jee,https://www.reddit.com/r/java/comments/19dl8np/first_job_using_jee/,29,27,Parziv4l_x,1706004862.0,"Hi guys, I've recently started my first job and it uses jee. The job description merely required experience with java thats why I got the job.

Upon research, I have found that most companies actually use spring/ spring boot instead. I hope to be able to move into a role in a financial firm in the future, so spring experience will be greatly beneficial. Will it be very detrimental if I pursue this project involving jee? I think there may be some other projects in my department involving spring boot so I'm wondering if a switch there sometime in the future will be helpful?

Thanks for your insights.","[{'Subreddit': 'Java', 'Reddit_Title': 'First job using jee', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'First job using jee', 'CommentAuthor': 'coder111', 'Comment': ""I guess two sentences to describe is:\n\n* Spring is Java EE for people who hate Java EE.\n* Spring Boot is for people who need Spring but hate Spring.\n\nJava EE will give you:\n\n* Dependency injection\n* Persistence/database access\n* Messaging (JMS)\n* Transactions\n* REST webservices\n* Servlets/JSP/JSF webserver\n\nYou can do all these same things with Spring, often with mostly same annotations and same codebase. You can use Spring Boot to have Spring with less configuration. It's always more beneficial to learn concepts rather than specific implementations.""}, {'Subreddit': 'Java', 'Reddit_Title': 'First job using jee', 'CommentAuthor': 'laura_puppato', 'Comment': 'If that Java EE project uses Context and Dependency Injection, it will be very similar to a Spring app.\n\nThat strongly depends on the Java EE version that you are using.'}, {'Subreddit': 'Java', 'Reddit_Title': 'First job using jee', 'CommentAuthor': 'scavno', 'Comment': 'Doesn‚Äôt matter. Just get good at development in general. Don‚Äôt get too caught up in the name of a stack or the ‚ÄúJava way‚Äù. E.g JPA and JMS are things you would do well to avoid. Instead learn how databases and message queues work beyond leaky abstractions. \n\nHonestly JEE or spring are fine for what they are, either is as good or bad as the other and neither will be what you work on the day you retire so don‚Äôt sweat it.'}, {'Subreddit': 'Java', 'Reddit_Title': 'First job using jee', 'CommentAuthor': 'zappini', 'Comment': ""Congrats!\n\nThe most important skill for you to learn, IMHO, is debugging / forensics. (The next two skills are 1) developer workflows such as using source control and bug tracking and 2) how to release/ship code.)\n\nAfter a while, Spring, J2EE, and FutureHype will all look the same to you. They're all solving the same underlying problems. For instance, the purpose of all the DI and IoC frameworks is to hydrate an object graph representing a program's state. A fundamentally easy problem. But everyone has their own ideas how to best do it. (Witness all those JavaScript frameworks. All solving the same problem. Thank god the Java ecosystem doesn't have that much churn.)\n\nYou'll do fine.""}, {'Subreddit': 'Java', 'Reddit_Title': 'First job using jee', 'CommentAuthor': 'Empty_Geologist9645', 'Comment': 'You are done for. Screwed for life. Just joking. Spring got popular because it was much simpler than all this shit was in JEE. Well a decade later Spring has more shit than JEE.'}, {'Subreddit': 'Java', 'Reddit_Title': 'First job using jee', 'CommentAuthor': 'sprcow', 'Comment': ""My first Java job was JavaEE as well! \n\nHonestly it's not a bad place to start, especially with all the improvements since it's introduction. In a way, it does a slightly better job of teaching you the technical underpinnings, since they're slightly less abstracted away than with boot.\n\nI was able to get a spring boot job as my next gig with no problems.""}, {'Subreddit': 'Java', 'Reddit_Title': 'First job using jee', 'CommentAuthor': 'Fercii_RP', 'Comment': 'Start with java ee, spring will make your life easier afterwards'}, {'Subreddit': 'Java', 'Reddit_Title': 'First job using jee', 'CommentAuthor': 'halfanothersdozen', 'Comment': 'Frameworks are all the same. Pick up two or three and suddenly you are familiar with them all'}, {'Subreddit': 'Java', 'Reddit_Title': 'First job using jee', 'CommentAuthor': 'wildjokers', 'Comment': 'Once JavaEE hit version 6 it was (and continues to be) a perfectly fine framework. \n\nIn fact most of the other frameworks like Spring MVC, Quarkus, Micronaut, etc depend on some JakartaEE specifications (most notably Servlet).'}, {'Subreddit': 'Java', 'Reddit_Title': 'First job using jee', 'CommentAuthor': 'rdean400', 'Comment': ""Understand the concepts, and you'll be able to translate your skills no matter what the shop is using, even if it's not Java.  Spring is certainly the market leader, but the competition offered by Quarkus, Micronaut, and others is pushing all of them to get better.""}]"
Java,How do people weigh the different logging frameworks?,https://www.reddit.com/r/java/comments/19cpf52/how_do_people_weigh_the_different_logging/,55,66,TheKingOfSentries,1705905386.0,"When it comes to logging, the main contenders seem to be Logback and Log4J. I've also seen Java 9's System.Logger occasionally used in libraries but it's pretty uncommon. I'm curious as to what makes people choose logging impl one over another. 

Incidentally, I find myself usually going with logback. Most projects I've worked with used it so it's the one I know the most (I had some projects actually switch over to logback after that log4shell business). I like how System.Logger is built into the JDK, but never gave it a serious try. ","[{'Subreddit': 'Java', 'Reddit_Title': 'How do people weigh the different logging frameworks?', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'How do people weigh the different logging frameworks?', 'CommentAuthor': 'Iryanus', 'Comment': ""It's very rare that I find this very important, to be honest. Typically I use Spring and then normally I use the SLF4J facade in the code and configure logback, since it's already there. \n\nBut really, I rarely care much either way. It's so freakishly rare that the differences really matter...""}, {'Subreddit': 'Java', 'Reddit_Title': 'How do people weigh the different logging frameworks?', 'CommentAuthor': 'yawkat', 'Comment': ""Use slf4j because it's the most widely used logging facade, and then stop worrying too much about the backend. Whichever framework you use probably already has a default backend. \n\nIf not, logback is the most popular and ceki has a good history with logging frameworks. Log4j2 is also very popular, though log4shell left a bad taste in my mouth and logback seems to have learned more from it than log4j itself.""}, {'Subreddit': 'Java', 'Reddit_Title': 'How do people weigh the different logging frameworks?', 'CommentAuthor': 'Rjs617', 'Comment': 'I go by popularity and ease of use. Our projects are using SLF4J and Logback, and they work well.'}, {'Subreddit': 'Java', 'Reddit_Title': 'How do people weigh the different logging frameworks?', 'CommentAuthor': 'Anaptyso', 'Comment': 'By far the most important factor for me has always been ""whatever the company I work for is already using as a standard in its existing code"".\n\n\nOccasionally I\'ll be in a position to choose, but mostly it\'ll be something already in place, and the\xa0merits of one framework over another aren\'t as important as being consistent.'}, {'Subreddit': 'Java', 'Reddit_Title': 'How do people weigh the different logging frameworks?', 'CommentAuthor': 'elmuerte', 'Comment': 'It is either:\n- habit\n- existing standard\n\nFor libraries, never user terminating loggers (like logback or log4j), always use a logging facade like slf4j, jboss-logging, commons-logging.'}, {'Subreddit': 'Java', 'Reddit_Title': 'How do people weigh the different logging frameworks?', 'CommentAuthor': 'Ohsbar', 'Comment': ""I just go with whatever logging framework that's most used and recommended for the software stack I'm developing with. For Spring I go with Logback, for Quarkus I go with Jboss Logging, etc. At this point all the logging frameworks have converged. They practically all have the same features. As long as you don't use an obscure logging framework or one that's out of date you'll be fine.""}, {'Subreddit': 'Java', 'Reddit_Title': 'How do people weigh the different logging frameworks?', 'CommentAuthor': 'franz_see', 'Comment': 'Slf4j and Log4j2 are probably the top contenders\n\nIf you want to play it safe, just use slf4j because it‚Äôs been wildly adopted.\n\nI think the only advantage if log4j2 is the lazy lambda expression message evaluation\n\n```\nlogger.info(‚ÄúHello {}‚Äù, () -> getName());\n```\n\nAll in all, they‚Äôre all pretty comparable. As long as you can log as JSON format, you‚Äôd be pretty good with cloud logging integration'}, {'Subreddit': 'Java', 'Reddit_Title': 'How do people weigh the different logging frameworks?', 'CommentAuthor': 'cryptos6', 'Comment': ""I prefer the Log4j 2 API over SLF4J, because it is a bit more up to date language feature wise (e.g. it can use lambda expressions) and has a nice way to provide a logger for the current class without the need to specify the class itself. Besides that, [Log4j is also faster](https://logging.apache.org/log4j/2.x/performance.html#logging-library-performance-comparison), but honestly I would have never noticed it in any application I've worked on (I'm not in the high frequency trading business üòâ).\n\nLog4j consists, by the way, of two parts: the API and the actual logger implementation. The API is a replacement for SLF4J and  could indeed be used with Logback as back-end, although I've never seen that in practice.""}, {'Subreddit': 'Java', 'Reddit_Title': 'How do people weigh the different logging frameworks?', 'CommentAuthor': 'mondain', 'Comment': ""My opinion is to go with SLF4J paired with Logback. Why Logback vs Log4j? That's easy, the author of both: Ceki, suggested implementers use Logback over Log4j quite a few years ago; that was a done deal for me.""}, {'Subreddit': 'Java', 'Reddit_Title': 'How do people weigh the different logging frameworks?', 'CommentAuthor': 'path2light17', 'Comment': 'The only time I considered a logging frame work was writing Aws lambda functions in java.'}]"
Java,"How come Gradle has become a de facto standard (or one of the two at least), when it's so unstable? I am talking Gradle major release changes, bumping Java version, Spring version. Especially in the ecosystem that prides itself as being backwards compatible, sometimes to a fault.",https://www.reddit.com/r/java/comments/19afnzt/how_come_gradle_has_become_a_de_facto_standard_or/,239,218,jasie3k,1705658278.0,"I have spent more than 5 years now working with Gradle and the pattern emerges. Every time I need to bump Gradle/JVM/Spring version I have to fight with Gradle scripts, most of the time it's taking a significant amount of time. With Maven most of the time it's just a single line change. 

Add to that the fact that I haven't seen a `build.gradle` file in a non hello world complexity project, that wouldn't be a mess. I was browsing some notable projects recently to look for some inspirations and it's the same everywhere - a spaghetti that's difficult to understand. 

How has Gradle become one of the two leading standards in the JVM ecosystems? I know Maven is verbose, but the older I am the more I appriciate the verbosity.

EDIT: Another point, with all of these Gradle APIs changing it's difficult to find some examples, even for most basic things. I went through like 4 or 5 iterations of build.gradle just to add a separate `integrationTest` test module. Most of the examples online/ StackOverflow answers are outdated already.","[{'Subreddit': 'Java', 'Reddit_Title': ""How come Gradle has become a de facto standard (or one of the two at least), when it's so unstable? I am talking Gradle major release changes, bumping Java version, Spring version. Especially in the ecosystem that prides itself as being backwards compatible, sometimes to a fault."", 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': ""How come Gradle has become a de facto standard (or one of the two at least), when it's so unstable? I am talking Gradle major release changes, bumping Java version, Spring version. Especially in the ecosystem that prides itself as being backwards compatible, sometimes to a fault."", 'CommentAuthor': 'psyclik', 'Comment': 'Most Java shops I know kept maven for the exact reasons your describe.'}, {'Subreddit': 'Java', 'Reddit_Title': ""How come Gradle has become a de facto standard (or one of the two at least), when it's so unstable? I am talking Gradle major release changes, bumping Java version, Spring version. Especially in the ecosystem that prides itself as being backwards compatible, sometimes to a fault."", 'CommentAuthor': '_predator_', 'Comment': 'Maven is truly a build system for [the grug brained developer](https://grugbrain.dev). And I love it for that. Not once did I regret choosing Maven. But almost everytime I encounter Gradle, I find myself contemplating my life choices.'}, {'Subreddit': 'Java', 'Reddit_Title': ""How come Gradle has become a de facto standard (or one of the two at least), when it's so unstable? I am talking Gradle major release changes, bumping Java version, Spring version. Especially in the ecosystem that prides itself as being backwards compatible, sometimes to a fault."", 'CommentAuthor': 'i_wear_green_pants', 'Comment': 'I think Gradle has two big problems. Breaking changes in major versions. And too much freedom. We all know what happens when there is too much freedom. If you have someone in charge who makes sure that Gradle files are well made, things can work. But usually this is not the case and whole stuff is like wild west.\n\nI think the biggest reason is that Gradle performs much faster than Maven. It reduces build times for deployable builds and when devs build in local environment. And when you have a lot of employees, those times will add up. And we all know time is money.'}, {'Subreddit': 'Java', 'Reddit_Title': ""How come Gradle has become a de facto standard (or one of the two at least), when it's so unstable? I am talking Gradle major release changes, bumping Java version, Spring version. Especially in the ecosystem that prides itself as being backwards compatible, sometimes to a fault."", 'CommentAuthor': 'PlasmaFarmer', 'Comment': ""As far as I know Gradle can be faster in very complex projects where you have a lot of submodules. Despite this I completely agree with you. Any maven projects I inherited, upgrading was literally a line change. Anytime I needed to upgrade a Gradle project I needed to research what api is deprecated and what's the alternative way to do it.""}, {'Subreddit': 'Java', 'Reddit_Title': ""How come Gradle has become a de facto standard (or one of the two at least), when it's so unstable? I am talking Gradle major release changes, bumping Java version, Spring version. Especially in the ecosystem that prides itself as being backwards compatible, sometimes to a fault."", 'CommentAuthor': 'severo-ma-giusto', 'Comment': ""Completely agree with OP. I use Gradle professionally every day In a non-trivial multimodule project and confirm that build.gradle file is a mess.\n\nFWIW i don't think it is a problem only with Gradle, but in general with build software that use a programming language, especially with lambdas and macro, to write the build file.. Sbt for example, is the same mess if not worse. Because you have some snippets of codes, and you can put them literally everywhere and they still work, so everytime someone need a new piece, he/she just slap it somewhere in the file. After some years and some developers, the build file is lost forever.\n\nIt requires shared rules, discipline and organization to keep it clean. On contrary, Maven, being xml with a schema and strong validation rules, really help a lot to keep things clean.\n\nBTW latest version of gradle are better on this topics and they say that if you switch to kotlin from groovy it is even better, but I don't have experience on this.""}, {'Subreddit': 'Java', 'Reddit_Title': ""How come Gradle has become a de facto standard (or one of the two at least), when it's so unstable? I am talking Gradle major release changes, bumping Java version, Spring version. Especially in the ecosystem that prides itself as being backwards compatible, sometimes to a fault."", 'CommentAuthor': 'mj_flowerpower', 'Comment': 'finally a second likeminded developer üòÖ\n\nJokes aside, I haven‚Äôt seen any readable gradle files at all. Even the devs I know who swear about gradle come back to their script a year later and marvel about what they wrote back then and what it does.\n\nTo this point thankfully I was able to successfully avoid gradle. \n\nXML maybe be not a beauty in itself, but the autocomplete with the pom.xml is just awesome.\n\nBut the biggest advantage is that every pom.xml looks and behaves the same.'}, {'Subreddit': 'Java', 'Reddit_Title': ""How come Gradle has become a de facto standard (or one of the two at least), when it's so unstable? I am talking Gradle major release changes, bumping Java version, Spring version. Especially in the ecosystem that prides itself as being backwards compatible, sometimes to a fault."", 'CommentAuthor': 'fatalError1619', 'Comment': ""If you don't keep a central place for your dependencies, it will surely become a mess , but version catalogs help a lot , though they add considerable overhead to gradle IDE sync. \n\nThe main thing that gradle is notorious is for having too many ways to achieve the same thing , too many ways to create tasks , plugins . Should I use precompiled script plugins or binary plugins ? Should I use Composite builds for plugins or buildSrc for plugins ? It can certainly become overwhelming""}, {'Subreddit': 'Java', 'Reddit_Title': ""How come Gradle has become a de facto standard (or one of the two at least), when it's so unstable? I am talking Gradle major release changes, bumping Java version, Spring version. Especially in the ecosystem that prides itself as being backwards compatible, sometimes to a fault."", 'CommentAuthor': 'msx', 'Comment': ""i totally agree, Gradle sucks and i'm always preferring maven. Yeah it has XML instead of your fancy json or yaml or freaking code executed on the fly but it's much more solid and linear.""}, {'Subreddit': 'Java', 'Reddit_Title': ""How come Gradle has become a de facto standard (or one of the two at least), when it's so unstable? I am talking Gradle major release changes, bumping Java version, Spring version. Especially in the ecosystem that prides itself as being backwards compatible, sometimes to a fault."", 'CommentAuthor': 'krjura', 'Comment': ""It depends a lot on what you are doing with it.\n\nI've been actively using gradle for 5+ years (before that maven from 2005) and don't experience your level of problems. Things occasionally break but they are always very easy to fix.\n\nWhen I say using this covers:\n\n* dependency management\n* build / test / packaging customization\n* code quality tools integrations\n* lately JIB packaging\n* some custom tasks to make our life a little easier\n\nDoing all of the about is a pain to do in maven. Doing anything custom which is not directly configurable in maven is impossible since nobody in the last 4 companies I worked for does not want to touch it.\n\nJust because you can make things complicated in gradle does not mean you should. Most of the time ppl do it because they can not because they need to.\n\nAlso, important to note. In the current company we keep Java and Gradle up to date as must as possible so updating is a regular process.""}, {'Subreddit': 'Java', 'Reddit_Title': ""How come Gradle has become a de facto standard (or one of the two at least), when it's so unstable? I am talking Gradle major release changes, bumping Java version, Spring version. Especially in the ecosystem that prides itself as being backwards compatible, sometimes to a fault."", 'CommentAuthor': 'Dizerian', 'Comment': 'Because Gradle scales better and has better performance for large projects. A Maven project with hundreds of modules will become impractical quickly due to its lack of a proper task graph and poor support for incremental compilation.'}]"
Java,Looking for some great repositories written in Java,https://www.reddit.com/r/java/comments/194zbq3/looking_for_some_great_repositories_written_in/,76,64,O0o0oO0oo0o,1705077435.0,"I have been working with Groovy for the past 6 years and would like to brush up on my Java skills.

Can anyone recommend some git repositories which show some really well written projects?","[{'Subreddit': 'Java', 'Reddit_Title': 'Looking for some great repositories written in Java', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for some great repositories written in Java', 'CommentAuthor': 'OneOldNerd', 'Comment': '>Can anyone recommend some git repositories which show some really well written projects?\n\nGuess that rules out any of mine.... :D'}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for some great repositories written in Java', 'CommentAuthor': 'path2light17', 'Comment': 'Apache ones'}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for some great repositories written in Java', 'CommentAuthor': 'Active-Fuel-49', 'Comment': ""You can't go wrong with Baeldung\n\n[https://github.com/eugenp/tutorials/tree/master/core-java-modules](https://github.com/eugenp/tutorials/tree/master/core-java-modules)""}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for some great repositories written in Java', 'CommentAuthor': 'ebykka', 'Comment': 'I want to believe that it is Eclipse IDE because it has been designed by [Erich Gamma](https://en.wikipedia.org/wiki/Erich_Gamma).\r  \nErich Gamma is one of the Gang of Four, who authored the book ""[Design Patterns: Elements of Reusable Object-Oriented Software](https://en.wikipedia.org/wiki/Design_Patterns)"".\r  \nSo, I believe that Erich applied all his knowledge to the creation of Eclipse IDE.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for some great repositories written in Java', 'CommentAuthor': 'TheRealNullPy', 'Comment': 'Spring framework.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for some great repositories written in Java', 'CommentAuthor': 'alfespa17', 'Comment': 'Maybe you could check eclipse che\n\nhttps://github.com/eclipse-che/che-server\n\nYahoo Elide is pretty cool\n\nhttps://github.com/yahoo/elide\n\nOr some project from here\n\nhttps://github.com/akullpp/awesome-java'}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for some great repositories written in Java', 'CommentAuthor': 'LimpFroyo', 'Comment': 'None really, as the repo size grows - things get convoluted and there are always problems to remove / add something.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for some great repositories written in Java', 'CommentAuthor': 'ProofJuice5846', 'Comment': 'Guava by google is basically revamped Java'}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for some great repositories written in Java', 'CommentAuthor': 'byronka', 'Comment': 'It might benefit you to see a pretty recent project that, despite some unconventionality, was built with experience and attention to quality: documentation, testing, simplicity. [https://github.com/byronka/minum](https://github.com/byronka/minum)\n\nHope it helps.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for some great repositories written in Java', 'CommentAuthor': 'SeesawPrestigious729', 'Comment': ""te! you might wanna take a look at square/retrofit, it's a simple yet powerful type-safe HTTP client for Java and Android. think its great 'cause it's well-written and easy to read. another one's google/guava, should get you some deep insight on how to write top-tier Java code. cheers!""}]"
Java,Easier Java Desktop App Distribution Option?,https://www.reddit.com/r/java/comments/193yimj/easier_java_desktop_app_distribution_option/,36,75,negativity_bomb,1704968567.0,"Hi, I am sure this has been asked many time, but I could find a good solution, so I apologize ahead of time. I first learned how to program with Java back in 2009 ish but then has since moved to other platform. 

The past couple of years, I have a need to program for both macOS and Windows. Like a full function desktop app with socket communication functionality for robotics. So that ruled out web app right away. And I am too lazy to learn JavaScript anyway. 

So I attempted to ""cheat"" and use Unity C# to develop. I did that for a couple projects, but it's not quite reliable and seems like overkill using a game engine for cross platform development.

 I didn't like Python either because it's too ""open"". I also gave Flutter and Dart a tried couple years ago, but it's too different than the ""C++ like languages"", so I don't use it enough to be familiar with it.

So I turn back to Java... I remember it was being sold as the write once run anywhere platform back in the day. So I try coding with JavaFX, and that gave me a problem right away. Like I couldn't even run the JAR file with my installed JRE. Then I figured out that the common distribution JRE is JRE 8 while JDK is up to 21 now? And JavaFX is not even included in JDK21 or something? 

I read that I'm supposed to use JPackage or something to create a custom JRE with my app... but I couldn't get it to work without a bunch of errors. I also don't have a Mac to compile with. 

So it seems like the easiest way is to stick with AWT and Swing, and distribute the JAR app with Java 8 JRE? 

It's just a simple GUI for kids to interface with their Arduinos. So I don't need something ultra-profressional. 

Any recommendations? Thanks! üôèüôè","[{'Subreddit': 'Java', 'Reddit_Title': 'Easier Java Desktop App Distribution Option?', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Easier Java Desktop App Distribution Option?', 'CommentAuthor': 'gregmcph', 'Comment': ""JavaFX requires platform specific libraries.  It's not that tough, but it does mean you have to assemble separate Win, Linux and Mac packages.\n\nWith pure Swing Java you get a jar that can run anywhere.\n\nJPackage needs you to have access to a machine for each platform to make the installers.  I have a clunky bash script that uses SSH to push my JAR off to each machine and run commands.  It's a rigamarole.\n\nBut JPackage bundles it all up.  A JRE, JavaFX libs, everything.  So the user doesn't have to install anything else.\n\nAND then Mac programs need a complex signing, and I probably need that for Windows too.  That's a task I dread.\n\nSorry.  What was the question again?\n\n\nJavaScript may be awful in many ways, but a webpage avoids these games, and drawing on a Canvas isn't so scary once you get the hang of it.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Easier Java Desktop App Distribution Option?', 'CommentAuthor': 'Djelimon', 'Comment': ""I have a desktop app using javafx I'm releasing. I'm using jpackage to create a windows distribution for beta distribution. But I get all kinds of warnings installing it because I haven't signed the binaries yet.\n\nMy plan is to use Hydraulic Conveyor to sort that out.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Easier Java Desktop App Distribution Option?', 'CommentAuthor': 'jeffreportmill', 'Comment': 'If your app has a nice little Swing or JavaFX jar, try JDeploy. It is very easy to use and quickly generates downloadable native app packages for all common desktop platforms (and now even browser).\n\n[https://www.jdeploy.com/](https://www.jdeploy.com/)\n\nYou can also simply distribution Swing apps in the browser with CheerpJ.\n\nhttps://leaningtech.com/what-is-cheerpj/'}, {'Subreddit': 'Java', 'Reddit_Title': 'Easier Java Desktop App Distribution Option?', 'CommentAuthor': 'Pote-Pote-Pote', 'Comment': 'If you are willing to pay, the actual best solution is Install4J (https://www.ej-technologies.com/products/install4j/overview.html) which offers cross-compilation, auto-updates etc.\n\nBut for a hobby project jpackage might be the correct choice.\n\nIf you want to use JavaFX for the GUI, just inluce it like you would any other dependency: https://openjfx.io/openjfx-docs/#maven'}, {'Subreddit': 'Java', 'Reddit_Title': 'Easier Java Desktop App Distribution Option?', 'CommentAuthor': 'PlasmaFarmer', 'Comment': ""There are multiple JDK vendors now:  \nhttps://whichjdk.com/\n\nIf you want Java FX you have two options:  \n- PC has preinstalled Java without JavaFX as you said so you download JavaFX dependencies and include them in your application as dependencies.  \n- You ship your a JDK with JavaFX included with your application. You can either include the JDK with the app or use an installer that downloads the JDK when installing the app. There is a project for that, forgot it's name.\n\nEdit: as others have said: install4j and jpackage""}, {'Subreddit': 'Java', 'Reddit_Title': 'Easier Java Desktop App Distribution Option?', 'CommentAuthor': 'generationextra', 'Comment': 'I recently used JavaPackager for a JavaFX project and it worked fine for me. Link: https://github.com/fvarrui/JavaPackager'}, {'Subreddit': 'Java', 'Reddit_Title': 'Easier Java Desktop App Distribution Option?', 'CommentAuthor': 'OddEstimate1627', 'Comment': ""My recommendation would be JavaFX with [Conveyor](https://conveyor.hydraulic.dev) for packaging (free for open source projects). JavaFX has a bit of a learning curve, but IMO it's a lot better than the alternatives.\n\nI've been working on robotics related visualisations for a long time and use it for all 5 major desktop and mobile platforms.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Easier Java Desktop App Distribution Option?', 'CommentAuthor': 'moss_2703', 'Comment': 'I‚Äôd use swing then no external libraries are needed'}, {'Subreddit': 'Java', 'Reddit_Title': 'Easier Java Desktop App Distribution Option?', 'CommentAuthor': 'TheYaINN', 'Comment': ""Not sure but is launch4j maybe the product you're looking after?""}, {'Subreddit': 'Java', 'Reddit_Title': 'Easier Java Desktop App Distribution Option?', 'CommentAuthor': 'Ksiemrzyc', 'Comment': 'On the MacOS you can just install [Liberica JDK](https://bell-sw.com/pages/downloads/#jdk-21-lts).\n\nLink to [Liberica Full JRE 21 ARM-64 for MacOS](https://download.bell-sw.com/java/21.0.1+12/bellsoft-jre21.0.1+12-macos-aarch64-full.dmg) .dmg\n\nLiberica JDK naming:  \nJRE = OpenJDK runtime only, no build tools  \nFull = has LibericaFX (based on OpenJFX)'}]"
Java,Java on Visual Studio Code Update - December 2023,https://www.reddit.com/r/java/comments/191evfn/java_on_visual_studio_code_update_december_2023/,40,27,nickzhu9,1704696284.0,"[https://devblogs.microsoft.com/java/java-on-visual-studio-code-update-december-2023/](https://devblogs.microsoft.com/java/java-on-visual-studio-code-update-december-2023/)

Updates include

* Support of viewing Test Coverage within Insiders version
* Group Java Extensions settings by category
* Improved ""Add new Java file"" experience
* Better multi-module Java Project import
* Major Spring Boot Extension Update

1. Migrate your projects to Spring Boot 3.2
2. Improved code completion for generating request mapping methods
3. Property completion multiple times faster
4. Integrated completely new validation engine
5. Additional performance improvements

&#x200B;

&#x200B;

&#x200B;","[{'Subreddit': 'Java', 'Reddit_Title': 'Java on Visual Studio Code Update - December 2023', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Java on Visual Studio Code Update - December 2023', 'CommentAuthor': 'NaNx_engineer', 'Comment': ""what's the stance on oracle's new vscode extension for java?  (https://marketplace.visualstudio.com/items?itemName=Oracle.oracle-java)""}, {'Subreddit': 'Java', 'Reddit_Title': 'Java on Visual Studio Code Update - December 2023', 'CommentAuthor': 'ihatebeinganonymous', 'Comment': ""Preview features of Java 21 are still unsupported :( I can't use string templating, for example""}, {'Subreddit': 'Java', 'Reddit_Title': 'Java on Visual Studio Code Update - December 2023', 'CommentAuthor': 'BigBad0', 'Comment': 'Things changing rapidly. I have tested VSCode for Java development multiple times across 2023. Last time since November, things were much more stable, less errors and highly workable. I am trying to migrate from IntelliJ to VSCode with Maven multi modules Spring Boot apps and flutter front-end web app. It has been a great experience so far and finally got everything working and stable. However, from development experience perspective, intellij still has a lot of error checks and warnings better and smarter that VSCode + Extensions. The Git UI in intellij is just a freaking awesome. Editor behavior is still superior (specially multi pointer caret selection stuff) plus the outstanding plugins like String Manipulation.  \n\n\nAt the beginning I would not consider even using VSCode for Java, let alone Spring. But now, I see the road towards being superior to IntelliJ.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java on Visual Studio Code Update - December 2023', 'CommentAuthor': 'MrMars05', 'Comment': 'I rather get shot than use VS for Java.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java on Visual Studio Code Update - December 2023', 'CommentAuthor': 'Top-Difference8407', 'Comment': ""I wish I knew which extension to use. I just switched last year to IJ from Eclipse. The navigation and refactoring are tough to beat with Eclipse and somewhat with IJ. I was used to Eclipse. I knew its demons but had to leave it for doing non Java stuff as that support was woefully wanting. I wanted to free OSS tool to be better, but in this case it was not.\n\nVCode has, in my experience dozens of extemsions for everything that solve a fraction of the problem you're trting to fix. Then you have to figure out where it installed it in the menu or assign it yourself. I see this with all languages, not just Java. \n\n About a year or so ago it sort of worked with Java but refactoring was a bit weak.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Java on Visual Studio Code Update - December 2023', 'CommentAuthor': 'Charming-Twist6254', 'Comment': 'Nice!!'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java on Visual Studio Code Update - December 2023', 'CommentAuthor': 'Slick752', 'Comment': 'Gave this plugin a try. Been using it since it was released, uninstalled it yesterday and went back to the Red Hat plugin.  \nVerdict: Unusable at any scale. This plugin is far from the quality of Red Hat plugin.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java on Visual Studio Code Update - December 2023', 'CommentAuthor': 'emberko', 'Comment': 'Judging by repo state it has 0.5 active maintainers.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java on Visual Studio Code Update - December 2023', 'CommentAuthor': 'HelloItMeMort', 'Comment': 'It baffles me how nobody else can do Git integration like JetBrains'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java on Visual Studio Code Update - December 2023', 'CommentAuthor': 'NonsenseVerbs', 'Comment': 'and if was better than intellij?'}]"
Java,Meta: How do you get around all the low quality content for this language?,https://www.reddit.com/r/java/comments/1902fi6/meta_how_do_you_get_around_all_the_low_quality/,173,76,InternetAnima,1704555074.0,"Hi there folks. I've worked with Java professionally for a number of years in the past and then dedicated myself to other languages (mostly Go & some Python).

I'm about to take a Java position and revisiting some things and I just can't believe the sheer amount of bad tutorials with broken English polluting my search results to the point it's even hard to find proper material written by library authors. 

Are there some known documentation hubs for projects or how do you deal with this in general? ","[{'Subreddit': 'Java', 'Reddit_Title': 'Meta: How do you get around all the low quality content for this language?', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Meta: How do you get around all the low quality content for this language?', 'CommentAuthor': 'pron98', 'Comment': 'As far as it goes for the JDK itself (language, standard library, VM):\n\n- The [official JDK documentation](https://docs.oracle.com/en/java/javase/21/) for each JDK version contains *a lot* of high quality reference information for the language, standard library, and VM, as well as pretty detailed migration guides and adoption guides for new features.\n\n- For in-depth, detailed, official information about changes and new features see the [JEPs](https://openjdk.org/projects/jdk/22/) and [release notes](https://jdk.java.net/22/release-notes) for each release.\n\n- The official developer hub is [dev.java](https://dev.java) where you can find some text tutorials as well as a lot of  top-notch video tutorials made by the JDK team (if you enjoy them, you might as well subscribe to the official [Java YouTube channel](https://www.youtube.com/java)).\n\n- The official source of news about upcoming JDK features and changes is [inside.java](https://inside.java).\n\nFor more expansive and detailed learning, I would go for books by reputable publishers.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Meta: How do you get around all the low quality content for this language?', 'CommentAuthor': 'xxsanguisxx', 'Comment': 'marcobehler.com has very high quality and easy to read guides on Java and Spring'}, {'Subreddit': 'Java', 'Reddit_Title': 'Meta: How do you get around all the low quality content for this language?', 'CommentAuthor': 'SorryButterfly4207', 'Comment': ""https://jenkov.com/\n\nI've found these to be the best quality of all the general purpose software tutorials I've read.  We'll written,  by someone who clearly understands the material.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Meta: How do you get around all the low quality content for this language?', 'CommentAuthor': 'reddit04029', 'Comment': 'Baeldung babyyy'}, {'Subreddit': 'Java', 'Reddit_Title': 'Meta: How do you get around all the low quality content for this language?', 'CommentAuthor': 'Danelius90', 'Comment': ""If you're using google for searches (haven't investigated for others) you can try [uBlacklist](https://chrome.google.com/webstore/detail/ublacklist/pncfbmialoiaghdehhbnbhkkgmjanfhe) to remove certain sites from the results. There are certain notorious offenders that just never appear for me now, like the ones that have clearly randomly scraped other sites for code snippets. Helps a bit""}, {'Subreddit': 'Java', 'Reddit_Title': 'Meta: How do you get around all the low quality content for this language?', 'CommentAuthor': 'subsecond', 'Comment': ""For a while, the only sources that I used religiously were the API documentation hosted by Oracle and Joshua Bloch's book, Effective Java. For framework guidance, Baeldung is a great resource to scratch the surface of all the good ones. If you are willing to spend a few bucks, Udemy is good as well for structured tutorials on specific topics, but watch the previews and read reviews first to make sure you click with the instructor (teaching style, accent, etc).""}, {'Subreddit': 'Java', 'Reddit_Title': 'Meta: How do you get around all the low quality content for this language?', 'CommentAuthor': 'Ruin-Capable', 'Comment': ""If you're lookng for documentation on a specific framework, go to the authoritative source.  For example, go to the Spring website for the documentation about Spring Boot.\n\nOnce you have the documentation and understand the broad strokes of how to use the project, you can search for more targeted answers which are generally pretty good (unless you've encountered something novel, but usually that's not the case).""}, {'Subreddit': 'Java', 'Reddit_Title': 'Meta: How do you get around all the low quality content for this language?', 'CommentAuthor': 'generationextra', 'Comment': 'Here‚Äôs a plug for Cay Horstmann‚Äòs _Core Java for the Impatient_, which I can very highly recommend.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Meta: How do you get around all the low quality content for this language?', 'CommentAuthor': 'see_recursion', 'Comment': ""Search for Venkat Subramaniam. Exceptional books and the best learning sessions I've ever attended.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Meta: How do you get around all the low quality content for this language?', 'CommentAuthor': '_AManHasNoName_', 'Comment': 'Use baeldung.com for anything Java and Spring-related stuff :)'}]"
Java,Looking for open source java projects to contribute to,https://www.reddit.com/r/java/comments/18t3z8q/looking_for_open_source_java_projects_to/,99,30,Affectionate-Hope733,1703796149.0,"I'd like to start contributing to open source, and I'm looking for repositories where I could contribute. 

If you have any suggestions please write them down. 

I'd prefer spring projects, but anything is good.","[{'Subreddit': 'Java', 'Reddit_Title': 'Looking for open source java projects to contribute to', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for open source java projects to contribute to', 'CommentAuthor': 'paint__drinker', 'Comment': ""Here's a Spring project for a cancer research application that a lot of researchers use: https://github.com/cBioPortal/cbioportal/issues\n\nThey're good people and they do important work; you may be able to find an issue or two you can make a PR for.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for open source java projects to contribute to', 'CommentAuthor': 'n4te', 'Comment': 'https://github.com/libgdx/libgdx/'}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for open source java projects to contribute to', 'CommentAuthor': 'Wild_Longshot', 'Comment': 'Have you looked into [Code Triage](https://www.codetriage.com/)? Full list of repos wanting help and you can filter by language.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for open source java projects to contribute to', 'CommentAuthor': 'm_0_n', 'Comment': 'if you want to learn PSP emulator written in java, go to https://github.com/jpcsp/jpcsp'}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for open source java projects to contribute to', 'CommentAuthor': 'inDflash', 'Comment': 'I would suggest opensearch or elasticsearch'}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for open source java projects to contribute to', 'CommentAuthor': 'rustyrazorblade', 'Comment': 'There‚Äôs a lot of great Apache projects that run across a wide variety of purposes. What‚Äôs your interest in?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for open source java projects to contribute to', 'CommentAuthor': 'mbelfalas', 'Comment': 'Airbyte:\nhttps://github.com/airbytehq/airbyte'}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for open source java projects to contribute to', 'CommentAuthor': 'mcpierceaim', 'Comment': 'http://www.github.com/comixed/comixed is one I‚Äôm working on. Always looking for contributions and help on making things better.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for open source java projects to contribute to', 'CommentAuthor': 'loicmathieu', 'Comment': ""If you're a new open source contributor, you may want to start to contribute to small projects, it would be easier, there is a lot of projects out there that seek for contributions and a lot of website to help finding one including as already cited Code Triage.\n\nOf course, you can also contribute to or, y, the Open Source data orchestrator written in Java, as I work there, I'll be happy to help you contribute :))e that seek for contributions and a lot of websites to help find one, including as already cited Code Triage.ge.e.. but to other big projects so I can say that, as opposite to some other big projects, the Quarkus codebase is easy to understand as there is not a lot of levels of abstractions everywhere. To start small, you can also contribute to some community extensions in the [Quarkiverse](https://github.com/quarkiverse).\n\nOf course you can also contribute to [Kestra](https://github.com/kestra-io/kestra), the Open Source data orchestrator w, it'll be easier and rk there I'll be happy to help you contributing :)\n\nBut more importantly, **you should try to contribute to something you know and use**, it'll be easier, and **start with small contributions**: documentation, translation, tests, ... to make you comfortable with the contributing process of the project (like how to install and run the project, the code style, the review process, ...)""}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for open source java projects to contribute to', 'CommentAuthor': 'griso84', 'Comment': 'What are your interests ?'}]"
Java,Looking for a LLM fine tuned for Java or AutoGPT framework compatible with Gemini instead of OpenAI,https://www.reddit.com/r/java/comments/18nqgrj/looking_for_a_llm_fine_tuned_for_java_or_autogpt/,3,12,anonymous_abc99,1703174866.0,"Hey guys, I am looking for a llm which is fine tuned completely on java projects, specifically for java spring boot. But maybe no one has curated a large enough dataset out of them to create an llm and the web search capabilities of these models are highly limited due to the limited context window.

There is an infinitely large amount of documentation and other data available for java. The ecosystem in too big. But I've observed that even GPT 4 sucks at creating java projects from scratch. GitHub Copilot (which claims to be using gpt4) never gives an executable code that runs without errors even for the most basic spring . But it is able to generate any kind of python code required (especially for training predefined models) that works without errors in most cases. 

I've observed similar issues with deepseek coder and code llama 34b. Looks like the datasetd used for training these models had a much larger amount of python samples as compared to java.

Basically from what I understand that all LLMs are just a set of insanely advanced mathematical functions that is able to read the user input, read it's own generated output and predict the next most suitable token (which is actually represented as number inside the model) and this makes generalization a very tough task. The thing is I don't need the model to be able to give a buggy code in a million different languages, I need a decent executable code in just one. I also don't need the model to know the irrelevant general knowledge information, just basic English to understand the problem and advanced java programming skills. I know this is the idea behind mixture of experts approach but I feel they're still to broad. The java ecosystem is so vast that I can define tasks for 8 or even 16 different experts for java ecosystem only. The issue I'm currently facing with LLMs is not overfit, but underfit.

I also tried custom GPTs on the GPTs marketplace have few GPTs for java that gave marginally better results as compared to normal gpt4, but not satisfactory. 

I haven't tried mistral medium but not really much hope from it because it has reported slightly lower results on benchmarks as compared to gpt4.

Haven't tried auto gpt either because it has higher investment requirements than just hiring an average java freelancer. Although google is providing a free API (free for any kind of personal use case) that seems to be better than gpt-3.5 but I don't really see any open source AutoGPT repository giving option to use Gemini Pro instead of the gpt 3.5 or gpt 4. I understand that claude or mistral can't be used since they aren't available for free through an api but why not Gemini? My technical abilities are limited to edit those codes to use Gemini instead of gpt which also means that I can't really create one from scratch. 

It'd be really helpful if anyone can knows about a java fine tuned llm or an AutoGPT framework that is using gemini or any other llm available for free through an api (I highly doubt that). If you've enough technical expertise to change the code in any of the existing GitHub repositories to use Gemini instead of OpenAI, please do it. It'd be really helpful for not just me, but the entire community. OpenAI is just too expensive to be usable at the moment.

Please let me know if this is not an appropriate platform for this post, I'll take it down. Thanks.","[{'Subreddit': 'Java', 'Reddit_Title': 'Looking for a LLM fine tuned for Java or AutoGPT framework compatible with Gemini instead of OpenAI', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for a LLM fine tuned for Java or AutoGPT framework compatible with Gemini instead of OpenAI', 'CommentAuthor': 'stefanos-ak', 'Comment': ""I don't think this exists yet. The field of LLMs is exploding as we speak, and I think this will start popping up soon. By this, I mean smaller more specialized models. I'm pretty sure you can do this with a 7b model. \n\njust from 3 days ago:\n\nhttps://openpipe.ai/blog/mistral-7b-fine-tune-optimized""}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for a LLM fine tuned for Java or AutoGPT framework compatible with Gemini instead of OpenAI', 'CommentAuthor': 'kiteboarderni', 'Comment': 'Lol'}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for a LLM fine tuned for Java or AutoGPT framework compatible with Gemini instead of OpenAI', 'CommentAuthor': 're-thc', 'Comment': 'A lot of Java projects aren‚Äôt open source compared to e.g. Python and NodeJs. There‚Äôs a lot less data to train on. It‚Äôd be harder to tune for.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for a LLM fine tuned for Java or AutoGPT framework compatible with Gemini instead of OpenAI', 'CommentAuthor': 'crummy', 'Comment': ""if you are having a LLM build the entire thing, i.e. you aren't coding any of it, why do you care if it's Java or another language like Python? just curious.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for a LLM fine tuned for Java or AutoGPT framework compatible with Gemini instead of OpenAI', 'CommentAuthor': 'anonymous_abc99', 'Comment': ""Not really, python has only gotten popular in recent years (ig mainly after they made python 3 stable) but java has been there since the very beginning. It has the biggest ecosystem available. There are hundreds of thousands, if not millions of java based repositories available in GitHub. On the top of my mind, I can think of Apache, most Apache projects are in Java and all of them are available entirely open source. \n\nI'm very sure that if you compare (in terms of characters) the amount of code available in java vs python, java's code is going to be atleast 10x. Part of it is because java requires more characters of code for doing same task but that only makes up for about 3-4x difference.\n\nI'm not sure sure about NodeJS, I'm not very familiar with its ecosystem.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for a LLM fine tuned for Java or AutoGPT framework compatible with Gemini instead of OpenAI', 'CommentAuthor': 'anonymous_abc99', 'Comment': ""Well, it's mainly because most of the companies use java for their software development. Python is more than 30x slower than Java, so it's not really a viable option for many industry level use cases. \n\nI'm also personally more interested in Java ecosystem due to its stability over multiple decades, instead of python's which is relatively new. So, it's kinda required for my upcoming internships and jobs. For python, I don't really need AI's assistance at all because it's easy to do stuff in that language, but very very small amount of companies use it, mainly startups. I'm open to work only for fortune 500 companies, where python is not used software development, only for AI/ML research. So Java Spring Boot it is. I think I should probably take a few courses and learn Spring Boot properly, this entire AI thing just seems like a bubble at this point (like dotcom in 2000). I'm finding myself too invested in this AI field and it's not at all related to my actual work. Yesterday, I literally had a dream that gpt 5 was released and I was able to use it, but it was just a minor upgrade from gpt 4, nothing like agi or something. Idc if it's true or not, the fact that I had a dream about something like this indicates that I should take a break from this AI hype and focus on actual software development, which is what I really want to do in the end.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for a LLM fine tuned for Java or AutoGPT framework compatible with Gemini instead of OpenAI', 'CommentAuthor': 'crummy', 'Comment': 'What is the program you are trying to build where performance is such a concern?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for a LLM fine tuned for Java or AutoGPT framework compatible with Gemini instead of OpenAI', 'CommentAuthor': 'anonymous_abc99', 'Comment': ""Well, mainly an employee management system. And also my personal portfolio. I'd like to make both of these applications as optimised as possible. And it's not just these 2 applications, any basic application should be written in a fast language like Java or go instead of python. Afaik python is good only for AI/ML related takss""}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for a LLM fine tuned for Java or AutoGPT framework compatible with Gemini instead of OpenAI', 'CommentAuthor': 'crummy', 'Comment': 'Enormous applications in all sorts of software has been built in Python. I think the performance issue is not as big as you think, or not as important as you think.\n\nRegardless, does generating a portfolio with AI make much sense as portfolio, which usually are there to show what you personally are capable of?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Looking for a LLM fine tuned for Java or AutoGPT framework compatible with Gemini instead of OpenAI', 'CommentAuthor': 'anonymous_abc99', 'Comment': ""It's not just these 2 applications, I'm sure I'll be working on this technology quite extensively in future. So that's the main reason I was looking into it.\n\nLeveraging the tools available online for generating a portfolio website isn't unethical in my opinion. It's just an alternative to the resume which can be presented in a much better way.""}]"
Java,orm-performance-comparator to measure the overall time needed by the rest service,https://www.reddit.com/r/java/comments/1871mc9/ormperformancecomparator_to_measure_the_overall/,2,17,KlaudiuszWojtkowiak,1701295910.0,"I built an orm-performance-project to compare Daobab to the most popular ORMs in terms of performace.

The recent release introduced a 'FrozenQueries' approach in order to read the database content extremely fast. Also, built-in internal json converter brings an unexpecgted savings.

Overall,  average performance gain by using Daobab is about 10-20% comparing to Hibernate and 30-50% comparing to JPA, but at my laptop.

Please try it by youself. The project is ready to run:  


[GitHub Project](https://github.com/daobab-projects/orm-performance-comparator)  


https://preview.redd.it/s6vsvt802d3c1.png?width=689&format=png&auto=webp&s=e9b3c65b7e8df90e4959c3b84dfce6d18dddb229

&#x200B;","[{'Subreddit': 'Java', 'Reddit_Title': 'orm-performance-comparator to measure the overall time needed by the rest service', 'CommentAuthor': 'Kinae', 'Comment': 'Wait JPA is a specification, how do you compare with it ?'}, {'Subreddit': 'Java', 'Reddit_Title': 'orm-performance-comparator to measure the overall time needed by the rest service', 'CommentAuthor': 'kiteboarderni', 'Comment': 'This is a completely useless comparison. You have a lot to learn about performance monitoring and benchmarking from looking at that repo.'}, {'Subreddit': 'Java', 'Reddit_Title': 'orm-performance-comparator to measure the overall time needed by the rest service', 'CommentAuthor': 'coderemover', 'Comment': ""You're measuring latency with no parallelism. That is a useful metric to know but doesn't tell much how the system would behave under real load. Also, this is Java, so warmup plays a big role and I'm not sure if a few warmup iterations are enough.""}, {'Subreddit': 'Java', 'Reddit_Title': 'orm-performance-comparator to measure the overall time needed by the rest service', 'CommentAuthor': 'MrSchmellow', 'Comment': 'What he calls JPA is actually Spring Data repos, which use Hibernate under the hood xD\n> spring.jpa.database-platform=org.hibernate.dialect.H2Dialect\n\nTo OP: think about it. What are the odds of people considering to use your orm if you mix things like this in advertisement?'}, {'Subreddit': 'Java', 'Reddit_Title': 'orm-performance-comparator to measure the overall time needed by the rest service', 'CommentAuthor': 'iwek7', 'Comment': 'This is not very constructive...'}, {'Subreddit': 'Java', 'Reddit_Title': 'orm-performance-comparator to measure the overall time needed by the rest service', 'CommentAuthor': 'KlaudiuszWojtkowiak', 'Comment': 'My goal was to prove that my library (Daobab) is just faster.'}, {'Subreddit': 'Java', 'Reddit_Title': 'orm-performance-comparator to measure the overall time needed by the rest service', 'CommentAuthor': 'KlaudiuszWojtkowiak', 'Comment': 'Yes. My goal was not a comparator itself. My goal was to proove that my library (Daobab) is just faster.'}, {'Subreddit': 'Java', 'Reddit_Title': 'orm-performance-comparator to measure the overall time needed by the rest service', 'CommentAuthor': 'KlaudiuszWojtkowiak', 'Comment': ""But this is exactly how people uses JPA repository in Spring Boot in most popular way , isn't? My goal was to prove that my library (Daobab) is just faster.""}, {'Subreddit': 'Java', 'Reddit_Title': 'orm-performance-comparator to measure the overall time needed by the rest service', 'CommentAuthor': 'kiteboarderni', 'Comment': 'I guess you missed the 2 examples of how to actually write performance comparison tests?'}, {'Subreddit': 'Java', 'Reddit_Title': 'orm-performance-comparator to measure the overall time needed by the rest service', 'CommentAuthor': 'kiteboarderni', 'Comment': 'And doing that without jmh or jlbh s next to useless.'}, {'Subreddit': 'Java', 'Reddit_Title': 'orm-performance-comparator to measure the overall time needed by the rest service', 'CommentAuthor': 'coderemover', 'Comment': ""So you haven't proved it yet. It might be faster at low load, but might just die at higher load.""}]"
Java,Are there any popular Youtube channels where larger more complex Java projects are built?,https://www.reddit.com/r/java/comments/17yke8q/are_there_any_popular_youtube_channels_where/,134,38,-Every-Time-,1700353543.0,"I have been looking for somewhere to see more complex solutions and projects in java, but most of the content seems to be based around learning the basics and core concepts of the language. I watched a bit of Jon Gjengset and an equivalent of his channel or something similar in java is what im looking for. Are there any worth watching?","[{'Subreddit': 'Java', 'Reddit_Title': 'Are there any popular Youtube channels where larger more complex Java projects are built?', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Are there any popular Youtube channels where larger more complex Java projects are built?', 'CommentAuthor': '_GoldenRule', 'Comment': ""I was thinking about starting one but I'm not sure if anyone would watch lol""}, {'Subreddit': 'Java', 'Reddit_Title': 'Are there any popular Youtube channels where larger more complex Java projects are built?', 'CommentAuthor': 'freekayZekey', 'Comment': 'i don‚Äôt believe so. the problem with large projects is the fact that so many people and requirements come and go. it‚Äôs damn near impossible to simulate that'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are there any popular Youtube channels where larger more complex Java projects are built?', 'CommentAuthor': 'BluBottle', 'Comment': 'https://youtube.com/@ProgrammingTechie\n\nHis projects are more complex, but usually all build around spring boot. They are not just plain Java but also involve some frontend framework most of the time. The ‚Äúyoutube clone‚Äù series for example is 8+ hours. A lot of good hands on projects for web development.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are there any popular Youtube channels where larger more complex Java projects are built?', 'CommentAuthor': 'mohmf', 'Comment': 'Check out this: https://youtube.com/@MarcoCodes?si=gkpQdh9xCf3lr_-r\nIt has some non-trivial walkthrough projects'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are there any popular Youtube channels where larger more complex Java projects are built?', 'CommentAuthor': 'perryplatt', 'Comment': 'Gameswithgabe for learning Mario.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are there any popular Youtube channels where larger more complex Java projects are built?', 'CommentAuthor': 'repeating_bears', 'Comment': 'I always thought there was a lack of free video content for intermediate programmers in general, and certainly for Java. There\'s tonnes of beginner content for free, but I guess that\'s the biggest demographic - most people are going to give up before getting gud.\n\nThe best stuff I\'ve seen was on Pluralsight. My old company had a subscription for it. Not sure I\'d personally pay for it, but using videos isn\'t my preferred way to learn. There\'s also Udemy and Coursera and loads of others. No clue which is best.\n\nIt\'s almost never for ""tutorial""-style content, but I like watching talks/lectures, like those by Devoxx.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are there any popular Youtube channels where larger more complex Java projects are built?', 'CommentAuthor': 'nuclearmage257', 'Comment': 'I\'d love to find an ""iamtimcorey"" equivalent channel for Java if anyone has recommendations. Covers all the new topics, how to\'s, tips&tricks, large projects, loved it for C#'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are there any popular Youtube channels where larger more complex Java projects are built?', 'CommentAuthor': 'jonathan-zollinger', 'Comment': ""I've been thinking of starting one - kinda like fireship's tech in 100 seconds but I go over sometime I've learned recently with an example repo in 100 seconds, or several 100 seconds increments focused on a specific principle / technology\n\nI've recently been really enjoying learning about micronaut, so it would probably be showing stuff with that (ie CLI applications, abstracted http clients, compiling to native images (which is technically graal, but closely tied to micronaut), stuff like that). \n\nIs that too simple of projects?""}, {'Subreddit': 'Java', 'Reddit_Title': 'Are there any popular Youtube channels where larger more complex Java projects are built?', 'CommentAuthor': 'Affectionate-Hope733', 'Comment': ""What about blog post series where larger more complex java projects are built?  \nI'm thinking of starting some of these on my blog.  \nI'd make videos but I hate my voice, and I can't edit for shit.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Are there any popular Youtube channels where larger more complex Java projects are built?', 'CommentAuthor': 'aelfric5578', 'Comment': 'If you are okay with branching out of pure Java but staying in the JVM ecosystem, Rock The JVM and the ZIO Zymposium videos are great. They lean a bit towards Scala, but many concepts cross-apply.'}]"
Java,"If you were to do Maven Central from scratch, what would you change?",https://www.reddit.com/r/java/comments/17locau/if_you_were_to_do_maven_central_from_scratch_what/,42,73,bowbahdoe,1698878161.0,"Meaning the actual repository where people upload code, not the build tools themselves (though presumably they would be different too in some ways).

If you could start your own package repository today with Java as it is now but you were able to practically ignore all existing code, what would you do differently. 

Stuff like
- What metadata you store / require
- What kind of artifacts you'd allow
- Would you still use G:A:V?
- Would you enforce versioning, merge all the javadocs, build all projects from source, use JMODs, ... etc

Or, would you change absolutely nothing.","[{'Subreddit': 'Java', 'Reddit_Title': 'If you were to do Maven Central from scratch, what would you change?', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'If you were to do Maven Central from scratch, what would you change?', 'CommentAuthor': 'PartOfTheBotnet', 'Comment': 'I\'d argue that when compared to other language\'s library sharing ecosystems we have a pretty good thing going on.\n\n1. Decent security practices\n    - Uploading requires proof of domain ownership\n    - Automated vuln scanning of uploaded artifacts, author emailed about findings\n2. `group:id:version:classifier` is quite flexible. Not too simple, not too complex\n    - Easy to locally mirror without needing to have a cache per-project\n3. Good integrations in developer tooling\n\nA lot of people will say uploading to central is a pain. And if you do it manually I\'d be inclined to agree. But its not too hard to set up some CI automation to make it a _""set and forget""_ deal especially if you use a tool like JReleaser.'}, {'Subreddit': 'Java', 'Reddit_Title': 'If you were to do Maven Central from scratch, what would you change?', 'CommentAuthor': 'Yeroc', 'Comment': ""This biggest thing missing in the metadata is runtime/compiler dependency information.  If your project is targeting a Java 11 compiler and runtime it shouldn't be possible to pull in dependencies that were compiled against a higherlevel runtime.  So many times we get these  `UnsupportedClassVersionErrors` because the build system doesn't have the metadata to pro-actively prevent it!""}, {'Subreddit': 'Java', 'Reddit_Title': 'If you were to do Maven Central from scratch, what would you change?', 'CommentAuthor': 'Suspicious_Track_296', 'Comment': 'More data for library owners, and an API to access it.'}, {'Subreddit': 'Java', 'Reddit_Title': 'If you were to do Maven Central from scratch, what would you change?', 'CommentAuthor': 'KidDaedalus', 'Comment': 'It would be nice if it did not take a random amount of time between 15 and 30 minutes between publishing succeeding and the artifact becoming available.'}, {'Subreddit': 'Java', 'Reddit_Title': 'If you were to do Maven Central from scratch, what would you change?', 'CommentAuthor': 'smart_procastinator', 'Comment': 'Move away from xml to a less verbose build file. Invest in writing additional plugins for all other languages. Keep marketing the hell out of it'}, {'Subreddit': 'Java', 'Reddit_Title': 'If you were to do Maven Central from scratch, what would you change?', 'CommentAuthor': 'ForeverAlot', 'Comment': '- We could do more to provide more convenient access to more useful resources for consumers up front.\n- We could provide a usable search service.\n- We could probably know more about package integrity, for example build reproducibility.'}, {'Subreddit': 'Java', 'Reddit_Title': 'If you were to do Maven Central from scratch, what would you change?', 'CommentAuthor': 'Deep_Age4643', 'Comment': 'Easier uploading/maintenance for library owners.'}, {'Subreddit': 'Java', 'Reddit_Title': 'If you were to do Maven Central from scratch, what would you change?', 'CommentAuthor': 'TorryDo', 'Comment': 'Upload the library to the maven central for the first time is f*kin hard, and the UI is from the last century üòÜ'}, {'Subreddit': 'Java', 'Reddit_Title': 'If you were to do Maven Central from scratch, what would you change?', 'CommentAuthor': 'Joram2', 'Comment': 'A new+improved Maven would have native support for JPMS (Jigsaw) module info. Eventually, Maven dependency coordinates should merge with JPMS module info.'}, {'Subreddit': 'Java', 'Reddit_Title': 'If you were to do Maven Central from scratch, what would you change?', 'CommentAuthor': 'lucamasira', 'Comment': 'Pin dependencies not only by version but also allow pinning by sha256 hash for better security measures.'}]"
Java,Technology trends for Spring projects,https://www.reddit.com/r/java/comments/17ixfzf/technology_trends_for_spring_projects/,42,36,Sketusky,1698563296.0,"Hi,
I would like to ask you about technology trends for Spring projects. Which technology gains in popularity and is warmly welcome by companies? I browsed through job offers and I saw that Java 17 with Kotlin knowledge is a big plus. Do you have any observations?","[{'Subreddit': 'Java', 'Reddit_Title': 'Technology trends for Spring projects', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Technology trends for Spring projects', 'CommentAuthor': 'tofflos', 'Comment': 'We look at surrounding technologies when hiring. Like Linux, Docker, Kubernetes, Git and CI. I also believe many companies would take interest if they see experience in Spring Security and OpenSSL - every team needs that security guy that can also write code.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Technology trends for Spring projects', 'CommentAuthor': 'qmunke', 'Comment': 'Kotlin on the server side is going to remain niche, especially given the faster release cadence of Java versions these days. There aren\'t enough compelling reasons to move away from Java for most people.\n\nSpring is the most popular set of server-side Java frameworks and libraries. Some people might not like it but it has basically ""won"" the battle between the old Java standards-based J2EE successors for dominance.\n\nThe stuff companies want is not vastly different than it was years ago. Don\'t chase trends - instead learn how to pick up new ideas quickly, and make sure you have a solid foundation in the basics - relational databases aren\'t going anywhere; Spring is still based on the servlet model under the hood; understand how threading works and how to avoid common issues with it.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Technology trends for Spring projects', 'CommentAuthor': 'nutrecht', 'Comment': ""> I browsed through job offers and I saw that Java 17 with Kotlin knowledge is a big plus. \n\nThis subreddit overall has a very strong anti-Kotlin stance you'll see mostly in what gets up and downvoted. So take whatever you read here regarding Kotlin with a massive grain of salt. What you said here simply goes against the group-think.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Technology trends for Spring projects', 'CommentAuthor': 'hadrabap', 'Comment': ""It's the same, unfortunately. Still Spring everywhere. Kotlin is kinda new on the scene. It is yet another hype.\n\nPersonally, I'm not interested in Kotlin, I'm happy with Java 17 (now 21).\n\nWhat I'm really not comfortable with is the Spring. I've never faced such a terrible bunch of nonsense in my life. ü§Æ\n\nThe only thing that holds me in my current position is that I'm quite out of the spring hell. I'm working on core components, infrastructure stuff, and Maven Plugins. Standard JRE is more than enough for it. No Spring, no problems. \n\nBut what I'll do next? Maybe I'll try Golang and move to the development of kubernetes operators and leave the Java backend scene. I don't like Golang much, but it should be much better than the constant _Springu Akbar_.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Technology trends for Spring projects', 'CommentAuthor': 'Immanuel_Cunt2', 'Comment': 'Spring for graphql is getting quite popular'}, {'Subreddit': 'Java', 'Reddit_Title': 'Technology trends for Spring projects', 'CommentAuthor': 'cryptos6', 'Comment': '>Spring is still based on the servlet model under the hood\n\nThis is not quite correct. Spring at the core level has nothing to do with Servlet API. However, Spring MVC depends on it. But then there is the reactive web stack called WebFlux, and the async servlets are only one of multiple ways to deploy it.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Technology trends for Spring projects', 'CommentAuthor': 'jreznot', 'Comment': 'There are enough reasons such as proper nullability types. Moreover Spring team itself invests in Kotlin and coroutines a lot of resources.\n\nhttps://www.thoughtworks.com/radar/languages-and-frameworks/kotlin-with-spring'}, {'Subreddit': 'Java', 'Reddit_Title': 'Technology trends for Spring projects', 'CommentAuthor': 'Proper_Dot1645', 'Comment': 'I am interested in hearing out your strategy as well, spring is tiring me out.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Technology trends for Spring projects', 'CommentAuthor': 'GuyWithLag', 'Comment': "">Personally, I'm not interested in Kotlin, I'm happy with Java 17 (now 21).\n\nI was like that too, but took a kotlin-centered position 2 years ago and it has really grown on me. It's not perfect, but it makes a lot of the Java pain points much more reasonable.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Technology trends for Spring projects', 'CommentAuthor': '1Saurophaganax', 'Comment': 'Maybe some other java framework is more your speed? There seems to be a bunch popping up.'}]"
Java,Awesome GitHub Projects Sorted by Stars,https://awesomejava.resamvi.io/,57,21,Heckrothing,1697982974.0,,"[{'Subreddit': 'Java', 'Reddit_Title': 'Awesome GitHub Projects Sorted by Stars', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Awesome GitHub Projects Sorted by Stars', 'CommentAuthor': 'rkalla', 'Comment': 'Life goal achieved: I have a library on this list!'}, {'Subreddit': 'Java', 'Reddit_Title': 'Awesome GitHub Projects Sorted by Stars', 'CommentAuthor': 'elohhim', 'Comment': 'Wait, CLI library list without https://github.com/remkop/picocli ?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Awesome GitHub Projects Sorted by Stars', 'CommentAuthor': 'panzerfausted', 'Comment': 'Bytebuddy is not in the list'}, {'Subreddit': 'Java', 'Reddit_Title': 'Awesome GitHub Projects Sorted by Stars', 'CommentAuthor': 'agentoutlier', 'Comment': 'Checker framework is missing. It should be on the list given errorprone is.\n\nChecker is an amazing tool. I highly recommend it and think it is better than almost all the other static analysis tools.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Awesome GitHub Projects Sorted by Stars', 'CommentAuthor': 'Yesterdave_', 'Comment': 'Good list, thank you.  \nBut I wouldn\'t support the description for SDKMan, I would definitively remove the ""and Windows"" part. SDKMan hasn\'t implemented a native Windows client FOR YEARS! The indirect support through WSL definitely doesn\'t count in my book.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Awesome GitHub Projects Sorted by Stars', 'CommentAuthor': 'ByerN', 'Comment': 'Interesting, thanks.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Awesome GitHub Projects Sorted by Stars', 'CommentAuthor': 'lukaseder', 'Comment': 'Achievement unlocked: 3 minor libraries I made are listed, but not the ""Elephant in the room""'}, {'Subreddit': 'Java', 'Reddit_Title': 'Awesome GitHub Projects Sorted by Stars', 'CommentAuthor': 'Shawn-Yang25', 'Comment': 'Interesting! Seems [https://github.com/alipay/fury](https://github.com/alipay/fury) not in the serialization section of the list, is it possible to add it on the list?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Awesome GitHub Projects Sorted by Stars', 'CommentAuthor': 'rob93c', 'Comment': ""I was about to ask which one was yours but then I recognized the username hahaha\n\nThank you so much for [imgscalr](https://github.com/rkalla/imgscalr), I've been using it in my Telegram Bot to resize images and it never failed me in over a year of development :D""}, {'Subreddit': 'Java', 'Reddit_Title': 'Awesome GitHub Projects Sorted by Stars', 'CommentAuthor': 'saint_thirty_four', 'Comment': 'Java is love'}]"
Java,Are record style getters and setters idiomatic for wider use now?,https://www.reddit.com/r/java/comments/176io2n/are_record_style_getters_and_setters_idiomatic/,50,73,SiegeAe,1697147663.0,"Its' been a while now since the introduction of records and the `fieldName()` getter syntax instead of `getFieldName()`. I've since seen a few projects start to slide to this style with POJOs or even service classes that expose some fields.

I'm wondering if this is actually becoming the new idiom or not (with setters like `fieldName(newValue)` as well). I like it because it's less text to process when reading code so it's slightly faster for me, but I was also thinking about the possible ambiguity between setters, and if you wanted to have getters that have a selection parameter, but I think this would just be a case of having a more descriptive name or maybe switch to stating get just for those e.g. `getFieldNameForSelection(selectionParam)`.

I'm wondering what other arguments there are for, or against, this being the new idiom across the board, espcially since a lot of serialisation and deserialisation processes are now supporting this too, or do most java devs just hate this idea?","[{'Subreddit': 'Java', 'Reddit_Title': 'Are record style getters and setters idiomatic for wider use now?', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Are record style getters and setters idiomatic for wider use now?', 'CommentAuthor': 'pronuntiator', 'Comment': 'Not using the Java Beans convention for record accessors was the safest choice. Consider a `record Foo(int bar, String Bar) {}`. Even though violating style rules of not having fields with different case, it is legal Java. But they would share the same CamelCase accessor name `getBar()`. Thus Java would have to forbid components with the same name only different in case, an arbitrary restriction, and difficult to enforce for non ASCII characters.\n\nThen there\'s the whole existing Java Bean convention with all its special rules, which would get confused when presented with a record that simply tacks ""get"" in front of fields ‚Äì some properties would be visible to it, some not. Special cases are ""is"" instead of ""get"" for primitive booleans, and the annoying ""don\'t capitalize if the first or second character is capitalized"" rule, with a field named `cUrl` having the surprising getter `getcUrl()`.\n\nIf Java followed these conventions to the T for records, we inherit this mess and sanctify it as official Java. If it only did the ""get"", then libraries that expect JavaBean style would have been able to read some, but not all properties, which leads to confused developers (I had my fair share of fun with this).\n\nContrast with how it is now, where existing JavaBean style libraries will consistently ignore all of the record components unless they have been upgraded to check for `Class.isRecord()`.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are record style getters and setters idiomatic for wider use now?', 'CommentAuthor': 'jonhanson', 'Comment': 'Records are immutable (at least in terms of their fields), and immutable types are becoming more popular as they\'re generally easier to work with as well as being inherently thread-safe. Obviously with immutable types you wouldn\'t have setter methods, so the ""get"" in getXXX() is arguably redundant.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are record style getters and setters idiomatic for wider use now?', 'CommentAuthor': 'kevinb9n', 'Comment': 'The idea that the get- prefix was ever the universal convention for Java is a borderline myth. It was always about the case where methods come in get/set pairs. There, it makes obvious sense. People just started overapplying it because they *thought* they were supposed to.\n\nEven *Effective Java* itself has been recommending against the get- prefix (apart from the paired case) since the beginning.\n\nI also find the supposed convention that ""\\`getFoo\\` signals it\'s just a simple property access, not doing any real work"" to be quite bizarre. It seems exactly backwards to me. The *opposite* convention would be that methods with *verb* names might *do* things, and methods with *noun* names are just handing over the thing? Wouldn\'t that just make a *hell* of a lot of sense?\n\n(There\'s still an issue with words that are *ambiguously* nouns or verbs, so we try to find a way to be more clear in such cases.)'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are record style getters and setters idiomatic for wider use now?', 'CommentAuthor': 'RandomName8', 'Comment': ""the setter variant you propose is not popular, but NIO used it back in 2004.\n\nRecords are immutable, so they don't have to concern themselves with setters, but with immutable data copy methods are common, so something like `withField(field)` are common.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Are record style getters and setters idiomatic for wider use now?', 'CommentAuthor': 'krzyk', 'Comment': 'Never liked get, I always used the record style naming, it makes more sense.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are record style getters and setters idiomatic for wider use now?', 'CommentAuthor': '__konrad', 'Comment': 'Mutable bean record from hell:\n\n    record BeanRecord(java.util.Date getDate) {\n        public void setDate(java.util.Date d) {\n            getDate().setTime(d.getTime());\n        }\n    }'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are record style getters and setters idiomatic for wider use now?', 'CommentAuthor': 'rossdrew', 'Comment': 'Repeated words are always silly. I never liked get and set.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are record style getters and setters idiomatic for wider use now?', 'CommentAuthor': '60secs', 'Comment': 'It\'s a better convention, especially for booleans since the fieldname often already includes an ""is"".  \n\n\nSticking to just the field name with no args as getter and arg as setter is always unambiguous.  \nI\'m seeing this as a convention for builders. Lombok comes pretty close with the fluent option but the boolean still has edge cases where it\'s inconsistent.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are record style getters and setters idiomatic for wider use now?', 'CommentAuthor': 'the6thReplicant', 'Comment': 'Since using `@AutoValue` for over 5 years this comes naturally. Still prefer builders to constructors though so records is not a full replacement. But immutable is the way to go (and always has been).'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are record style getters and setters idiomatic for wider use now?', 'CommentAuthor': 'Holothuroid', 'Comment': ""I've done this forever. The only reason not to is that some frameworks like the get.""}]"
Java,Best Java side projects to get your foot in the door for a job?,https://www.reddit.com/r/java/comments/173uwqz/best_java_side_projects_to_get_your_foot_in_the/,61,48,damn_69_son,1696865908.0,"Currently I'm working on a proprietary tech stack (with its own custom language) which I don't see much of a future in. I want to switch to another job. I'm fine with it being a Java job because I already know the language and the market is usually pretty good. But the main problem I have is getting my resume selected, as recruiters probably won't care too much about it since I don't have much Java experience. What would be a good side project to get my resume noticed? I was thinking of doing something with Swing, but that's barely in demand nowadays. Would it be better to go for something like spring boot / vert.x REST API? ","[{'Subreddit': 'Java', 'Reddit_Title': 'Best Java side projects to get your foot in the door for a job?', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Best Java side projects to get your foot in the door for a job?', 'CommentAuthor': 'hossman1992', 'Comment': 'Spring boot is what I would do. Make a REST API with microservices using Spring gateway and eureka server. Use Spring boot 3+ with Java 17 and your CV will be really succulent'}, {'Subreddit': 'Java', 'Reddit_Title': 'Best Java side projects to get your foot in the door for a job?', 'CommentAuthor': 'SentByTheRiver', 'Comment': ""If you want to get your foot in the door for a Java job, a very heavy portion of the industry will use Spring/Spring Boot.\n\nIf you want something good for the CV I would recommend picking a subject you like, for example music and then think about all the domain objects you'd need for that. Artist, Album, Song etc.\n\n* Create Rest Controllers with endpoints to Create, Read, Update and Delete each of these\n   * Use pagination/sort to retrieve pages of information that can be sorted\n   * Think of ways the user would want to query this information (i.e get all songs by an artist, get all artists who've covered a song, get all albums by an Artists, so on and so forth)\n* Create the service classes that the controllers call, which map JPA entities to DTOs (this is merely for showcasing, some people like it others do not, but display a decoupling from the actual data layer to the response objects, you can use simple objects for this or get fancy and use MapStruct)\n* Create the repositories that access this information from the DB\n   * Here you can use JPA/Hibernate/JOOQ\n* Set up a docker-compose file that will launch an instance of Postgres/MYSQL along with your spring boot app.\n   * Hook in flyway to your pom/gradle and write migration files that set up your tables/schema\n* Use JUnit for unit testing, use something like TestContainers for integration tests, which will launch an instance of a dockerised MYSQL or Postgres instance and run tests against it.\n* Hook this up to Github and have a Github action that builds the application and runs tests, you could find a free cloud provider (AWS Free Tier, Heroku etc) that would let you publish the app (I don't think this part is super necessary but a nice to have)\n\nI'm sure many other people could chime in with technologies or implementation details but the above covers a good whack of what you'd expect to be doing on a day to day basis doing web app dev in Java/Springboot regardless of which technologies you go with. It'll showa prospective employer that\n\n* you can create models for data\n* query the data in a typical fashion\n* decouple the data layer from the api layer\n* unit and integration test your app\n* deploy with modern CI/CD pipelines\n\nHope maybe some of it helps. I can go into much more granular detail with validates, http request interceptors etc if you like, just let me know. Good luck in your quest!""}, {'Subreddit': 'Java', 'Reddit_Title': 'Best Java side projects to get your foot in the door for a job?', 'CommentAuthor': 'maethor', 'Comment': '>Would it be better to go for something like spring boot / vert.x REST API? \n\nOver doing something with Swing? Very much yes.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Best Java side projects to get your foot in the door for a job?', 'CommentAuthor': 'r_hubner', 'Comment': 'Definitely Spring boot. \n\nI always say, create a mini twitter. Everybody knows twitter, they will be able to understand it when you present it. \n\nOf course you will not have all the functions  But something simple. SQL backend, hosted on heroku. GitHub CI for automated deployment. Maybe some external API, like Google recaptcha during registration. Maybe integration with cloud blob storage like S3 for profile photos. If you want you can also do some serverless, for example for photo resize. But don\'t go too deep. Focus on development and then you can tweak it later. \n\nIt\'s up to you. But please, please, don\'t think about scaling or crazy kubernetes clusters or other ""cloud native"" solutions. Simple is the key.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Best Java side projects to get your foot in the door for a job?', 'CommentAuthor': 'DragonSnooz', 'Comment': ""Learning Java Swing takes a lot less time than learning Spring Boot.\n\nIf you're looking for volume of jobs to apply for it's Spring Boot. However, I would say you could learn both.\n\nJava Swing at least shows you care about learning more about the Java ecosystem.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Best Java side projects to get your foot in the door for a job?', 'CommentAuthor': 'zeroStackTrace', 'Comment': ""Contribute to some big or valuable open source projects instead.\n\nDon't waste your time by reinventing the wheel.\n\nhttps://www.codetriage.com/?language=Java""}, {'Subreddit': 'Java', 'Reddit_Title': 'Best Java side projects to get your foot in the door for a job?', 'CommentAuthor': 'BrooklynBillyGoat', 'Comment': ""I'd be surprised if anyone actually looks at any project you do. I'm pretty sure they only want you to tak about a project but they themself won't review your code or even check out the site. They'll just ask about it. I've never linked a project only takes about them""}, {'Subreddit': 'Java', 'Reddit_Title': 'Best Java side projects to get your foot in the door for a job?', 'CommentAuthor': 'Ok_Cancel_7891', 'Comment': 'any benefit of making backend with concurency in it, but in a serious manner?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Best Java side projects to get your foot in the door for a job?', 'CommentAuthor': 'Jotschi', 'Comment': 'The most java developer jobs offers I saw would use the following tech stack:\n\n- spring boot\n- mongodb / PostgreSQL \n- hibernate/ jpa\n- Aws / gcp\n- angular JS\n\nIndustrial or resale often also include:\n\n- Kafka  / rabbitmq'}, {'Subreddit': 'Java', 'Reddit_Title': 'Best Java side projects to get your foot in the door for a job?', 'CommentAuthor': 'hardwork179', 'Comment': 'What area is your current proprietary stack used in? It‚Äôs sometimes better to look at how you can apply your domain specific skills.'}]"
Java,"Java microservices projects. Do you use interfaces for Controllers, services and repositories?",https://www.reddit.com/r/java/comments/173bbpu/java_microservices_projects_do_you_use_interfaces/,43,93,Top_Engineering_4191,1696802614.0,"Java development is all about convention.

But does using interfaces for all layers like in Java EE makes sense for small microservices projects?","[{'Subreddit': 'Java', 'Reddit_Title': 'Java microservices projects. Do you use interfaces for Controllers, services and repositories?', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Java microservices projects. Do you use interfaces for Controllers, services and repositories?', 'CommentAuthor': 'muddy-star', 'Comment': 'I never create interface for a single implementation of a class'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java microservices projects. Do you use interfaces for Controllers, services and repositories?', 'CommentAuthor': 'bowbahdoe', 'Comment': 'I think you\'ve hit upon the root of it. If a program is relatively small, you definitely don\'t need every or any EE-ism. \n\nIf a program is large, or could reasonably be expected to grow to be large, then rigid patterns solve social problems.\n\nFor small enough programs, basically any structure is okay.\n\nWhich leaves the questions of\n\n* what is small, what is large\n* what is a good heuristic for ""will this get large"" \n* what ""rigid patterns"" are best (controller, service, repositories is not the only answer)'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java microservices projects. Do you use interfaces for Controllers, services and repositories?', 'CommentAuthor': 'Significant_Horse485', 'Comment': 'Never heard of creating interfaces for controllers. Controllers are supposed to be the bridge between the input and output and it‚Äôs unlikely you will have common input/output patterns for two different concrete implementations of a controller \n\n\nService/repo: tbh I have skipped creating interfaces a few times myself because many services don‚Äôt require a separate interface. Interfaces come in handy when you might have different implementations. Like S3UploaderService vs FileSystemUploaderService or if you want to create fakes for your test like OauthLoginService vs StubLoginService. Each implementation of a service, in theory, can have its own way of transaction management but dk if that‚Äôs much useful.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java microservices projects. Do you use interfaces for Controllers, services and repositories?', 'CommentAuthor': 'DapperCloud', 'Comment': ""KISS, never introduce abstractions before they are useful, otherwise you're creating accidental complexity all the time for no concrete gain. When (and if) you need said interface for some reason, you can create it in a matter of seconds with your IDE.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Java microservices projects. Do you use interfaces for Controllers, services and repositories?', 'CommentAuthor': 'GuyWithLag', 'Comment': ""For the love of everything that is holy, no.\n\nA microservice is a very self-contained development environment; you have much better control over databases, connections, even the hardware you're working on. \n\nYou're not writing components that could be used in 1000s of different environments and have every single option available to handle them. If you can describe an endpoint in a single page of code, do so; just make sure you're working at the right abstraction level.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Java microservices projects. Do you use interfaces for Controllers, services and repositories?', 'CommentAuthor': 'wimcle', 'Comment': 'No, its clutter. \n\nI personally never create them before I need them... which I find to be really rare.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java microservices projects. Do you use interfaces for Controllers, services and repositories?', 'CommentAuthor': 'Minute-Flan13', 'Comment': ""For repositories, yes.  For Services, Controllers no.\n\nPrimarily because I want to carve out a domain layer that is technology neutral.  As in a separate, independently deployable jar with no technology dependencies.  Don't mind annotations creeping into the domain layer.  I do this because we have a very rich problem domain, and take pains to make sure the solution incorporates concepts from the problem.  Without this, the code reads like a bunch of mechanical nonsense.\n\nControllers are out of those jars.  Period.  So no interfaces required.\n\nServices are a part of the domain (at least for domain services).   \n\nRepositories...I define interfaces in the domain layer, and they get implemented by the application, outside of the domain jar.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Java microservices projects. Do you use interfaces for Controllers, services and repositories?', 'CommentAuthor': 'lisa_lionheart', 'Comment': 'No, if you need it in a future use your refactor tools to extract an interface, its trvial'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java microservices projects. Do you use interfaces for Controllers, services and repositories?', 'CommentAuthor': 'None', 'Comment': ""The 'interface for everything' pattern is a leftover from the old days IMO, these days I consider it an anti-pattern.  \n\n\nI never use interfaces for controllers, and only use interfaces for services and repositories if I know for certain that there will be multiple implementations. 99% of the time this is not the case.  \n\n\nIn my experience adding an interface if there is only 1 implementation is just bloat and indirection. If the assumption was wrong, it's no big deal as every Java IDE has good refactoring tools to do extract interfaces.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Java microservices projects. Do you use interfaces for Controllers, services and repositories?', 'CommentAuthor': 'People_Sucker101', 'Comment': ""If you don't need to have multiple implementations of something, you don't need an interface.""}]"
Java,Sharing My First Maven Central Release - UnFork Maven Plugin,https://www.reddit.com/r/java/comments/170kugv/sharing_my_first_maven_central_release_unfork/,40,14,Neoministein,1696519616.0,"Hey r/java community, I wanted to take a moment to share something I've been working on - the UnFork Maven Plugin. This is actually my first release on Maven Central, and I'm genuinely hoping it can be as helpful to you as it has been for me.

&#x200B;

Have you ever needed to make a small tweak in a dependency, but didn't want to go through the process of forking the entire project? That's where this plugin comes in. It allows you to easily replace single files from an existing dependency during project compilation. 

&#x200B;

It's a small tool, but I've found it to be quite handy in my own projects. If you'd like to give it a try, you can find more details [here](https://github.com/Neoministein/unfork-maven-plugin). 

&#x200B;

 I'm open to any feedback or suggestions you might have. Thanks for taking the time to check it out.","[{'Subreddit': 'Java', 'Reddit_Title': 'Sharing My First Maven Central Release - UnFork Maven Plugin', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Sharing My First Maven Central Release - UnFork Maven Plugin', 'CommentAuthor': 'paul_h', 'Comment': 'Missed opportunity to call a project mother-forker or little-mother-forker.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Sharing My First Maven Central Release - UnFork Maven Plugin', 'CommentAuthor': 'john16384', 'Comment': 'Sounds very interesting. I usually drop in a file in the original package with my minor alterations (also great for testing things without having to build the whole dependency project). Makes fixing small bugs or testing a new feature trivial.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Sharing My First Maven Central Release - UnFork Maven Plugin', 'CommentAuthor': 'JustAGuyFromGermany', 'Comment': 'Needs more ""The Good Place"" references ;-)'}, {'Subreddit': 'Java', 'Reddit_Title': 'Sharing My First Maven Central Release - UnFork Maven Plugin', 'CommentAuthor': 'ShallWe69', 'Comment': 'i use commons-csv dependency which relies on obsolete apache collections. i want to replace that with collections4 in my project.\ncan i do that without forking csv codebase and producing a custom dependency which i know is difficult to maintain.\n\ncan i do that via your plugin?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Sharing My First Maven Central Release - UnFork Maven Plugin', 'CommentAuthor': 'Longjumping_Can_2774', 'Comment': 'Could you probably provide an example of what exactly you fix with that?  might be biased. Just want to understand'}, {'Subreddit': 'Java', 'Reddit_Title': 'Sharing My First Maven Central Release - UnFork Maven Plugin', 'CommentAuthor': 'johnwaterwood', 'Comment': 'I do this patching occasionally, but now use a little bit of ant code with the ant plugin for that. \n\nYour plugin might be easier /  more straightforward for that. Thanks!'}, {'Subreddit': 'Java', 'Reddit_Title': 'Sharing My First Maven Central Release - UnFork Maven Plugin', 'CommentAuthor': 'Neoministein', 'Comment': 'Haha, wish I cam up with that idea before naming it'}, {'Subreddit': 'Java', 'Reddit_Title': 'Sharing My First Maven Central Release - UnFork Maven Plugin', 'CommentAuthor': 'Neoministein', 'Comment': 'I do that too for testing, but when I want to have like a parament alteration or something I want to commit I use the plugin. \n\nFor me it makes it clearer what code comes from where and which changes I made. Most of the time the changes are bug fixes or adding more methods to a class, I like to keep those things separate from the project code.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Sharing My First Maven Central Release - UnFork Maven Plugin', 'CommentAuthor': 'aelfric5578', 'Comment': 'That works? As in your version of the class is guaranteed to be the one on the classpath rather than the original?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Sharing My First Maven Central Release - UnFork Maven Plugin', 'CommentAuthor': 'Neoministein', 'Comment': 'Yes that would be possible. Your project would need to become a multi module maven project.  \n\nYou would then just need to change the dependency to collections4 in the pom and perhaps fix some compilation errors in commons-csv if there are any between the version change.'}]"
Java,"Are companies using Java for new apps, or just for extending & maintaining old ones?",https://www.reddit.com/r/java/comments/16u4xy4/are_companies_using_java_for_new_apps_or_just_for/,45,90,PrivacyOSx,1695870969.0,"Hi everyone,

I'm a new Java student, but have been a SWE for 5 years.
I'm wondering if Java is used for brand-new projects or if other languages are being favored instead.

I know Java practically runs the world, but do companies hire Java devs for brand-new projects or just to maintain and extend what they already have running?

Is Java used in the cloud, like in AWS Lambdas (serverless)?

How employable will knowing Java make me?
Do companies hire Java devs with 1 year of Java experience but 5+ years of SWE exp?

Thanks in advance!","[{'Subreddit': 'Java', 'Reddit_Title': 'Are companies using Java for new apps, or just for extending & maintaining old ones?', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Are companies using Java for new apps, or just for extending & maintaining old ones?', 'CommentAuthor': 'LouKrazy', 'Comment': 'All the devs who maintain those Java apps know Java and write new apps in Java. The ecosystem is very strong so there is not much reason to stop writing new code for the JVM'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are companies using Java for new apps, or just for extending & maintaining old ones?', 'CommentAuthor': 'rzwitserloot', 'Comment': ""> I'm wondering if Java is used for brand-new projects or if other languages are being favored instead.\n\nBrand new projects. It's hard to go by stuff like TIOBE - it's really really difficult to measure how much a programming language is 'used'. You just download a JDK from somewhere (not even oracle, you can download em from amazon, adoptium, azul, etcetera). Does that mean you're just installing a JDK on a test server to check something? Does that mean you're a student who is going to drop out 2 days later? Or does that mean you just decided to build your 100 million funded stealth project in java? There's no way to tell, of course.\n\nHowever, mixing TIOBE and some basic and rather anecdotal insights:\n\n* Java used to be an extremely commonly made choice for android apps, because it was the _native language_ (in the sense that if the platform owners, i.e. google, decided to make, say, a stockticker app or something, they'd write it in java). It's more kotlin now. This is entirely irrelevant unless you're making android apps, but it does explain a slight shift.\n\n* There's a lot of hype about AI stuff. Fairly low-level (i.e. setting up your own neural nets) projects need to make the graphics card run the networks and java is, for now, kinda bad at that. Hence, python is rather popular there (not to write the NN stuff itself in, nono, python is utterly incapable of doing that, it's far too slow for starters. No, it's for the control layer). But java is fixing that with Project Panama. Still, explains a dip.\n\n* However, this isn't the first time stuff like this has happened. Java is particularly popular in web stuff (writing the server-side code that runs websites). Has been for decades. When Ruby on Rails got hyped, you saw a slight drop in java use, and __an absolute fuckton__ of blogs decreeing the imminent end of java. It went nowhere: Most indications are that RoR is on the wane.\n\n* Languages specifically targeted at replacing java (kotlin, scala) do not appear to have the kind of momentum you need to actually do that.\n\n* There's an increase in shops that just say 'fuck it, lets risk it, ALL IN on microsoft'. I think these shops are mostly kinda stupid but, naturally, that tends to mean they go with C# instead of java. The languages are in broad strokes identical. If C# ever 'wins', it has nothing to do with lang design. And I rather doubt that ever happens - 'all in on microsoft' has a natural asymptote. Some companies will never go there. EU is highly unlikely to let it ever get that far.\n\n> Is Java used in the cloud, like in AWS Lambdas (serverless)?\n\nYes, a ton. But serverless is possibly just a flash in the pan. Java runs fine serverless (there were some hiccups when it just got popular, but, there's graalvm, quarkus, and more generally serverless frameworks that naturally do allright running java code).\n\n\n> How employable will knowing Java make me?\n\nVery.\n\nNote that the answer doesn't meaningfully change if you replace java with C#, python, or javascript.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Are companies using Java for new apps, or just for extending & maintaining old ones?', 'CommentAuthor': 'muddy-star', 'Comment': 'Working in finance industry and new projects are all in Java for the server part (using Spring as well). We looked at Kotlin (not so much Scala) but we decided to stick to pure Java as the language is now evolving quite rapidly and the gap will narrow over the coming years. Plus the overhead of hiring Java devs and that they would need to learn a new JVM language.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are companies using Java for new apps, or just for extending & maintaining old ones?', 'CommentAuthor': 'None', 'Comment': 'Started a greenfield project at work recently and the backend is in Java.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are companies using Java for new apps, or just for extending & maintaining old ones?', 'CommentAuthor': 'guss_bro', 'Comment': 'I work for one of the biggest printing company in USA. We are an exclusively Java/JVM shop.\n\nAcross the company (product, sales, order mgmt, customer service, marketing etc) there are about 580 unique deployable(+ about 120 lambdas) apps all written in Java. The desktop apps used by press are also developed in Java. There is a set of technology used for the UI.\n\nMost of the apps are mature and most of the work is augmentation of features into existing codebases. We frequently setup a brand new codebase to implement new feature/business line when it makes sense to do it on a new micro service.\n\nWe do hire junior devs occasionally.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are companies using Java for new apps, or just for extending & maintaining old ones?', 'CommentAuthor': 'tenken01', 'Comment': 'Pretty much all green field distributed web system apps we make at my west coast tech company is with Java. After working in Java, C#, JavaScript, Typescript and python, I will always choose Java as my preferred language. Right now I‚Äôm forced to use python as I‚Äôm working on a AI/ML project and it makes me sad. :( I‚Äôll be back to Java as soon as I get off this project tho!'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are companies using Java for new apps, or just for extending & maintaining old ones?', 'CommentAuthor': 'SomervillainSB', 'Comment': 'If there\'s money involved, Java (including JVM languages, like Kotlin and Scala) is often involved...greenfield and legacy.  ""Hot"" languages are more represented in prototypes.  Python, for example, is popular with certain groups and a lot of apps get rewritten out of python once they\'re in production and real money is on the line.  Node.js was on fire...then every place I and my friends worked at replaced the node.js apps with Java, C# or Go after a few years if it was making money.  I know one has to be out there, but I don\'t know of any successful node.js projects that are:\n\n1. Doing mission-critical work\n2. Have a significant percentage of a company\'s profits depending on them as well as a HUGE dollar amount\n3. Has been in production for 10 years (this is the part I\'ve never seen specifically)\n\nI know they have to exist, I just have never seen one or met anyone who has told me they have seen one.\n\nWhy Java dominates the serious projects is a very long discussion.  However, the metric that matters the most to me is which platform commands the most money.   I am confident in Java as a money maker.\n\nI can tell you that every Python app I\'ve seen professionally started out as a cool prototype from a passionate developer.  It got funded.  It went into production.  The original guy leaves or gets promoted, everyone hates it and rewrites it bit by bit because it has massive scalability, performance, and maintenance issues....or it starts withering because it\'s not making money.\n\nWhen money is on the line, many people abandon their favorite languages for Java (and presumably C# as well, but I have less experience with that).  I don\'t know enough about Go to comment...maybe that\'s a great platform too for mission-critical business work, but I have seen so many failures in node.js and python first-hand that I don\'t really buy into their hype.\n\nYes, a very talented dev can work magic with any tool.  So yeah, there are hundreds of amazing scalable apps in any platform.\n\nHowever, once you have a team that is too big to fit in a minivan and real dollars are on the line, most of the practices of Java that you find annoying become beneficial and help with scalability and consistency...which is very important after something has been in production for 5 or 10 years and the original team has left or gotten promoted into management.\n\nLearning Java won\'t be harmful to your career.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Are companies using Java for new apps, or just for extending & maintaining old ones?', 'CommentAuthor': 'ThisWorldIsAMess', 'Comment': "">if other languages are being favored instead\n\nThat depends on the product. You have to understand the industry isn't there for hype or circlejerk.\n\nI used to be an embedded/firmware guy, hdd/ssd and smart cards. I know people who works with POS and car head units. All the companies we worked for uses C/C++ and not hype languages that reddit probably prefers today.\n\nI am now working with Java, backend.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Are companies using Java for new apps, or just for extending & maintaining old ones?', 'CommentAuthor': 'mr_mlk', 'Comment': ""In the past 5 years I've worked for\n\n* a consultancy\n* a massive blue chip\n* a start up bank\n* a global financial company\n\nAll four have new software projects written in Java. The startup bank was, well a start up, and was a Java stack. (Side note: I've worked for two start up banks, both writing completely new banking stacks in Java).\n\nThree actively took in interns and new grads.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Are companies using Java for new apps, or just for extending & maintaining old ones?', 'CommentAuthor': 'klekpl', 'Comment': 'From my observations there are only two important languages (long term): Java and SQL. Other stuff sooner or later is replaced by a combination of the above.'}]"
Java,Maven version management in complex projects,https://www.reddit.com/r/java/comments/16ttlwr/maven_version_management_in_complex_projects/,23,16,Midnightary,1695843055.0,Exploring efficient version management strategies for a complex Maven  project with multiple components in a single 'pom.xml' file. How do you  ensure consistency and stability across different dependencies and  plugins within the same project? Any best practices or tools to  streamline version management and prevent issues like missing plugin  versions ?,"[{'Subreddit': 'Java', 'Reddit_Title': 'Maven version management in complex projects', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Maven version management in complex projects', 'CommentAuthor': 'Gilgw', 'Comment': '>How do you ensure consistency and stability across different dependencies and plugins within the same project?\n\nUse the Maven Enforcer Plugin with the `requireUpperBounds` rule ([link](https://maven.apache.org/enforcer/enforcer-rules/requireUpperBoundDeps.html)).\n\n>Any best practices or tools to streamline version management and prevent issues like missing plugin versions?\n\nUse a [Maven BOM](https://reflectoring.io/maven-bom) (by either importing it or setting it as the parent) and configure all versions using the `<dependencyManagement>` and `<pluginManagement>` sections.\n\nUse something like [Dependabot](https://github.com/dependabot) to keep the dependencies up-to-date.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Maven version management in complex projects', 'CommentAuthor': 'smokemonstr', 'Comment': 'Use dependency management and the enforcer plugin'}, {'Subreddit': 'Java', 'Reddit_Title': 'Maven version management in complex projects', 'CommentAuthor': 'lumpynose', 'Comment': 'Maybe see also\n\nhttps://books.sonatype.com/mvnref-book/reference/index.html'}, {'Subreddit': 'Java', 'Reddit_Title': 'Maven version management in complex projects', 'CommentAuthor': 'asarathy', 'Comment': ""dependency management, common bom, parent pom and multimodule, enforcers.   If you have a common parent you can define organization rules and allowed/disallowed dependencies.  Then you use tools to make sure no one is using a version of that parent that is too out of date and task teams to update things at a reasonable schedule.  It's work and coordination, no magic bullet.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Maven version management in complex projects', 'CommentAuthor': 'NRXXGZLS', 'Comment': 'unrelated but do you hv any good resources to learn maven? specifically the build cycle. wenever i try adding new things it breaks something else and its gotten to the point where its more painful than anything esp with tests. ty'}, {'Subreddit': 'Java', 'Reddit_Title': 'Maven version management in complex projects', 'CommentAuthor': 'n3k0_mx', 'Comment': 'Sometimes i use the versions plugin [https://www.mojohaus.org/versions/versions-maven-plugin/index.html](https://www.mojohaus.org/versions/versions-maven-plugin/index.html)\n\nIt scans the dependencies in the project and make suggestions depending of the configuration you make.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Maven version management in complex projects', 'CommentAuthor': 'rbygrave', 'Comment': 'In addition to BOM you can look to use:\n\n\\- **Maven tiles** to drive reuse on build plugins (refer [https://github.com/repaint-io/maven-tiles](https://github.com/repaint-io/maven-tiles))\n\n\\- Maven **""Composites""** to drive reuse on dependencies\n\n&#x200B;\n\nA ""Composite"" being an artefact that just combines a bunch of related dependencies. For example, [https://github.com/avaje-pom/composite-junit/blob/master/pom.xml](https://github.com/avaje-pom/composite-junit/blob/master/pom.xml) ... is a ""composite"" that combines junit-jupiter + assertJ + mockito\n\nAn example of a maven tile: [https://github.com/ebean-orm-tools/ebean-maven-tile](https://github.com/ebean-orm-tools/ebean-maven-tile)\n\n&#x200B;\n\nTypically an organisation creates its own composites and maven tiles and deploy them into you organisations nexus. The above are public examples in maven-central (for open source projects).\n\n&#x200B;\n\nYou could also look to drive reuse by creating some *organisation specific parent poms*, with the *limitation* that those drive reuse through inheritance rather than composition. Using maven tiles and composite dependencies are driving reuse via composition.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Maven version management in complex projects', 'CommentAuthor': 'legrang', 'Comment': 'This is good advice. BOM is really worth the effort for large projects'}, {'Subreddit': 'Java', 'Reddit_Title': 'Maven version management in complex projects', 'CommentAuthor': 'Clitaurius', 'Comment': 'This. Anytime you see a PR with a <version> tag in the pom have them add it the BOM-POM.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Maven version management in complex projects', 'CommentAuthor': 'GuyOnTheInterweb', 'Comment': 'We additionally would use <properties> in that bom so that you can ensure consistent versions of packages that go hand-in-hand (e.g. the Jackson family).  In this dependency management you may have to override transitive dependencies as well in case two packages each import the same transitive. use  ""mvn dependency:tree"" etc. (or the excellent Eclipse preview of dependencies) to see what versions have been resolved.\n\nNote on this case -- every package of yours should then use the same version of the parent BOM!'}]"
Java,Introducing an Annotation Processor For Generating Class Metadata,https://www.reddit.com/r/java/comments/16f3dmx/introducing_an_annotation_processor_for/,39,45,loudsight,1694360411.0,"Hey everyone,

I've never understood why Java doesn't make class metadata available at compile time. I've decided to scratch my own itch by creating an annotation processor that plugs this gap - the `@Introspect` annotation processor! üöÄ

## What is it?

 A Java annotation processor that generates metadata classes for Plain Old Java Objects (POJOs) annotated with `@Introspect`. The metadata classes implement the [`Meta<T>`](https://github.com/loudsight/entity-meta-generator/blob/master/entity-meta-generator-lib/src/main/java/com/loudsight/meta/Meta.java) interface, allowing convenient access to class metadata.

## Key Features:

* Automatically generate metadata classes for annotated POJOs.
* Access class information, fields, constructors, annotations, and more.
* Avoid reflection at runtime.
* Enhance code readability and maintainability.

## How to Get Started:

* Add the dependency:

`<dependency>`  
`<groupId>com.loudsight.meta</groupId>`  
`<artifactId>entity-meta-processor</artifactId>`  
`<version>0.0.1</version>`  
`<scope>provided</scope>`  
`</dependency>`  


* Include the `@Introspect` annotation processor library in your project's dependencies.

`<dependency>`  
`<groupId>com.loudsight.meta</groupId>`  
`<artifactId>entity-meta-generator-lib</artifactId>`  
`<version>0.0.1</version>`  
`</dependency>`  


* **Annotate Your POJOs**: Simply annotate your Java POJOs with `@Introspect`.

&#x200B;

3. **Compile and Use**: Build your project to trigger the annotation processor, and you can then use the generated metadata classes to access information about your annotated classes at compile time.

`@Introspect(clazz = Person.class)`  
`public static class Person {`  
 `private String name;`  
`private String age;`  
`public String getName() {`  
 `return name;`  
 `}`  


`public void setName(String name) {`  
 `this.name = name;`  
 `}`  


`public String getAge() {`  
 `return age;`  
 `}`  


`public void setAge(String age) {`  
 `this.age = age;`  
 `}`  
 `// etc`  
`}`  


 `PersonMeta personMeta = PersonMeta.getInstance();`  
`// Get the type name, package name, and simple type name`  
 `System.out.println(""Type Name: "" + personMeta.getTypeName());`  
 `System.out.println(""Package Name: "" + personMeta.getPackageName());`  
 `System.out.println(""Simple Type Name: "" + personMeta.getSimpleTypeName());`  
 `// Get the type class`  
 `Class<Person> personClass = personMeta.getTypeClass();`  
 `System.out.println(""Type Class: "" + personClass.getName());`  
 `// Get a collection of entity fields`  
 `Collection<EntityField<Person, ?>> fields = personMeta.getFields();`  
`for (EntityField<Person, ?> field : fields) {`  
`System.out.println(""Field: "" + field.getName());`  
 `}`  


`// Get a list of entity constructors`  
 `List<EntityConstructor> constructors = personMeta.getConstructors();`  
`for (EntityConstructor constructor : constructors) {`  
`System.out.println(""Constructor: "" + constructor);`  
 `}`  


`// Get a list of entity annotations`  
 `List<EntityAnnotation> annotations = personMeta.getAnnotations();`  
`for (EntityAnnotation annotation : annotations) {`  
`System.out.println(""Annotation: "" + annotation.getName());`  
 `}`  


`// Create a new instance of the Person class`  
 `Person person = personMeta.newInstance();`  
 `System.out.println(""New Instance: "" + person);`  
 `// Create a new instance of the Person class with values`  
 `Map<String, ?> values = Map.of(""name"", ""John"", ""age"", 30);`  
 `Person john = personMeta.newInstance(values);`  
 `System.out.println(""New Instance with Values: "" + john);`  
 `// Get fields as a map`  
 `Map<String, EntityField<Person, ?>> fieldMap = personMeta.getFieldAsMap();`  
 `System.out.println(""Fields as Map: "" + fieldMap);`  
 `// Get a field by name`  
 `EntityField<Person, ?> ageField = personMeta.getFieldByName(""age"");`  
 `System.out.println(""Age Field: "" + ageField);`  
 `// Get the type hierarchy`  
 `List<Class<?>> typeHierarchy = personMeta.getTypeHierarchy();`  
 `System.out.println(""Type Hierarchy: "" + typeHierarchy);`  
 `// Get a list of entity methods`  
 `List<EntityMethod<Person, ?>> methods = personMeta.getMethods();`  
`for (EntityMethod<Person, ?> method : methods) {`  
`System.out.println(""Method: "" + method.name());`  
 `}`  


`// Convert the Person object to a map`  
 `Map<String, Object> personMap = personMeta.toMap(person);`  
 `System.out.println(""Person as Map: "" + personMap);`

## Contribute and Report Issues:

Contributions to the project are welcome! If you encounter issues or have ideas for improvements, please visit the [GitHub repository](https://github.com/loudsight/entity-meta-generator) and consider opening an issue or contributing a patch.

[GitHub Repository](https://github.com/loudsight/entity-meta-generator)

[Documentation](https://github.com/loudsight/entity-meta-generator/blob/master/README.md)","[{'Subreddit': 'Java', 'Reddit_Title': 'Introducing an Annotation Processor For Generating Class Metadata', 'CommentAuthor': 'devchonkaa', 'Comment': 'How is that diffrent than java.lang.Class API'}, {'Subreddit': 'Java', 'Reddit_Title': 'Introducing an Annotation Processor For Generating Class Metadata', 'CommentAuthor': 'TheKingOfSentries', 'Comment': ""I love the idea. It's a little rough, but that's to be expected at such an early stage. You should make it so that it can detect the class directly instead of having to retype the class in the annotation and add module support.\n\n7/10 maybe 8/10 with rice. It loses points for still being on java 8.\n\nEDIT: I guess it is not on java 8, but not having a module-info is still not very cash money of you.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Introducing an Annotation Processor For Generating Class Metadata', 'CommentAuthor': 'pip25hu', 'Comment': 'A few odd things that stand out to me:\n\nWhat does ""entity"" mean in the context of the library? Sounds like you can annotate pretty much any class, so I don\'t think you are referring to JPA entities here.\n\nWhy do you need to repeat the class to process in the annotation as a parameter? Feels redundant to me.\n\nWhy generate a separate class? Wouldn\'t it be easier to make the class itself implement Meta?\n\nAre all Meta classes automatically registered in MetaRepository? If so, how?\n\nSome Javadoc in the source code would be welcome'}, {'Subreddit': 'Java', 'Reddit_Title': 'Introducing an Annotation Processor For Generating Class Metadata', 'CommentAuthor': 'jevring', 'Comment': ""So, it's reflection? And you think you can do it faster than the jdk itself? Or am I missing the value here?""}, {'Subreddit': 'Java', 'Reddit_Title': 'Introducing an Annotation Processor For Generating Class Metadata', 'CommentAuthor': 'agentoutlier', 'Comment': 'Micronaut does similar.\n\nI have written similar bean like introspections with APT and eventually figured it was better to generate specific code instead.\n\nThe reason is at some point reflection is better. It is sort of time vs space kind of thing. \n\nI will elaborate later (sorry).'}, {'Subreddit': 'Java', 'Reddit_Title': 'Introducing an Annotation Processor For Generating Class Metadata', 'CommentAuthor': 'Worth_Trust_3825', 'Comment': 'So how does `newInstance` work with a constructor that requires parameters?\n\nYou also have a split package between modules, and there is no module-info file. 0/10'}, {'Subreddit': 'Java', 'Reddit_Title': 'Introducing an Annotation Processor For Generating Class Metadata', 'CommentAuthor': 'ringbuffer__', 'Comment': 'How is it different from micronaut‚Äôs introspect?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Introducing an Annotation Processor For Generating Class Metadata', 'CommentAuthor': 'psyclik', 'Comment': 'How is it different from jandex (used by Quarkus) ?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Introducing an Annotation Processor For Generating Class Metadata', 'CommentAuthor': 'Miserable_Style774', 'Comment': 'Could this be used with GWT or TeaVM so that you can do reflection type stuff at runtime when it‚Äôs all transpiled down to JavaScript ?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Introducing an Annotation Processor For Generating Class Metadata', 'CommentAuthor': 'manifoldjava', 'Comment': 'Check out project manifold. Specifically, [type-safe reflection](https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-ext#type-safe-reflection-via-jailbreak).'}, {'Subreddit': 'Java', 'Reddit_Title': 'Introducing an Annotation Processor For Generating Class Metadata', 'CommentAuthor': 'loudsight', 'Comment': 'Not much different, it just encapsulates the reflection API and makes it available at compile time.\n\nEdit: u/TheKingOfSentries makes the point about reflection more succinctly than I, but I should point out that outperforming runtime reflection may be a side-effect but is not the aim. The aim was to make reflection metadata available more conveniently at compile time. :)¬∑'}]"
Java,"Field injection is fine, convince me otherwise",https://www.reddit.com/r/java/comments/16bgwhu/field_injection_is_fine_convince_me_otherwise/,21,228,kennethjor,1693997089.0,"_I know Java help questions aren't allowed, but I didn't think this was a help question as such, more a technical discussion. Apologies if I've misunderstood the rules._

I've had three different colleagues recently try to convince me to stop using field injection. I'm always looking to improve and I have listened to their arguments and sought out information online. Most people who write about it claim constructor injection is better and list various arguments. However, I haven't found any of them particularly convincing. It feels like it's more a matter of preference than actual benefit. To illustrate what I'm talking about:

Field injection:
```
class A {
	@Inject
	protected SomeService someService;
}
```

Constructor injection:
```
class A {
	private SomeService someService;

	@Inject
	public A(SomeService someService) {
		this.someService = someService;
	}
}
```

IMHO the main different seems to be that you can construct the class directly, but if you're using dependency injection, you never do. Perhaps if you're writing a reusable library it makes more sense, but most of the time I'm not. Constructor injection means I essentially have to declare my dependencies twice: once in the field and once in the constructor. Using field injection, my definition is less verbose and adding more dependencies require less work.

What am I missing?

**Update:**

If anyone is curious, the two most convincing arguments I've heard are:

* **Easier writing of unit tests**, though I think that depends on the injection tool you're using, YMMV.
* **Final fields on injected objects**, which is always nice.

I seem to have hit on a touchy subject for some. Thank you to those who participated in the discussion. I think I will also consider this post, which now has over 100 comments and zero net karma, as some form of personal achievement :)

**Update 2:**

For my own purposes, it turns out you _can_ [make Lombok and Micronaut work together](https://github.com/micronaut-projects/micronaut-core/issues/218#issuecomment-392549294) to generate the constructors, as [u/moaxcp points out below](https://www.reddit.com/r/java/comments/16bgwhu/comment/jzijf42/). Best of both worlds.","[{'Subreddit': 'Java', 'Reddit_Title': 'Field injection is fine, convince me otherwise', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Field injection is fine, convince me otherwise', 'CommentAuthor': 'Entropjy', 'Comment': ""Immutability. Constructor injection into private final fields makes the injected properties of your classes immutable, making runtime behaviour more predictable.\n\n**Edit there's some valid criticism of this post below, my comment is not well worded and could easily be misconstrued.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Field injection is fine, convince me otherwise', 'CommentAuthor': 'izuriel', 'Comment': '**tl;dr**\n\n1. If your team has preferences to avoid field injection, that should be the primary reason you avoid it. Doesn\'t matter what you feel, if it doesn\'t hurt performance, security, etc. then stick with your team preferences.\n2. Field injection relies on ""clever"" techniques to circumvent basic language guarantees and relies on additional style enforcement to ensure that dependencies are organized and clearly identifiable in a class.\n3. Constructor injection leverages standard language features enhanced by DI frameworks to provide a clear and central place where dependencies are provided to a class.\n\n**/tl;dr**\n\nThe hard and fast truth here is that, unless there is only one team member of many asking you to stop using field injection, then it doesn\'t matter how strongly you think it\'s effecting or what anyone on reddit says -- do what your team prefers. The team style always trumps personal opinions. Now, in the (rare) cases where the team styles/preferences actively fly in the face industry standards, or cause major performance bottlenecks, or some other large glaring flaw -- then you have an opportunity for some discussion around changing things or doing things a different way.\n\nThat said though, in my experience and opinion in regards to field injection vs. constructor injection is that field inject is ""magic."" Before I elaborate I want to point out that I\'m fully aware that, to some degree, any DI framework depending on annotations relies on reflection. I\'m not saying that constructor injection doesn\'t require any form of reflection to accomplish it\'s goals. Now to elaborate with that clarified.\n\nIn typical Java code, `private` and `protected` fields cannot be modified outside of the instance (whether it be a subclass or not); however, _field injection_ actually **does** modify `private` and `protected` fields of an instance. This breaks a fundamental guarantee of Java, so suddenly your code becomes much harder to reason about. You\'ve also created a hard dependency on the field injection framework you\'re using. If you were to migrate to a different tool that didn\'t support field injection, you\'d have to rewrite all these classes. Additionally, if you were to migrate off dependency injection all together (I recognize this is unlikely), again, you need to rewrite all these classes. Lastly, it becomes impossible to successfully construct an instance of this class outside of the dependency injection framework making your tests all require the DI toolset just to perform simple, lightweight tests.\n\nSo field injection:\n\n - Violates a programmers expectations/understanding of how Java is supposed to behave.\n - Creates a hard dependency on tools that specifically support field injection.\n - Makes it impossible to use the class outside of the dependency injection (applicably mostly in tests)\n - It also makes it much harder to easily identify all the incoming dependencies without additional layers of style enforcement.\n\nOn the other hand, constructor injection is actually ""DI without a framework."" What I mean by that is that if you forgo a dependency injection library with it\'s annotations and reflection features but you still want the benefits of dependency injection, you use ""constructor injection."" It\'s not a DI specific construct, it\'s literally a constructor that receives dependencies. So immediately, we\'re playing to the design of the language. We\'re using it\'s tools and features in a normal way. We always know to look to the constructor to identify all incoming dependencies. We can construct classes outside of DI frameworks, and programmers that may not understand the DI workflow yet can comprehend how individual units in the whole work without additional knowledge.\n\nSo constructor injection:\n\n - Leverages built-in language features.\n - Allows the freedom of constructing classes in many different ways\n   - Makes it easier to move to a new DI framework (rewriting imports or swapping annotations is a lot simpler than adding in non-existent class features)\n   - Use DI without a DI framework even!\n - Provides a ""one stop shop"" for identifying the dependencies of specific unit of the system.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Field injection is fine, convince me otherwise', 'CommentAuthor': 'foreveratom', 'Comment': 'You are tying your code to requiring an injection provider, be it Spring or else. It\n also makes unit tests dependent on injecting mocks and generally harder to make them real unit tests with no dependency on any framework.\n\nAlso not everything should be injected so you will have to have proper constructors for some objects anyway which makes your code inconsistent with a field injection approach. \n\nAll in all as convenient it seems to be, field injection is a shortcut with too many trade offs. Not worth it. Listen to your peers.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Field injection is fine, convince me otherwise', 'CommentAuthor': 'DeployOnFriday', 'Comment': '\\> What am I missing?\n\nI will ask only one question. How do you write tests?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Field injection is fine, convince me otherwise', 'CommentAuthor': 'Slanec', 'Comment': ""Having a constructor makes it clear which fields are a required dependency and which are optional and/or derived or even mutable. This is actually not such a problem in practice with services and modern development.\n\n~~However, it does have a consequence. At least with Spring DI, dependencies for constructors~~ *~~must~~* ~~be found or else the startup fails. Field injection is different, a missing dependency will be injected as null (or not injected at all as field dependencies behave like non-required) and will fail at runtime when first used. Not good!~~\n\nEdit: Apparently actually not true. I'm not sure what I mixed this up with.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Field injection is fine, convince me otherwise', 'CommentAuthor': 'RadiantAbility8854', 'Comment': ""I don't like this approach because the field remains non-private, and non-final while it could. Sometimes in tests you want to construct object manually passing it a specifically mocked dependency.\n\nBesides, if you use lombok there is not that much code:\n\n        @AllArgsConstructor\n        class MyService {\n            private final MyDependency1 myDependency1;\n            private final MyDependency2 myDependency2;\n        }\n\nEven without lombok generating constructor via IDE is few clicks.\n\nBut whatever, it's just a preference. What really matters is consistency. Agree with your team to use only one way across the whole project and you're good.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Field injection is fine, convince me otherwise', 'CommentAuthor': 'RebbitUzer', 'Comment': ""Assume you have constructor injection: when number of constructor args became big (e.g. > 7), then it might be an indication that your class became bloated with too many different functionality and it's time for a refactoring and splitting it up into smaller classes.\nOn some of the projects I've worked on in the past, I've seen classes with 20-30 Autowired fields...""}, {'Subreddit': 'Java', 'Reddit_Title': 'Field injection is fine, convince me otherwise', 'CommentAuthor': 'epegar', 'Comment': ""- writing unit tests gets easier. You don't need to use the real framework (e.g. spring) and you don't need to use mocks. Anyway, I think this reason was more powerful in the past as it gets easier and easier to write tests, since the tools are evolving.\n- you write immutable objects\n- you can use @configurarion classes on spring\n\nThere might be more that I'm missing, but before we discuss how important these are. Is there any benefit at all on using field injection?""}, {'Subreddit': 'Java', 'Reddit_Title': 'Field injection is fine, convince me otherwise', 'CommentAuthor': 'None', 'Comment': 'Constructor/setter injection makes the class work independent of the injection framework. This makes it easier to mock and test. Constructor injection also allows the fields to be final, which IMO always leads to more stability in a codebase.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Field injection is fine, convince me otherwise', 'CommentAuthor': 'idemockle', 'Comment': ""I actually agree with you. In the strictest sense, it is better for fields to be final. In actuality, no one will be reassigning fields on a service layer class, and anyway injected objects *can* be kept private and be effectively unit tested. What I have seen inexperienced devs do is mutate injected singleton objects within the same class, and constructor injection doesn't protect against that. Unit testing field injection is easily done with Mockito, which is a standard, high quality testing library.\n\nThere's a lot of hemming and hawing about this topic, but like you I haven't seen a convincing argument yet, in years of occasional searches on the topic. Keeping fields final is the closest, but to me, not doing that doesn't pose a real-world risk unless you are providing your code as a library to an external client.\n\nLook, there is no doubt constructor injection is *better*, but field injection is not *bad*. There are some edge cases where constructor injection is necessary over field injection, and the opposite is never true. Constructor injection is, strictly speaking, safer. So when in doubt, do the better thing. But in my opinion (for whatever it's worth), yes you're right, field injection is fine.\n\nThat said, if your work has a policy or convention to use constructor injection, it is better to follow that convention.""}]"
Java,Any open source projects in java to help?,https://www.reddit.com/r/java/comments/165qdej/any_open_source_projects_in_java_to_help/,13,14,moyz10,1693428707.0," Hi, I'm a Java developer with two years of experience and I want to help in some open source projects. Are there any Java open-source project wanting for help?","[{'Subreddit': 'Java', 'Reddit_Title': 'Any open source projects in java to help?', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Any open source projects in java to help?', 'CommentAuthor': 'gaelfr38', 'Comment': 'Tip: contribute to a project you use, or a project you plan to use.\n\nOtherwise motivation will quickly go away.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any open source projects in java to help?', 'CommentAuthor': 'rhefley', 'Comment': 'https://github.com/topics/java'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any open source projects in java to help?', 'CommentAuthor': 'sfroberg38', 'Comment': 'Short answer yes. If nothing else, look at some Jenkins plugins and see if anything interests you'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any open source projects in java to help?', 'CommentAuthor': 'ggleblanc2', 'Comment': 'Search GitHub and see if there are any Java projects that interest you.  You can also create your own open source GitHub projects.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any open source projects in java to help?', 'CommentAuthor': 'Deep_Age4643', 'Comment': 'Sure, but it all depends on what your interests and skills are.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any open source projects in java to help?', 'CommentAuthor': 'SriramTech', 'Comment': 'Can you tell how to host the java project on the web? At free at cost?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any open source projects in java to help?', 'CommentAuthor': 'tokenizable', 'Comment': ""Just comb through github / gitlab repos. many projects have information whether they look for developers. That way you can also get a glimpse of what it is about you'll be working on. That's important, too.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Any open source projects in java to help?', 'CommentAuthor': 'chuducanhnt', 'Comment': 'I think it depend on what do you do in company.\nIt is good if you use it in your company and figure out the  bug or interesting feature. \nI mean you can have many opportunities to improve it intead go around and say any can help. You will solve your problem by yourself.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any open source projects in java to help?', 'CommentAuthor': 'HuanXiangXR21', 'Comment': 'Is there anyone interested in creating a library for Json facade patterns, similar to slf4jÔºü\nlike this Ôºöhttps://github.com/bes2008/easyjson'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any open source projects in java to help?', 'CommentAuthor': 'dev8840', 'Comment': 'There are a lot of projects that needs help from the community. In my opinion you can search in GitHub for the java projects with only one contributor,  with many issues. Try to fork the project and resolve first the issues before beginning new features.'}]"
Java,"Beta of minimalist web framework, open for review, now published to Maven central",https://www.reddit.com/r/java/comments/15y3bwk/beta_of_minimalist_web_framework_open_for_review/,26,21,byronka,1692704546.0,"My minimalist Java web framework, Minum, is now available on Maven central

[https://github.com/byronka/minum](https://github.com/byronka/minum)

The driving goal has been achieving characteristics of plainness, frugality, performance, maintainability, testability, and ease of use. It has zero dependencies other than Java's SDK, yet provides a web server, routing, authentication, testing, logging, templating, HTML parsing, and a database, in 3800 lines of code, compiling to a 150k binary.

It currently supports a production web application. There are example projects demonstrating its use linked in the documentation. 

I'd like any feedback I can get.","[{'Subreddit': 'Java', 'Reddit_Title': 'Beta of minimalist web framework, open for review, now published to Maven central', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Beta of minimalist web framework, open for review, now published to Maven central', 'CommentAuthor': 'repeating_bears', 'Comment': 'The fact you\'ve rolled your own logging is off-putting. It would be yet another thing I have to work around to get it to play nice with the rest of my app\'s logging. Would much prefer if you just used slf4j. Or at least provide a bridge, maybe as a separate dependency.\n\nFullSystem is a strange class name. It\'s not very descriptive - a system \\*to do what\\*? And it\'s not accurate, because it\'s not in and of itself a \\*full\\* system. I\'d call it HttpServer, MinumServer, something like that.\n\nLikewise, TheBrig, I don\'t personally like comedy class names. Non-native English speakers might be totally lost with this.\n\nWhen skimming, I didn\'t see any classes which were declared final. I make classes final by default, unless I specifically intend them to be overridable. Lack of \'final\' acts as the indicator ""you can safely override this"". I\'d consider locking down inheritance much more than you are. Guardrails to prevent people from screwing themselves over is one sign of a good framework.\n\nThe javadocs look quite thorough which is good. Spotted one typo though: ""It\'s got two fields, key and substring, and ."" IntelliJ\'s inspections can find grammatical mistakes like that.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Beta of minimalist web framework, open for review, now published to Maven central', 'CommentAuthor': 'nutrecht', 'Comment': '> I\'d like any feedback I can get.\n\nI am going to be pretty blunt here, mainly because this seems to not be just a hobby project but something you actually want to *deploy* at your clients.\n\nThere is a *lot* of stuff in your writing that makes my spider sense tingle, but this one stands out:\n\nhttps://github.com/byronka/minum/blob/master/docs/development_handbook.md#database\n\nOne of the hardest problems to solve are data consistency problems. Whenever I see a developer kinda pretend these problems don\'t exist and pretty much advocate for their own hand-rolled \'databases\' that\'s incredibly concerning. \n\nDevelopers who have this ""not invented here"" mentality tend to do a *ton* of damage to companies, and typically then just leave for others to clean up the mess they made.\n\nAside from these larger issues, overall the framework is so \'minimalistic\' that you just have to write way more code to get to the same result compared to other frameworks. I mentioned this in your previous post to. So, what is the goal here? It\'s going to be an impossible sell even on that part alone. We\'re not paid per line of code after all. And doing al that plumbing is boring.\n\nI know it feels like I\'m attacking the person here, but I am sharing this with you because I hope that one day you might understand why some developers respond in a rather hostile fashion to the implementations you propose here; it\'s because what you\'re doing is frankly just damaging. And again; you\'re saying you plan to use this in production.\n\nI understand this is really not what you want to hear, but I feel it\'s important that this is said to you.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Beta of minimalist web framework, open for review, now published to Maven central', 'CommentAuthor': 'agentoutlier', 'Comment': ""The following is mostly opinion.\n\nI'm a huge fan of minimum deps but I'm not a fan of another framework.\n\nWe need more frugal libraries and not more frameworks. Libraries that do one and only one thing really well. Ideally with zero dependency. \n\nThe ideal method is to pick and choose the best of breed. Picking only what you need which relies on great modularity and design of other libraries. Dependency management as technical debt these days with things like dependabot is a really shitty argument to start writing your own implementation of stuff that you have zero domain knowledge of.\n\nLike please don't write another JSON engine unless you do lots of research on it.\n\nFor example I am a template engine author. Your template engine arguments are [extremely disingenuous](https://github.com/byronka/minum/blob/master/docs/perf_data/templateRenderTest.md) and borderline not safe (your escaping is incorrect). **String interpolation is not templating** (which btw in a month or two you can rip that out code out anyway with JEP 430).  You need looping and conditions at the minimum. BTW my templating engine has like a -1 dependency mode: https://jstach.io/doc/jstachio/current/apidocs/#code_generation_mode\n\n(that is it will generate code that has only references to java.base and not even to jstachio which btw you can use that idea for minum and make it truly dependency free)\n\n\n\n\nThe problem is to do most things correctly does indeed require more code.\n\nWhat I think you are going to find IF people pick up your library is that its going to start getting more feature requests and slowly you will find minum is no longer minimum.\n\nNow if this is just an educational experimental thing then disregard the above.\n\nOtherwise I'm not sure why I would not just roll my own minum and someways I have in my own company but I still use libraries for non glue code shit. You know like proper databases, proper templating, etc. And when I feel like NIH mode I go and at least look at other implementations to make sure I'm doing things in a sound manner.\n\nSome things I would improve on the project regardless are:\n\n\n * Modules - albeit is such a small codebase it is better to start now instead of rats nest later even if its just one class in a module\n * Code coverage is mostly bull shit IMO. Mutation testing on the other hand is way more convincing.\n * Code analysis like null analysis, error prone, etc\n\nThat being said I like the idea of trying to go more minimum but I like correct and thorough as well. An example of going the minimum I like is u/renatoathaydes libraries like:\n\nhttps://github.com/renatoathaydes/rawhttp\n\n\n\n*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Beta of minimalist web framework, open for review, now published to Maven central', 'CommentAuthor': 'meowboiio', 'Comment': ""It looks so clear and neat. I'd like to use it.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Beta of minimalist web framework, open for review, now published to Maven central', 'CommentAuthor': 'Distinct_Meringue_76', 'Comment': 'Very good documentation. Is there any benchmark against competing solutions?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Beta of minimalist web framework, open for review, now published to Maven central', 'CommentAuthor': 'mohmf', 'Comment': ""Great work. I'm wondering how much the effort was to adopt TDD in the project. I always like the idea of TDD but just can't imagine how to fit it in my flow since I always start thinking about how to write the main logic instead of starting to think about the tests.\nI would appreciate it if you recommend a resource for TDD in java that you personally find it useful for you.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Beta of minimalist web framework, open for review, now published to Maven central', 'CommentAuthor': 'henk53', 'Comment': 'How does this compare to Micro? (https://github.com/florinpatrascu/micro)'}, {'Subreddit': 'Java', 'Reddit_Title': 'Beta of minimalist web framework, open for review, now published to Maven central', 'CommentAuthor': 'TenYearsOfLurking', 'Comment': ""ugh, I agree, except the point with final.\n\nIt's kind of presumptuous to me of a framework developer to know exactly which classes are overridable and which are not. for sealed hierarchies / data classes e.g. its perfectly fine, but for a typical class containing framework logic, there might be needs to override which the framework author does not see coming.\n\nbut then again, I do not consider myself a big brain developer...""}, {'Subreddit': 'Java', 'Reddit_Title': 'Beta of minimalist web framework, open for review, now published to Maven central', 'CommentAuthor': 'bowbahdoe', 'Comment': 'Or System.Logger if you want to stick with no dependencies - thats fine.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Beta of minimalist web framework, open for review, now published to Maven central', 'CommentAuthor': 'byronka', 'Comment': 'I appreciate you sharing your ideas with me.'}]"
Java,Quarkus vs Micronaut,https://www.reddit.com/r/java/comments/15wf0a0/quarkus_vs_micronaut/,78,74,za3faran_tea,1692546889.0,"We're evaluating starting a new project in Java, with hopefully more projects in the future if I'm able to make a good impression in Java. The main language currently used is Python (sigh).

I've been evaluating both Quarkus and Micronaut. I'd love to hear other people's experiences. I searched this subreddit for previous posts, but given the pace at which both of these are evolving, the information gets outdated fairly quickly.

It seems that Quarkus has a bigger community, and is more active (e.g. looking [here](https://github.com/quarkusio/quarkus/graphs/commit-activity) and [here](https://github.com/quarkusio/quarkus/graphs/contributors), compared to Micronaut [here](https://github.com/micronaut-projects/micronaut-core/graphs/commit-activity) and [here](https://github.com/micronaut-projects/micronaut-core/graphs/contributors). /r/quarkus also seems more active than /r/micronaut, and Stack Overflow has more questions tagged with Quarkus.

We're using Kubernetes, and native is not really a relevant consideration at this point. What I care about is stability, good documentation, developer experience, and longevity of the framework going forward.

Most people on the team who have a Java background came from companies that had their own internal frameworks, so Spring vs Java EE background isn't really a consideration.

Edit: as to why not Spring Boot, I elaborated somewhat in a reply [here](https://www.reddit.com/r/java/comments/15wf0a0/quarkus_vs_micronaut/jx1zvlz/).

Thanks!","[{'Subreddit': 'Java', 'Reddit_Title': 'Quarkus vs Micronaut', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Quarkus vs Micronaut', 'CommentAuthor': 'Top_Engineering_4191', 'Comment': ""I have been using Quarkus for almost three years, it's great. There are lots of extensions, with great documentation.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Quarkus vs Micronaut', 'CommentAuthor': 'redikarus99', 'Comment': 'At my former company our guys used Quarks and loved it a lot exactly because of what others commented: good examples, good performance, works as expected.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Quarkus vs Micronaut', 'CommentAuthor': 'fix_dis', 'Comment': 'Around end of 2019/beginning of 2020, I had projects in both frameworks. I like them both quite a bit. For the past couple of years though, every spike/POC I do is in Quarkus. It just had a bit of more refinement. Specifically, the testing stuff was dead simple with @QuarkusTest annotations. Unfortunately it‚Äôs now been a couple of years since I‚Äôve touched Micronaut, so they could have fixed all my little nitpicks (some of which were related to using Kotlin). I just love Quarkus‚Äô dev story, I write code and either run tests or refresh a browser tab/postman request and it recompiles. It feels snappy.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Quarkus vs Micronaut', 'CommentAuthor': 'mvniekerk', 'Comment': 'Found Quarkus to be a delight.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Quarkus vs Micronaut', 'CommentAuthor': 'faxity', 'Comment': ""My team has been migrating java EE on Oracle Weblogic to Quarkus and it has been a joy. (No native)\n\nThe fast start and hot reload are certainly nice, but don't expect it to stay near seconds. Stuff like OIDC/flyway/cxf(soap üôÅ) or any other non-quarkus extension framework like process flow engines that need stuff to start quickly delay all that. It's still really fast though, just don't expect the 2s from your demo projects. Especially on kubernetes when you give it low CPU.\n\nWhat has been amazingly positive is their support in case of issues. We had a OIDC bug with our OIDC provider ADFS and by the next day of contacting them on zulip they gave us a workaround and within a couple weeks they had a fix in their latest Quarkus release. Mind was blown.\n\nQuarkus DB interaction with jpa is nowhere near the level of spring data though. But the upcoming hibernate version is looking promising in lessening this gap. Quarkus panache promoting active record pattern and me discovering it through them has been a big +++ as well.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Quarkus vs Micronaut', 'CommentAuthor': 'BadMoonRosin', 'Comment': 'Personally, I think it\'s kinda weird to pilot a new programming language in a shop, and _immediately_ go for a smaller niche framework.  Talk about playing the game on hard mode!\n\nYou\'re going to have a learning curve, you\'re going to have haters who prefer the incumbent stack and want to see you fail, you\'re going to have indifferent-at-best DevOps and business management, and other challenges galore.  What are you doing here?  Just use Spring or _maybe_ Java EE.\n\nYou say that your main criteria are stability, documentation, developer community, likelihood of the framework surviving into the future, etc.  That\'s Spring.  Checkbox, checkbox, check check check.  It is absolutely bizarre that Spring and Java EE aren\'t considerations, ""because devs here with Java experience were using homegrown frameworks"".  Not only does that make zero sense, but it doesn\'t explain why Quarkus and Micronaut ARE considerations.\n\nHonestly, it sounds like a manager decided to give you a project outside the critical path to make you happy, and you\'re just kind of farting around with it for fun.\n\nAt any rate, the differences boil down to this:\n\n* **Micronaut**: Basically Spring for people who want to try something different, and/or have a better story for compiling to native executable with GraalVM.\n\n* **Quarkus**:  Basically Java EE for people who want to try something different, and/or have a better story for compiling to native executable with GraalVM.\n\nIt really does boil down to that.  If you\'re not going to compile to native with GraalVM, then you\'re missing out on the biggest reason to consider either of these two frameworks in the first place.  Apart from that, you\'re getting something that tries to look at similar as possible to Spring or Java EE, but lacks the ecosystem and StackOverflow community support of either.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Quarkus vs Micronaut', 'CommentAuthor': 'Mimon_Baraka', 'Comment': 'I have no experience with micronaut, but we use quarkus in an openshift environment for several years now and I am very happy with it. We also use Spring Boot in other projects and I definitely prefer quarkus over it'}, {'Subreddit': 'Java', 'Reddit_Title': 'Quarkus vs Micronaut', 'CommentAuthor': 'stefanos-ak', 'Comment': 'Micronaut in production for 2 years now. Very happy with it. \n\nv4 just came out, with support for virtual threads. Haven\'t used it yet but looking forward to it. \n\nWe also did some research back then, and have since kept an eye out, between Micronaut and Quarkus. \n\nThere were 2 things in favor of Micronaut back then, and still are: (depending on where you come from) \n\n1) it was so much easier to do things, as engineers coming from the Spring world. With Quarkus we struggled a lot, because it heavily relies on the JavaEE spec (now Jakarta). I\'m sure for someone coming with JavaEE experience, then Quarkus would be easier for them. \n\n2) Documentation of Quarkus was infinitely worse, to the point where they actually deleted it from existence, and now they are offering only ""guides"" (blog style separate articles for how to do different things). \n\ni believe that other more technical details don\'t matter much, assuming a capable team. You can do anything with both.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Quarkus vs Micronaut', 'CommentAuthor': 'PabloEscoba', 'Comment': 'Quarkus for the win'}, {'Subreddit': 'Java', 'Reddit_Title': 'Quarkus vs Micronaut', 'CommentAuthor': 'backendanonJava', 'Comment': ""\\> Most people on the team who have a Java background came from companies that had their own internal frameworks, so Spring vs Java EE background isn't really a consideration.\n\nThat's highly unusual. Spring based has been the standard and Spring Boot, is the standard for web projects today and the probably next 20 years in the Java world.""}]"
Java,The most modern way to manage the database with Java,https://www.reddit.com/r/java/comments/15um7al/the_most_modern_way_to_manage_the_database_with/,37,62,nikitades,1692369160.0,"Let's agree that to manage the database means to  
\- store and apply migrations to control versions of the database

\- to generate migrations AUTOMATICALLY based on the diffs between classes and real DB schema (JpaBuddy does not count)

\- to be feasible to install and use at CI/CD envs

&#x200B;

The known to me ways are:

\- Flyway + jakarta's create-source: jakarta.persistence.schema-generation.create-source: metadata (generates simple migration scripts that you can use later in whatever way you wish, let's say with Flyway)

\- Liquibase hibernate plugin (lets you build diffs between hibernate schemas and changelogs, but I failed to run in a proper way so I doubt about it, also too few reliable examples)

&#x200B;

&#x200B;

What am I missing? Are there new cool replacements for Hibernate that still let you use some sort of automation at the time of querying? New migration management engines besides flyway and liquibase with the comprehensible examples of spring 3 + gradle kotlinscript?

&#x200B;

How do YOU create and apply migrations at your projects? Do you write migration scripts manually or do you delegate it to some kind of software?","[{'Subreddit': 'Java', 'Reddit_Title': 'The most modern way to manage the database with Java', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'The most modern way to manage the database with Java', 'CommentAuthor': 'Worth_Trust_3825', 'Comment': ""> to generate migrations AUTOMATICALLY based on the diffs between classes and real DB schema (JpaBuddy does not count)\n\nNo. Please don't. Take care of your database schema.""}, {'Subreddit': 'Java', 'Reddit_Title': 'The most modern way to manage the database with Java', 'CommentAuthor': 'rzwitserloot', 'Comment': '> to generate migrations AUTOMATICALLY based on the diffs between classes and real DB schema (JpaBuddy does not count)\n\nThere\'s your problem. __This is not possible__.\n\nThe \'schema definition and migration language\' is simply insufficient. The \'language\', here, is the notion of \'you take a bunch of java source files defining some POJOs; the \'language\' that defines migrations is by taking the delta between whatever the POJOs looked like the last time you checked the DB definitions and whatever they look now\'. _Even if_ you allow festooning the crud out of those POJOs with annotations.\n\nFor example, trivially, imagine you start off with:\n\n```\npublic class Person {\n  String name;\n  String street;\n  int housenumber;\n  String city;\n  int zipCode;\n  State state;\n}\n```\n\nAnd later on you realize that this is way too US-centric, and instead you decide to adopt the international postal standard, and just replace the whole kit-n-kaboodle with:\n\n```\npublic class Person {\n  String name;\n  String addressLine1;\n  String addressLine2;\n  String city;\n  String country;\n}\n```\n\nYour migration is now quite complicated; it would involve concatening \'street\', \'housenumber\', \'zipCode\' and \'state\' is various ways and defaulting \'country\' to USA for the existing entries even if you don\'t want that to be the default value of the `country` column when INSERTing data (you want failure to explicitly specify `country` when inserting to be an error, because nowadays your site is worldwide and the only thing \'default to USA\' is going to do, is cause a boatload of lossage as things are shipped to the wrong place if some programmer forgets to add a \'country\' dropdown to the order form).\n\nTrying to convey these things is, basically, shit. But let\'s try it:\n\n```\npublic class Person {\n  String name;\n  @Migrate(""CONCAT(\\""houseNumber\\"", \' \', \\""street\\"")"")\n  String addressLine1;\n  @Migrate(""CONCAT(\\""city\\"", \', \', \\""state\\"", \' \', \\""zipCode\\"")"")\n  String addressLine2;\n  String country;\n}\n```\n\nExcept this isn\'t going to work: Sure, in theory something like this can work when upgrading from \'the version that did not have addressLine1 and addressLine2\' to this version. But what do you do with these annotations for the migration after it? Remove them again? Version migrations themselves? (Stick an annotation `@Version` on Person or some such)?\n\nNone of this works. We get to a few \'primitives\' when talking about sensible migration schemes:\n\n* Migrations are a step-based concept. You don\'t want to skip steps: If version B (relative to A) adds a column, and version C (relative to B) renames that column, you really want any db migration that goes from A straight to C to follow the exact same steps (add it, then rename it). You don\'t want shortcutting (where the new column is added, springing into existence with the new name immediately). Not every migration step is quite idempotent/replaceable like that. It\'s annoying if the exact structure of a DB is slightly different in usually irrelevant ways (i.e. in exotic cases, _relevant_) depending which version(s) actually ran the migration framework. You definitely don\'t want any notion where a migration cannot work unless every migratory step is taken one at a time (i.e. if some stale node misses a version update, that it is perennially out of the loop and cannot be migrated at all except by hand).\n* That therefore means every step needs to remain accessible to the runtime framework that takes care of DB migrations. Unless you want to integrate flyway with git so it can apply each version off of `main` branch or something similarly nuts, that means the notion of ""I write some POJOs. These form my DB tables. I expect migrations to just happen automatically"" is __not possible__.\n* Preferably, each migratory step stands on its own and/or is fully reversible and is separately tracked. After all, sometimes they fail, you don\'t want things to end up half-baked in between migrations without any way for the software to move forward without an admin manually fixing things.\n* It sounds stupid to go through 300 migratory steps when setting up the db from scratch, but a massive sequence of ALTER TABLE ops on a completely empty database are near instananeous. It\'s what you want. Yes, even if the project is over a decade old, a reinit of the DB should just set things up the way they were 10 years ago and they apply every migration step one step at a time.\n* The granularity of a migration is the entire database. Not a table. For example, perhaps you \'split\' one table into two, with a 1v1 or 1vMany relationship between them. The \'migration\' of table A which loses 4 columns (e.g. `ALTER TABLE DROP COLUMN ...`, four times) and the \'creation-by-migration\' of table B are one atomic thing; unless both steps are completed (and in the right order - make B first, _then_ drop the columns on A), the DB is not in a state that the software should ever even connect to that database. This isn\'t compatible with \'I have (optionally annotation-decorated) POJOs; please just make migration happen for free\' either.\n\nI\'ve given up on all the tools I found and wrote my own system, where I define the DB structures I want in a java source file that can only grow (and \'running it\', you get an exception immediately, i.e. on your dev machine already, and certainly during tests, if you break that rule), and that generates _both_ the SQL _and_ the model classes. I already maintain project lombok, I don\'t currently have the free time to release and support it the way a FOSS project should be, unfortunately.'}, {'Subreddit': 'Java', 'Reddit_Title': 'The most modern way to manage the database with Java', 'CommentAuthor': 'thatsIch', 'Comment': 'Synchronizing the database schema and your data model is one of the smallest problems. In some cases, it is also not advised to automatically generate your model for example when backwards compability is required - needed for rolling updates and rollbacks.\n\nData transformation, data separation, etc. are more common in our workflow.'}, {'Subreddit': 'Java', 'Reddit_Title': 'The most modern way to manage the database with Java', 'CommentAuthor': 'NoHopeNoLifeJustPain', 'Comment': ""Used flyway and liquibase, no problem with neither, flyway is (was, before redgate acquisition? We'll see next new project) my first choice""}, {'Subreddit': 'Java', 'Reddit_Title': 'The most modern way to manage the database with Java', 'CommentAuthor': 'agathver', 'Comment': 'Flyway with hibernate set to validate mode during integration testing. Makes sure migrations are up-to-date with JPA changes'}, {'Subreddit': 'Java', 'Reddit_Title': 'The most modern way to manage the database with Java', 'CommentAuthor': 'laghani', 'Comment': 'what problems did you have with liquibase?'}, {'Subreddit': 'Java', 'Reddit_Title': 'The most modern way to manage the database with Java', 'CommentAuthor': 'DeployOnFriday', 'Comment': 'I‚Äôve been using liquibase for years, various products environments. No issues, no need to replace it to anything else.'}, {'Subreddit': 'Java', 'Reddit_Title': 'The most modern way to manage the database with Java', 'CommentAuthor': 'bowbahdoe', 'Comment': 'Adding on to flyway + liquibase, there is a smaller tool ""migratus"" in the clojure ecosystem.  \n\n\nAt least if you are using postgres, that could be more than enough for you. [https://github.com/leafclick/pgmig](https://github.com/leafclick/pgmig)  \n\n\n(The tool itself is not postgres specific, but someone made a graalvm exe with a postgres focus)'}, {'Subreddit': 'Java', 'Reddit_Title': 'The most modern way to manage the database with Java', 'CommentAuthor': 'angrynoah', 'Comment': ""> Let's agree that to manage the database means to...\n\nDefinitely do not agree.\n\nIt is important to _decouple_ the management of your database from your application, because your application does not own the database. The database is not a component of your application (unless: embedded SQLite or similar) it is a _service_ that you consume, with its own structure and lifecycle. That service invariably has other consumers / stakeholders.\n\nWhatever software you choose to manage migrations is not even 1% as important as recognizing the above.""}, {'Subreddit': 'Java', 'Reddit_Title': 'The most modern way to manage the database with Java', 'CommentAuthor': 'GuyWithLag', 'Comment': "">generate migrations AUTOMATICALLY based on the diffs between classes and real DB schema\n\nFUCK NO.\n\nThe only way that's going to be a valid sentence that won't get my blood boiling is if you mean to generate the POJOs based on the database schema.""}]"
Java,Quarkus Native vs Go for microservices?,https://www.reddit.com/r/java/comments/15njybk/quarkus_native_vs_go_for_microservices/,79,95,WorldTraveller101,1691691345.0,"Our team is currently working on a very big and complex Spring Boot project, and the opinionated nature of Spring Boot makes us write business logic very quickly without worrying about boilerplate code.

Now, we are tasked of writing small microservices, and the chief architect is forcing us to use Go because is ''simple'', ''cloud native'', ''light on resources'', blah blah. I have seen other teams' Go projects, most of those are badly written without following any design principles, full of boilerplate and re-inventing the wheel for even for small tasks.

Since our team is highly skilled in Java and ''automagic'' frameworks, we would be very productive in lightweight (with graalvm) Java framework like Quarkus and Micronaut, than to struggle with Go. Quarkus binaries build using GraalVM can match low system requirements like Go.

My question is, how can I convince our chief architect to let us use Quarkus?","[{'Subreddit': 'Java', 'Reddit_Title': 'Quarkus Native vs Go for microservices?', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Quarkus Native vs Go for microservices?', 'CommentAuthor': 'plokman', 'Comment': 'This screams ""wants to play with different tech"", or ""wants go on resume"". The tech itself was likely irrelevant to the decision being made. Your entire team and product will suffer as the ecosystem is the hard part.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Quarkus Native vs Go for microservices?', 'CommentAuthor': 'guitcastro', 'Comment': ""I am using Quarkus native in production. It''s take time to configure native-image, every library that you add that it''s not a quarkus extension might break the build.\n\nWe are still using because it''s really neat to have a 30mb image with 50MB ram and 1sec startup time, but you WILL spent time to get this.\n\nWe also have a very extensive integration test suit (quarkus helps a lot with it), to handle [graalvm native agent tracing](https://www.graalvm.org/dev/reference-manual/native-image/metadata/AutomaticMetadataCollection/#tracing-agent).  If your team is not mature enough, things will break.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Quarkus Native vs Go for microservices?', 'CommentAuthor': 'EmiyaKiritsuguSavior', 'Comment': ""I always thought you should adjust tools to skillset sof your team but  I guess I'm wrong on this one...\n\nTime is money  and forcing team to use unfamiliar language and environment will result only in slower(and more expensive) development process with lower quality codebase and more bugs.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Quarkus Native vs Go for microservices?', 'CommentAuthor': 'wildjokers', 'Comment': 'With a team full of java developers the architect decided on Go? WTF?\n\nThat architect doesn‚Äôt know what they are doing.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Quarkus Native vs Go for microservices?', 'CommentAuthor': 'roiroi1010', 'Comment': 'I‚Äôve had to deal with architects that built Nodejs apps because they were so performant. Now no one dares to touch that piece of annoying code.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Quarkus Native vs Go for microservices?', 'CommentAuthor': 'john16384', 'Comment': ""You may want to talk this over with the people paying the bills. It's insanity to force a team to use a language they're unfamiliar with for gains that in the grand scheme of things cost pennies.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Quarkus Native vs Go for microservices?', 'CommentAuthor': 'senseven', 'Comment': 'What is the offset of using anything that the team is not accommodated with, to save unspecified resources to reach an lofty goal. If you save 200$ on a 10k monthly bill, spending 10.000s to retrain people to get there makes me uncomfortable. Lots of companies coming from a strong .net background do 100% cloud in C#. There is no need to change anything ""for cloud"".\n\nI would base such an decision on easy of handling first and roi second. Avoid politics.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Quarkus Native vs Go for microservices?', 'CommentAuthor': 'mobiliakas1', 'Comment': ""It's not you. For me that person would not qualify as an architect because they can't actually explain why such decision is being made. I've worked with incompetent architect before. Turns out everybody knew about it, but nobody could do anything, because he was a friend of some C level person. I suggest finding an opportunity to talk to some higher ups about this or just give an honest estimate to the PM that it would take you a long time to get up to speed with new programming language OR you can do it old way x times faster. Then you will probably have PM on your side.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Quarkus Native vs Go for microservices?', 'CommentAuthor': 'r_hubner', 'Comment': ""The question is what is a small microservice. If you spend 10 days of development in java and 30 in GO, It's not worth the money savings on servers. Also you need to think about support, deployment, logging, auditing, .... You already have all these tools for Java. \n\nYou mentioned your team works really well in spring boot. Do it in spring boot. You know it, it will be fast and easy to support in production. You have all the knowledge in the team. If one person goes on holiday, somebody else can do support. \n\nIf it's still too big, look for other frameworks like you mentioned. But stay in Java(JVM). Spring boot doesn't support GrallVM, don't worry, if you write it right, it will be enough for small microservice.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Quarkus Native vs Go for microservices?', 'CommentAuthor': 'marcvsHR', 'Comment': 'How programming language can be cloud native is beyond me.'}]"
Java,Used to be a Java hater but I'm enjoying the language now,https://www.reddit.com/r/java/comments/15bmimh/used_to_be_a_java_hater_but_im_enjoying_the/,236,192,SpaciousCoder78,1690516236.0,"Java was one of the first languages that i tried to learn on my own when i was like 12 but I couldn't get past the initial hello world program because I always ran into some errors. 

I couldn't do my first hello world program using java and that kind of demotivated me and pulled me away from programming and i developed a dislike towards Java.

I haven't touched Java after that. I always used to hate on it ever since then. 

I started learning python at school and it was very easy when compared to Java and it got me into the world of programming.

After learning python, my hate for java fortified even more because it was the language that made me miss the world of programming in my early teens. 

Had i learnt python instead, i could've been into programming at an earlier stage.

I learnt python in 2020 and then i did a few series of projects and that made me realise that I have a passion for programming. 

Fast forward to 2023, i had to take a gap year after my high school and i had a lot of free time so i decided to give Java another try and this time it clicked very well.

The syntax felt verbose at first but i got used to it really quick.

Made a few projects using java swing, something that wasn't so accessible in other languages.

I started using intellij idea and it's one of my favourite ides now. 

Packaging my java apps and distributing them felt very easy because of jar files. I didn't have to install any separate dependencies while distributing the apps, all I needed was to compile the jar files along with my java code.

It made it very simple.

Not only that but I love the write once run anywhere feature. 

It just feels so convenient because I don't have to compile my app for each operating system. 

Since java forces classes, I got used to them and now I'm using object oriented programming wherever possible in other languages.

Slowly, my hate for java turned into love and I'm enjoying it a lot now.","[{'Subreddit': 'Java', 'Reddit_Title': ""Used to be a Java hater but I'm enjoying the language now"", 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': ""Used to be a Java hater but I'm enjoying the language now"", 'CommentAuthor': 'sadafxd', 'Comment': 'So you started to hate Java because it was hard for you to do hello world when you were 12? Average java hater'}, {'Subreddit': 'Java', 'Reddit_Title': ""Used to be a Java hater but I'm enjoying the language now"", 'CommentAuthor': 'Spare-Plum', 'Comment': 'the gamechanger for me was maven. Importing whatever library you want quickly and being able to package up your own projects too is huge.'}, {'Subreddit': 'Java', 'Reddit_Title': ""Used to be a Java hater but I'm enjoying the language now"", 'CommentAuthor': 'i_wear_green_pants', 'Comment': ""Java is great all arounder imo. It's quite easy to set up and running. It has mature libraries. All build pipelines are easy to set up. And Maven and Gradle are great project management frameworks.\n\nThere are languages that do some things better on specific fields. But overall Java is one of the best languages out there.""}, {'Subreddit': 'Java', 'Reddit_Title': ""Used to be a Java hater but I'm enjoying the language now"", 'CommentAuthor': 'nonFungibleHuman', 'Comment': 'Gamechanger for me was IntelliJ. God, I think I hated eclipse, not Java.'}, {'Subreddit': 'Java', 'Reddit_Title': ""Used to be a Java hater but I'm enjoying the language now"", 'CommentAuthor': 'domdiedom', 'Comment': 'I like Java at home but I dislike it at work.'}, {'Subreddit': 'Java', 'Reddit_Title': ""Used to be a Java hater but I'm enjoying the language now"", 'CommentAuthor': 'za3faran_tea', 'Comment': ""You'll like it even more when you use it in large programs. It has many cool features that actually make it scalable to large code bases, unlike some other languages (like one out of google) that only claim to do so, and actual experience shows otherwise.\n\nI mean, what's not to like. You have:\n\n* an extremely solid, mature, and performant platform (the JVM)\n* records\n* switch expressions\n* pattern matching and deconstruction\n* virtual threads with structured concurrency\n* second to none observability and monitoring\n* world class, mature IDEs\n* very rich standard library\n* industry strength linters and static analyzers\n* multiple GCs to choose from based on your use case\n* and more cool things coming like string templates and value types\n\nHaving worked with that language out of google, and python on medium and large code bases, thanks but no thanks, give me Java any day of the week.""}, {'Subreddit': 'Java', 'Reddit_Title': ""Used to be a Java hater but I'm enjoying the language now"", 'CommentAuthor': 'chrislam', 'Comment': ""I got into Java because I couldn't get into C/C++ :P\n\nWhen I was teenage I got a C++ book for *nix and wondered why I couldn't get the first example working on my Windows PC and thought programming must be so difficult. Yeah the younger me didn't know anything.\n\nNow I have been in Java for almost 20 years. (Started in Java 1.4)""}, {'Subreddit': 'Java', 'Reddit_Title': ""Used to be a Java hater but I'm enjoying the language now"", 'CommentAuthor': 'meowrawr', 'Comment': 'The hate you have/had for Java is what I have for python. I‚Äôm not a fan of it. It‚Äôs far too opinionated for me and I think it‚Äôs silly to create complex frameworks from a script language.'}, {'Subreddit': 'Java', 'Reddit_Title': ""Used to be a Java hater but I'm enjoying the language now"", 'CommentAuthor': 'repeating_bears', 'Comment': 'Java as a language is average. Java as an ecosystem is fantastic.\n\nThe best IDE of any language, bar none.\n\nA very solid build tool.\n\nA catalogue of libraries going back more than 20 years.\n\nA great runtime. The JVM is basically at the cutting edge of GC development. The JIT is fantastic.'}, {'Subreddit': 'Java', 'Reddit_Title': ""Used to be a Java hater but I'm enjoying the language now"", 'CommentAuthor': 'EvandoBlanco', 'Comment': ""I think the most accurate thing to say at this point about Java vs. other languages, is that it's a good language to make most real applications. This is a combination of sensible language features and a robust third party library ecosystem.""}]"
Java,I noticed that GraalVM really sweetened their licensing costs all of a sudden?,https://www.reddit.com/r/java/comments/158mvj9/i_noticed_that_graalvm_really_sweetened_their/,41,33,2001zhaozhao,1690232329.0,"I have been eyeing using GraalVM for my solo projects for the past few years. When I looked at graalvm last year, the enterprise edition had massive $25/core/month price tag or something similar, and the free community version was significantly slower than OpenJDK. Essentially it was unusable for my purposes.

However, a few months ago it seemed like GraalVM EE suddenly changed their license to $15/month/employee and no longer charges per processor. So for a solo project, it is presumably just $15/month. On top of that, it seemed like they released a new free, closed source distribution called Oracle GraalVM which has many if not most of the EE features for free.

So, at least for my projects, GraalVM literally went from prohibitively expensive to a potentially amazing option overnight.

I'm not sure what prompted Oracle to make such a decision, maybe someone else can shine the light. But I'll definitely be trying out GraalVM again over the next few weeks. I'm a bit wary that Oracle might decide to do funny things and/or revert their licenses on a whim though.","[{'Subreddit': 'Java', 'Reddit_Title': 'I noticed that GraalVM really sweetened their licensing costs all of a sudden?', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'I noticed that GraalVM really sweetened their licensing costs all of a sudden?', 'CommentAuthor': '1Saurophaganax', 'Comment': '""Come into my parlor."" said the spider to the fly.'}, {'Subreddit': 'Java', 'Reddit_Title': 'I noticed that GraalVM really sweetened their licensing costs all of a sudden?', 'CommentAuthor': 'the_other_brand', 'Comment': ""I wonder if Oracle realized that GraalVM isn't a silver bullet for all problems, and is changing the price accordingly.""}, {'Subreddit': 'Java', 'Reddit_Title': 'I noticed that GraalVM really sweetened their licensing costs all of a sudden?', 'CommentAuthor': 'papercrane', 'Comment': 'It was part of the Java licensing changes that Oracle made early this year. It all falls under the ""Java SE Universal Subscription"". The change was very unpopular because the ""per employee"" includes employees not using Java, and represents a very large price increase for companies with large headcounts, even if only a few devs are using Java there.'}, {'Subreddit': 'Java', 'Reddit_Title': 'I noticed that GraalVM really sweetened their licensing costs all of a sudden?', 'CommentAuthor': 'soonnow', 'Comment': 'Hey just be super careful with that free license. I looked into it and it be aware that you are not allowed to charge for the compiled software as far as I read it. \n\nIANAL'}, {'Subreddit': 'Java', 'Reddit_Title': 'I noticed that GraalVM really sweetened their licensing costs all of a sudden?', 'CommentAuthor': 'fullouterjoin', 'Comment': 'I went and checked the actual license for GraalVM, its now FREE for commercial deployment.\n\nhttps://www.oracle.com/java/technologies/javase/jdk-faqs.html#GraalVM-licensing\n\n> What is the new ‚ÄúGraalVM Free Terms and Conditions (GFTC) including License for Early Adopter Versions‚Äù License?\n\n> The GFTC is the license for GraalVM for JDK 17, GraalVM for JDK 20 and later releases. Subject to the conditions of the license, it permits free use for all users ‚Äì even commercial and production use. There is no click through license so automating downloads of it has never been easier.\n\nThis includes PGO.'}, {'Subreddit': 'Java', 'Reddit_Title': 'I noticed that GraalVM really sweetened their licensing costs all of a sudden?', 'CommentAuthor': 'FirstAd9893', 'Comment': ""What's the licensing model for Azul Prime (formerly Zing)?""}, {'Subreddit': 'Java', 'Reddit_Title': 'I noticed that GraalVM really sweetened their licensing costs all of a sudden?', 'CommentAuthor': '2001zhaozhao', 'Comment': ""Yeah that's the thing, this is Oracle, who made their JDK paid after years of being free.\n\nI think I'm going to just experiment with Graal's regular JIT mode as a drop-in replacement for OpenJDK, so that I benefit from a bit of extra performance and if they mess with the license again I'll just switch back instantly.""}, {'Subreddit': 'Java', 'Reddit_Title': 'I noticed that GraalVM really sweetened their licensing costs all of a sudden?', 'CommentAuthor': '2001zhaozhao', 'Comment': ""I sure hope they realized that because the previous pricing model was completely ridiculous. It costs some $120/month to rent a 16 core server on Hetzner (and those are fast desktop CPU cores), but it would have cost $400/month to run GraalVM EE on these cores. Sorry Oracle but I'd rather host 3 more 16 core servers for the same price.""}, {'Subreddit': 'Java', 'Reddit_Title': 'I noticed that GraalVM really sweetened their licensing costs all of a sudden?', 'CommentAuthor': 'lifeeraser', 'Comment': 'I thought GraalVM was touted as The Future? What changed?'}, {'Subreddit': 'Java', 'Reddit_Title': 'I noticed that GraalVM really sweetened their licensing costs all of a sudden?', 'CommentAuthor': 'pjmlp', 'Comment': 'We already know that, there have been AOT compilers for Java since around 2000, they only happened to be mostly comercial tailored at big enterprises.\n\nAndroid also rolledback from only AOT on Android 5, to a mix of JIT/AOT on Android 7 onwards.'}]"
Java,"Vavr brings nothing to the table, but adds a lot of complexity. Change my mind",https://www.reddit.com/r/java/comments/152ecqg/vavr_brings_nothing_to_the_table_but_adds_a_lot/,30,51,Specialist_Bee_9726,1689628699.0,"Recently I had to understand few small projects that heavily utilize vavr. They were spring boot apps and vavr made everything 10 times harder, especially on the error handling front.
IMO if you hate non functional programming style you should just use scala at this poit. 
Whats the point of vavr..","[{'Subreddit': 'Java', 'Reddit_Title': 'Vavr brings nothing to the table, but adds a lot of complexity. Change my mind', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Vavr brings nothing to the table, but adds a lot of complexity. Change my mind', 'CommentAuthor': 'kag0', 'Comment': ""I think it takes a bit of time to appreciate the advantages. \n\nPersistent collections are pretty straight forward. You want to give someone a collection and know that they wont modify it, and have them know that they can't modify it.   \nBut also they're very useful for algorithms like back-tracking because you don't need to create a copy of a collection before modifying it and passing it to a branch.\n\nYou mentioned `Try`, which can help people know that a lambda is going to throw an exception by indicating as much in the result type.\n\nFunctional programming is about reducing mutability. Many (most?) Java programmers already embrace that concept in the form of keeping mutable variable scope as localized as possible. Vavr just gives you some tools to do that. Like any tools they can be overused or used wrong.  \nWe don't need to change languages to improve the way we program. Joda time, `Optional`, lambdas, and `Stream`s all made it to the standard library for our benefit.   \n\nNo need to slam it, just takes a bit of getting used to. Maybe you'll eventually find  that it fits your style, maybe not.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Vavr brings nothing to the table, but adds a lot of complexity. Change my mind', 'CommentAuthor': 'g4T0r', 'Comment': 'It makes java code mostly unreadable to the average java developer which might be fine for your side project, but is a time bomb in any corporate setting.  \n\nRe-implementing scala as a java library so you can kind of code in scala in a java 8 environment feels like malicious compliance to me.\n\nUse scala if you want to write scala, otherwise use whatever standard java idiom your env is based on.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Vavr brings nothing to the table, but adds a lot of complexity. Change my mind', 'CommentAuthor': 'itzamic', 'Comment': 'As per all dev stuff, the answer is it depends. When we abuse something, it will increase complexity for no reason. I used it once in a project I am doing, and I am still not sure if it gave me value or added complexity. But I guess when used elegantly will look lovely.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Vavr brings nothing to the table, but adds a lot of complexity. Change my mind', 'CommentAuthor': 'vips7L', 'Comment': 'Same experience with RxJava. Not worth the complexity.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Vavr brings nothing to the table, but adds a lot of complexity. Change my mind', 'CommentAuthor': 'strogiyotec', 'Comment': 'What exactly was hard to understand? In my experience vavr was fun to use and read'}, {'Subreddit': 'Java', 'Reddit_Title': 'Vavr brings nothing to the table, but adds a lot of complexity. Change my mind', 'CommentAuthor': 'None', 'Comment': 'Ah yes, the classic java mindset of ignoring functional patterns in favor of imperative ones. Overall vavr is no more complex than any other programming pattern. It took time to learn all the imperative design patterns that started in the early days of java. It takes time to learn functional design patterns.\n\nVavr allows for implementing common functional design patterns in java. IMO I would rather use Java with vavr then not at all.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Vavr brings nothing to the table, but adds a lot of complexity. Change my mind', 'CommentAuthor': 'UtilFunction', 'Comment': ""Before Java had pattern matching I would have agreed with you but now it's quite beneficial.\n\n>IMO if you hate non functional programming style you should just use scala at this poit.\n\nYou want the Stream API to be gone as well? :)""}, {'Subreddit': 'Java', 'Reddit_Title': 'Vavr brings nothing to the table, but adds a lot of complexity. Change my mind', 'CommentAuthor': 'ringbuffer__', 'Comment': 'you are right ;)'}, {'Subreddit': 'Java', 'Reddit_Title': 'Vavr brings nothing to the table, but adds a lot of complexity. Change my mind', 'CommentAuthor': 'bowbahdoe', 'Comment': ""I think without `Try` there isn't much issue. My first vavr project was a mile of `Try<Option<T>>` with a confusing number of `.map`s and `.flatMap`s.\n\nIf you rely on exceptions and use `.orElse(null)` for local reasoning it gets a lot better.\n\nThe biggest feature is the Persistent Vector and HashMaps. Those give you some data modeling possibilities you wouldn't have without it. (or more accurately would be pretty inefficient)\n\n```\nrecord Person(String name, Vector<Pet> pets) {\n    Person(String name) {\n        this(name, Vector.empty());\n    }\n\n    Person givePet(Pet pet) {\n        return new Person(name, pets.append(pet));\n    }\n}\n```""}, {'Subreddit': 'Java', 'Reddit_Title': 'Vavr brings nothing to the table, but adds a lot of complexity. Change my mind', 'CommentAuthor': 'Key_Recording_3564', 'Comment': 'never heard of it'}]"
Java,Do you think it is right to assume that Java 8 will never go away?,https://www.reddit.com/r/java/comments/14qissk/do_you_think_it_is_right_to_assume_that_java_8/,39,98,Specialist_Bee_9726,1688485734.0,"I am reading java version usage stats and i've notice that there always seems to be a steady 20-30% java 8 in the charts at all times.

Do you thing that these are some huge old legacy projects that no one will ever update, until they reach end of life?

Edit: and if so, isnt this really bad for the language.?? Having to keep these old java version operational will take up a lot of reaources, that could be spent pushong the language forward.. can't we do something about it?","[{'Subreddit': 'Java', 'Reddit_Title': 'Do you think it is right to assume that Java 8 will never go away?', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Do you think it is right to assume that Java 8 will never go away?', 'CommentAuthor': 'budjb', 'Comment': 'I remember when Java 6 was never going to go away'}, {'Subreddit': 'Java', 'Reddit_Title': 'Do you think it is right to assume that Java 8 will never go away?', 'CommentAuthor': 'mauganra_it', 'Comment': ""This is essentially correct. There will always be projects where the risk of breaking things is judged too great. I these cases, the can will be kicked down the road as long as possible until the requirements change so fundamentally that it has to be replaced or the supply of competent engineers runs dry. There are plenty of COBOL monoliths where the only people qualified enough to work with it had to be enticed back from retirement.\n\nSupply of developers won't be a problem for Java 8 though as long as Java itself is around in some fashion. Oracle will probably offer **paid** support for Java 8 and other LTS versions for a very long time. This income is used to fund the OpenJDK project, which otherwise has not that many sources of income. Therefore, Oracle stringing along customers with legacy codebases written in older JDKs is **good** for Java!""}, {'Subreddit': 'Java', 'Reddit_Title': 'Do you think it is right to assume that Java 8 will never go away?', 'CommentAuthor': 'BigBad0', 'Comment': ""It's normal in enterprise world to find such old codebase with an old language version up and running. There are still apps where I work running using Java 6 and . Others also do so with differences in age like Ruby 2.7, .Net Framework 4.8, JavaScript (ECMAScript 2015 or ES6), Angular 12 (over 50% in 2023)...etc.\n\nHowever, it's not the language fault. Java is very slow and careful how it gets updated and that base became much quicker over the last years. So do not expect migrations will be starting in couple of years to the latest even LTS versions. This takes time, specially in Enterprise world. Also keeping your toolings up to date is a mentality and how you would approach this requires planning, skills, code structure and architecture that are suitable for such desire. It's not easy nor common to find such mature mentality, specially when the number of the team(s) goes bigger and so on the apps/services/features.\n\nWhat really effects the language is the community support and how strict the defacto-standards follows its footsteps like Spring/quarkus/Vaadin...etc going with major version to minimum up-to-date requirement. I will be slow, it will not suddenly happens but honestly I think this is GOOD for the language and Java devs. As Example, look to other languages and frameworks that are frequently updated and how that effecting the development experience and Enterprise world (JavaScript !)""}, {'Subreddit': 'Java', 'Reddit_Title': 'Do you think it is right to assume that Java 8 will never go away?', 'CommentAuthor': 'padreati', 'Comment': 'Define never'}, {'Subreddit': 'Java', 'Reddit_Title': 'Do you think it is right to assume that Java 8 will never go away?', 'CommentAuthor': 'Joram2', 'Comment': ""In 2024, all the big JVM Apache projects will release new versions that require Java 11+: Kafka 4.0, Spark 4.0, Flink 2.0. I see that as a tipping point where Java 11+ becomes the norm across the ecosystem for new software.\n\nThere's always a long tail of people and companies running old software. But for mainstream purposes, Java 11+ will be become the norm in 2024.\n\nIn the Python world, I'm noticing lots of mainstream projects dropping Python 3.7 and requiring Python 3.8+. The Java ecosystem is a little slower to upgrade than the Python world.\n\nRealistically, it takes about five years for a big interconnected ecosystem to upgrade versions. You see this in the C++ world too, where the new C++ standards take about five years to gain traction.\n\nThe features in Java 21 may also win over developers where there's larger developer interest in upgrading.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Do you think it is right to assume that Java 8 will never go away?', 'CommentAuthor': 'barking_dead', 'Comment': ""As long as we have shit like weblogic, it won't.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Do you think it is right to assume that Java 8 will never go away?', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Java', 'Reddit_Title': 'Do you think it is right to assume that Java 8 will never go away?', 'CommentAuthor': '_AManHasNoName_', 'Comment': 'No. I despise any engineering excuse to not upgrade. LTS versions are there for a reason. The more the delay to upgrade, the more difficult it becomes as new features are added on top of a code base built on a version destined to no longer be supported.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Do you think it is right to assume that Java 8 will never go away?', 'CommentAuthor': 'gaelfr38', 'Comment': 'Yes'}, {'Subreddit': 'Java', 'Reddit_Title': 'Do you think it is right to assume that Java 8 will never go away?', 'CommentAuthor': 'RagingAnemone', 'Comment': 'On 11, about to jump to 17!!'}]"
Java,"Kafka 4.0, Flink 2.0, Hadoop, and now Spark 4.0 will all drop Java 8 and move to Java 11+!",https://www.reddit.com/r/java/comments/14675sd/kafka_40_flink_20_hadoop_and_now_spark_40_will/,86,14,Joram2,1686421091.0,"Finally! Here's the thread on Spark 4.0 dropping Java 8: https://lists.apache.org/thread/ptbg70k3tfq4ljz4rbz0y5hqlvof8y31

Also, the maintainers of the Apache Hadoop project plan to do a Java 11+ version of Hadoop.

All of this is great, because the broader community will finally be able to use Java 11 features. Right now, end customer apps can use Java 11 featurews but all the libraries and frameworks are limited to being Java 8 compatible.

Will projects adopt JPMS (Java Platform Module System) and provide `module-info.java` files for their projects? I'm hoping that will help reduce or eliminate the need for ""shading"" dependencies.

Next will the standard Java logging facade System.Logger replace slf4j as the leading logging facade library? It will be nice to simplify dependency trees with the JDK version.","[{'Subreddit': 'Java', 'Reddit_Title': 'Kafka 4.0, Flink 2.0, Hadoop, and now Spark 4.0 will all drop Java 8 and move to Java 11+!', 'CommentAuthor': 'melkorwasframed', 'Comment': 'Serious question, how does JPMS alleviate the need to shade dependencies?  I get that it had some benefits for the JVM itself, but I genuinely don‚Äôt understand what problems it solves for application developers.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Kafka 4.0, Flink 2.0, Hadoop, and now Spark 4.0 will all drop Java 8 and move to Java 11+!', 'CommentAuthor': 'zephyy', 'Comment': 'Hooray, so only 5 years old instead of 9 years.\n\nThey should have just followed Spring and jumped straight to 17. Most of the pain is in 8 to 11 anyway.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Kafka 4.0, Flink 2.0, Hadoop, and now Spark 4.0 will all drop Java 8 and move to Java 11+!', 'CommentAuthor': 'Ok_Cancel_7891', 'Comment': 'any timeline or expected date for those future releases?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Kafka 4.0, Flink 2.0, Hadoop, and now Spark 4.0 will all drop Java 8 and move to Java 11+!', 'CommentAuthor': 'chabala', 'Comment': ""It doesn't, OP seems excited and confused.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Kafka 4.0, Flink 2.0, Hadoop, and now Spark 4.0 will all drop Java 8 and move to Java 11+!', 'CommentAuthor': 'TheKingOfSentries', 'Comment': ""I guess technically if you jlink your application, you yourself won't be shading anything since you won't be running your app as a fat jar. Your libraries might still shade though.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Kafka 4.0, Flink 2.0, Hadoop, and now Spark 4.0 will all drop Java 8 and move to Java 11+!', 'CommentAuthor': 'Joram2', 'Comment': ""Yes, I am excited and confused. I believe every JPMS module gets its own classpath space, so transitive dependencies that are not exported between different modules shouldn't clash as they do now, but I'm not sure. The current practice of shading dependencies it to say, this dependency is an internal dependency and shouldn't be visible or impact  downstream consumers of a given library. I thought JPMS provides that functionality without shading.\n\nThe Java ecosystem is broadly still supporting Java 8 and none of the major projects that I'm aware of are using JPMS, so it's hard to tell. As the major projects actually have plans to drop Java 8 support, after that projects should start adopting JPMS and we will see.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Kafka 4.0, Flink 2.0, Hadoop, and now Spark 4.0 will all drop Java 8 and move to Java 11+!', 'CommentAuthor': 'pronuntiator', 'Comment': 'No, JPMS does not automatically turn the JVM into an NPM like experience with the same dependency being available in different versions. It is possible using the [layer](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/ModuleLayer.html) feature JPMS introduced, for example with [Layrry](https://github.com/moditect/layrry), but as I understand it, by default Java only has 2 (?) layers, bootstrap and application, corresponding to the bootstrap and application classloaders.\n\nWhat standard JPMS will give you is reliable configuration, as no two modules on the same module path are allowed to provide the same package _and_ the JVM verifies at start that all required modules are present; strong encapsulation, as deep reflection requires opt-in and you can hide internal public classes; and the ability to build smaller runtime images with jlink that include exactly the dependencies you use.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Kafka 4.0, Flink 2.0, Hadoop, and now Spark 4.0 will all drop Java 8 and move to Java 11+!', 'CommentAuthor': 'melkorwasframed', 'Comment': "">I believe every JPMS module gets its own classpath space, so transitive dependencies that are not exported between different modules shouldn't clash as they do now, but I'm not sure.\n\nNope, it 100% does not do this. AFAICT it's useless for most developers.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Kafka 4.0, Flink 2.0, Hadoop, and now Spark 4.0 will all drop Java 8 and move to Java 11+!', 'CommentAuthor': 'Joram2', 'Comment': ""Isn't hiding internal public classes the purpose of shading dependencies? If JPMS doesn't alleviate the need for shading, it will be rather disappointing.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Kafka 4.0, Flink 2.0, Hadoop, and now Spark 4.0 will all drop Java 8 and move to Java 11+!', 'CommentAuthor': 'Amazing-Cicada5536', 'Comment': '>\tNo, JPMS does not automatically turn the JVM into an NPM like experience\n\nThank God'}, {'Subreddit': 'Java', 'Reddit_Title': 'Kafka 4.0, Flink 2.0, Hadoop, and now Spark 4.0 will all drop Java 8 and move to Java 11+!', 'CommentAuthor': 'Joram2', 'Comment': ""ok, I believe you. The jlink images are nice, but if JPMS isn't solving any problems beyond that, that's quite disappointing.""}]"
Java,"/r/java will be joining the June 12th Blackout in protest of Reddit's API changes. Please support open-source projects and democratization of Projects by using other platforms until we return. This sub will not be accessible for at least 2 days, and possibly longer.",https://i.redd.it/p5uxnfvfur4b1.jpg,678,22,desrtfx,1686386519.0,,"[{'Subreddit': 'Java', 'Reddit_Title': ""/r/java will be joining the June 12th Blackout in protest of Reddit's API changes. Please support open-source projects and democratization of Projects by using other platforms until we return. This sub will not be accessible for at least 2 days, and possibly longer."", 'CommentAuthor': 'EvaristeGalois11', 'Comment': ""Good!\n\nAfter the awful mistreatment of the Apollo dev https://old.reddit.com/r/apolloapp/comments/144f6xm/apollo_will_close_down_on_june_30th_reddits it's clear that the paying api was just a farce to destroy the 3pa competition.\n\nAlso u/spez still uses java 1.1""}, {'Subreddit': 'Java', 'Reddit_Title': ""/r/java will be joining the June 12th Blackout in protest of Reddit's API changes. Please support open-source projects and democratization of Projects by using other platforms until we return. This sub will not be accessible for at least 2 days, and possibly longer."", 'CommentAuthor': 'None', 'Comment': 'Make it longer as in ‚Äúuntil further notice‚Äù, redirect us to an alternative forum, and let‚Äôs get the Hella outa here for good.'}, {'Subreddit': 'Java', 'Reddit_Title': ""/r/java will be joining the June 12th Blackout in protest of Reddit's API changes. Please support open-source projects and democratization of Projects by using other platforms until we return. This sub will not be accessible for at least 2 days, and possibly longer."", 'CommentAuthor': 'mikolaj', 'Comment': ""Shouldn't we already be thinking about some kind of aternative? like e.g.:  [https://github.com/LemmyNet/lemmy](https://github.com/LemmyNet/lemmy) self-hosted? The goal of reddit is not a community, but maximization of the profit.""}, {'Subreddit': 'Java', 'Reddit_Title': ""/r/java will be joining the June 12th Blackout in protest of Reddit's API changes. Please support open-source projects and democratization of Projects by using other platforms until we return. This sub will not be accessible for at least 2 days, and possibly longer."", 'CommentAuthor': 'reiku_85', 'Comment': '+1 for closure until further notice'}, {'Subreddit': 'Java', 'Reddit_Title': ""/r/java will be joining the June 12th Blackout in protest of Reddit's API changes. Please support open-source projects and democratization of Projects by using other platforms until we return. This sub will not be accessible for at least 2 days, and possibly longer."", 'CommentAuthor': 'nastharl', 'Comment': ""I'm looking at Tilde right now and it seems good. Lemmy has structural problems IMO that will prevent it from really taking off.\n\nEdit: Mainly that most people out there have no interest in a decentralized anything (we like centralization, just only when its people we like doing the centralizing) thereby turning the selling point into a drawback imo.""}, {'Subreddit': 'Java', 'Reddit_Title': ""/r/java will be joining the June 12th Blackout in protest of Reddit's API changes. Please support open-source projects and democratization of Projects by using other platforms until we return. This sub will not be accessible for at least 2 days, and possibly longer."", 'CommentAuthor': 'Accomplished_Bee_509', 'Comment': 'Move to [televistar.com](https://televistar.com), same as reddit free to use no censorship bs etc.'}, {'Subreddit': 'Java', 'Reddit_Title': ""/r/java will be joining the June 12th Blackout in protest of Reddit's API changes. Please support open-source projects and democratization of Projects by using other platforms until we return. This sub will not be accessible for at least 2 days, and possibly longer."", 'CommentAuthor': 'tim125', 'Comment': 'Really?'}, {'Subreddit': 'Java', 'Reddit_Title': ""/r/java will be joining the June 12th Blackout in protest of Reddit's API changes. Please support open-source projects and democratization of Projects by using other platforms until we return. This sub will not be accessible for at least 2 days, and possibly longer."", 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Java', 'Reddit_Title': ""/r/java will be joining the June 12th Blackout in protest of Reddit's API changes. Please support open-source projects and democratization of Projects by using other platforms until we return. This sub will not be accessible for at least 2 days, and possibly longer."", 'CommentAuthor': 'woj-tek', 'Comment': 'Very good!'}, {'Subreddit': 'Java', 'Reddit_Title': ""/r/java will be joining the June 12th Blackout in protest of Reddit's API changes. Please support open-source projects and democratization of Projects by using other platforms until we return. This sub will not be accessible for at least 2 days, and possibly longer."", 'CommentAuthor': 'elemur', 'Comment': 'Any Java discord communities around? Some of the ones here look interesting but would like to build a good list of alternatives..'}, {'Subreddit': 'Java', 'Reddit_Title': ""/r/java will be joining the June 12th Blackout in protest of Reddit's API changes. Please support open-source projects and democratization of Projects by using other platforms until we return. This sub will not be accessible for at least 2 days, and possibly longer."", 'CommentAuthor': '_1dontknow', 'Comment': 'Which other platforms? Is there some official r/java on Discord or such services?'}]"
Java,Java compiler running in-browser?,https://www.reddit.com/r/java/comments/144elcm/java_compiler_running_inbrowser/,17,29,Pope4u,1686243378.0,"I'm aware of several efforts to get Java programs running client-side in a browser, either through WASM (gwt, TeaVM) or JS (j2cl).

However, I've not heard of having the Java *compiler* running client-side. Does anyone know if someone has done this? If so, it would open the door to a completely serverless REPL or IDE for Java programmers. Java compilers are written in Java, so this should be theoretically feasible with the tooling already available, but there may be obstacles that I haven't foreseen. I'd love to know if anyone has more info.

To be clear: I'm looking for projects or toolchains that support running a Java compiler entirely in-browser, with no server-side support. I'm not looking for a conventional Java compiler that generates code suitable for a browser.","[{'Subreddit': 'Java', 'Reddit_Title': 'Java compiler running in-browser?', 'CommentAuthor': '_Henryx_', 'Comment': '[Take a look at this ](https://blog.devgenius.io/cheerpj-3-0-a-new-era-for-java-applications-in-the-browser-8d55688ba54b)'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java compiler running in-browser?', 'CommentAuthor': 'FirstAd9893', 'Comment': ""Please specify which compiler level you're referring to. Is it the frontend compiler (javac) or the backend compiler (HotSpot, GraalVM)?""}, {'Subreddit': 'Java', 'Reddit_Title': 'Java compiler running in-browser?', 'CommentAuthor': 'pron98', 'Comment': ""I think you can run javac in TeaVM. But that would produce bytecode that you'll then need to run in the browser somehow.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Java compiler running in-browser?', 'CommentAuthor': 'colonel_viper', 'Comment': 'Oh my god! Not the applets, not again!!! ü§£'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java compiler running in-browser?', 'CommentAuthor': 'mpierson153', 'Comment': 'This is kind of a joke, but you could make a client-side Java compiler in JavaScript or whatever, then use WASM or whatever else to interpret the bytecode.\n\nEdit: what if instead of actually compiling and running Java, you transpiled the Java into JavaScript?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java compiler running in-browser?', 'CommentAuthor': 'dmigowski', 'Comment': 'There was a guy here a few month ago posting his client side JVM. Use the search.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java compiler running in-browser?', 'CommentAuthor': 'NitronHX', 'Comment': 'I am not entirely sure if the Java compiler is completely written in Java or if there are C bits in there.\n. Assuming that it is ""just Java"" it would be worth a try to re compile the javac tool to JS using TeaVM. This could then be run in the browser to compile Java without a server.\n\nIf there a c bits in there you would need to compile them to wasm using LLVM and somehow link the native methods to the wasm'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java compiler running in-browser?', 'CommentAuthor': 'TeaVMFan', 'Comment': 'TeaVM (a free, open-source Java->JavaScript transpiler) had a working javac in the browser a few years back, but it is no longer maintained.  It might be possible to get it working again since TeaVM is actively maintained.  Here is the repo:\n\n[https://github.com/konsoletyper/teavm-javac](https://github.com/konsoletyper/teavm-javac)'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java compiler running in-browser?', 'CommentAuthor': 'sfroberg38', 'Comment': 'What about containerized Java?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java compiler running in-browser?', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java compiler running in-browser?', 'CommentAuthor': 'wasabiiii', 'Comment': ""The biggest issue will be the existing WASM JVMs are AOT. So they are not going to be able to run any produced bytecode.\n\nI don't know if anybody has a JITing VM in WASM.\n\nIf not, I bet I could make it work with IKVM. We're not super far from this.""}]"
Java,Why do companies still use older Java releases,https://www.reddit.com/r/java/comments/140tw3l/why_do_companies_still_use_older_java_releases/,57,128,anonymous_user_908,1685920021.0,"I've worked on multiple projects which have been on Java SE 8 with no intentions of upgrading which I feel is missing on on some great new features. Even now, I joined a fairly new project and they just decided to start building on Java SE 8 again. I know it has LTS (long term support) but so does Java 17 which was released in 2021... Wont using older versions make it harder to upgrade in the future? Why not stick to the latest version (or latest LTS version)","[{'Subreddit': 'Java', 'Reddit_Title': 'Why do companies still use older Java releases', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Java', 'Reddit_Title': 'Why do companies still use older Java releases', 'CommentAuthor': 'XeorphR', 'Comment': 'Often to do with other dependencies'}, {'Subreddit': 'Java', 'Reddit_Title': 'Why do companies still use older Java releases', 'CommentAuthor': 'senseven', 'Comment': 'You work with the people you have, with the systems you have, the knowledge that is there. It took a top 10000 corp three years to update all SonarJ instances in their pipelines to support JDK17. It cost a fortune. Moving from metal to K8s clouds (leaving EJB Servers behind) cost a fortune. There must be a *business case* to spend all that money. We deal with daughter companies that stretched JDK 8 requirements to infinity because they wait for an urgent business case so the money is there to finally lift the thing into the new world. So its also company politics.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Why do companies still use older Java releases', 'CommentAuthor': 'account312', 'Comment': ""At work, the main product is a desktop application (read monolith) with a codebase probably somewhere between one and two million lines, throughout which are sprinkled occasional uses of or reflection into non-API jdk classes to work around some bug or another and uses of deprecated platform APIs, which these days actually do sometimes get removed on version updates. There's also an accumulated collection of workarounds for specific compiler bugs and 100+ dependencies that may need major version updates (read potentially significant effort) to support new java versions. Between handling dependency updates and making sure that all those workarounds are still functional and sufficient, upgrading is decidedly not free. Upgrading across 9 is likely to remain the biggest hurdle for some time, but we've even run into issues upgrading from one patch release to another on the same java version. That said, I'd be a bit suspicious of a new project starting on that old of a java version. There's a lot of great new features in newer versions that it'd be a shame to miss out on for no good reason.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Why do companies still use older Java releases', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Java', 'Reddit_Title': 'Why do companies still use older Java releases', 'CommentAuthor': 're-thc', 'Comment': ""A lot of businesses and people (developers or not) in general don't understand software (yes, still). They treat it as a cost, a means to make $$$ etc but don't care for it.\n\nWhy do we pay for the office, stationery, the cleaners etc? If it's to directly make $$$ - these all don't. Yet we pay for it - some even have catering, events and everything in the office and yet nothing for the software they use.\n\nIt's not Java specific. There are companies using EOL versions of anything - OS, NodeJs, etc - you name it. For those blaming Java and attacking it it's totally unrelated.\n\nYes - upgrade take time but be proactive about it. It's the culture and policies. If you were always ahead of the game it won't be an issue. Put it this way - do you only clean the toilets when it's blocked?""}, {'Subreddit': 'Java', 'Reddit_Title': 'Why do companies still use older Java releases', 'CommentAuthor': 'lqstuart', 'Comment': 'Bunch of others have it spot on but it‚Äôs because of two things:\n\n1) nobody will pay you to do something that has no impact on the bottom line \n2) software quality doesn‚Äôt translate to revenue or value, and literal billions are spent on terrible shit in this industry'}, {'Subreddit': 'Java', 'Reddit_Title': 'Why do companies still use older Java releases', 'CommentAuthor': 'crushh_87', 'Comment': 'Been mentioned a ton of times already but dependency management is really difficult. Large code base, lots of dependencies, its a massive undertaking.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Why do companies still use older Java releases', 'CommentAuthor': 'Disastrous_Bike1926', 'Comment': 'If it works, what compelling reason is there?\n\nEspecially if the software is not seeing major changes, just maintenance? It‚Äôs a potentially large cost. What‚Äôs the benefit? It‚Äôs not features if you‚Äôre not revising the software.\n\nA conversation I once had about Real Time Java and some questions about customers‚Äô (I worked for Sun at the time) desire for numbers on how much memory could be allocated by every method in the JDK - and a request for that *never* to change, from a major defense contractor touched on this.\n\nSay you have software that launches nuclear missiles. And it works on JDK 1.4. What are you going to do when a new JDK comes out? NOTHING. You. Do. Nothing. Because it launches fucking nuclear missiles and it works, it cost a lot to make it work and prove it works, and God help you if you fuck that up. And the goal is to launch nuclear missiles, not to launch nuclear missiles, but faster and with generics and text blocks.\n\nThe same logic applies to anyone looking at an upgrade, missiles or no. There‚Äôs a business case for doing it, or there isn‚Äôt. Developer preference is not one.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Why do companies still use older Java releases', 'CommentAuthor': 'troru', 'Comment': 'It\'s hard to put my finger on one single reason, but things I\'ve seen over the years:\n\n* a company having some kind of IT approval process for new platforms/releases.  this policy affects more than just JVM releases as it pervades everything from hardware to end-user software\n* you develop a library or framework that needs to handle these stodgy attitudes for maximum coverage of the user base\n* a limitation of some critical library(ies) that they depend on\n* inherit java developer culture: hopefully not a hot-take per se, but embracing of the bleeding edge just doesn\'t come with the turf like it used to back in the late \'90s and early 2k\'s.  Java is pretty old by today\'s ""0.x"" release culture that permeates other ecosystems\n\nme personally, I\'m a ""LTS at the very least"" guy.  So JDK 17+ as of this posting.  If there\'s some feature you super-duper need now that\'s in an intermediate (e.g. 18, 19, 20, etc), and can cope with a moving target of the API, then have at it.  For example, if you\'re keen to start leveraging virtual threads and you\'re facing choosing the path of reactive code patterns vs good-ole tried and true patterns, you\'d have to be ready to go with 20+ pre-release.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Why do companies still use older Java releases', 'CommentAuthor': 'MRideos', 'Comment': ""Cause it's expensive to port""}]"
Java,JStachio 1.0.0 release! Fastest Java templating engine (currently).,https://www.reddit.com/r/java/comments/13rnpz4/jstachio_100_release_fastest_java_templating/,79,14,agentoutlier,1685035479.0,"**Finally after almost a year JStachio has reached 1.0.0!**

https://github.com/jstachio/jstachio
	
JStachio is a Java template engine that is type-safe and uses Mustache for syntax. 

I developed it because my company has been using Mustache (and handlebars) heavily for a decade now 
and I always wished there was a type-safe version.

It is fully compliant to the v1.3 Mustache spec which had some unique challenges given that JStachio 
is not late binding like most Mustache implementations as well as templates cannot be dynamically changed like most implementations.

It generates readable Java code once the templates are compiled and is thus very Graal VM Native friendly.

It has been production ready for some time but I took extra time on documentation, getting the API right and real world benchmarking.
[I really pushed the limits of Javadoc and use it for all the documentation](https://jstach.io/doc/jstachio/current/apidocs/).

**It is currently the fastest templating engine for Java!**



I know that is a bold statement but unlike others I not only tested with 
JMH doing String output but also with 
[TechEmpower's Framework Fortune benchmarks](https://www.techempower.com/benchmarks/#section=data-r21&test=fortune&l=zik0vz-6bj)
which is the only Framework benchmark test that requires a templating engine.

It was not originally my intention to be the fastest but I did benchmarking to make sure my 
1.0.0 API would be future proof (always good to make sure the API does not prevent going fast).

I adjusted the benchmark here to test UTF-8 output as TechEmpower test that with non latin-1 characters:

https://github.com/agentgt/template-benchmark

So if you have a framework on TechEmpower that is Java performing the Fortune benchmark I recommend picking JStachio (especially if you are already using Mustache).



    git clone https://github.com/TechEmpower/FrameworkBenchmarks.git
    cd FrameworkBenchmarks/frameworks/Java
    
    # Search for projects using Mustache
    $ rg ""mustache"" -l |  cut -f1 -d ""/"" | sort | uniq
    act
    armeria
    dropwizard
    gemini
    grizzly
    light-java
    minijax
    officefloor
    proteus
    spark
    spring
    spring-webflux
    undertow
    undertow-jersey
   
    # Search for Rocker
    rg ""fizzed.rocker"" -l | cut -f1 -d ""/"" | sort | uniq
    helidon
    jooby
    micronaut
    proteus
    quarkus
    revenj-jvm
    vertx



Anyway I have some really exciting future plans on dealing with polymorphic data with 
[Mustache's dynamic name/partial support](https://github.com/mustache/spec/pull/134#issuecomment-1197307651). 
In Javascript this is accomplished with String fields being the name of the template (what could go wrong...). 

Even in expressive templating languages like Rocker and JTE this is a challenge.
That is if I have a `List<Shape>` how do I different templating if the `Shape` is a `Triangle`? 

In JStachio this will be done with annotated sealed classes which is safer and will exhaust all sub types.
Brian Goetz and the rest of the JDK team's work on making Java more ""data oriented"" is super helpful 
in accomplishing this mustache optional spec requirement.

https://github.com/jstachio/jstachio/issues/140


Anyway
[Thanks to all that have helped](https://github.com/jstachio/jstachio/releases/tag/v1.0.0)!


For reference here are my previous posts on JStachio:

* [v0.9.0 post](https://www.reddit.com/r/java/comments/ztgnpk/jstachio_v090_released_now_with_spring_support/)
* [v0.7.0 post](https://www.reddit.com/r/java/comments/yyvz87/jstachio_v070_released_a_typesafe_java_mustache/)
* [first post](https://www.reddit.com/r/java/comments/ya1zw5/quick_preview_of_jstachio_a_type_safe_java/)","[{'Subreddit': 'Java', 'Reddit_Title': 'JStachio 1.0.0 release! Fastest Java templating engine (currently).', 'CommentAuthor': 'TheKingOfSentries', 'Comment': ""Excellent work, I currently don't have any projects that use a template engine, but I'll keep this in my back pocket for the next one. \n\nI'm also impressed with how far you managed to push Javadoc. I didn't know you could do all that.""}, {'Subreddit': 'Java', 'Reddit_Title': 'JStachio 1.0.0 release! Fastest Java templating engine (currently).', 'CommentAuthor': 'sviperll', 'Comment': 'Congrats with the release!'}, {'Subreddit': 'Java', 'Reddit_Title': 'JStachio 1.0.0 release! Fastest Java templating engine (currently).', 'CommentAuthor': 'jskovmadadk', 'Comment': 'I have updated my jax-rs client generator with the new 1.0.0 version, using the zero dependency configuration. Good stuff!'}, {'Subreddit': 'Java', 'Reddit_Title': 'JStachio 1.0.0 release! Fastest Java templating engine (currently).', 'CommentAuthor': 'ringbuffer__', 'Comment': 'Project names are hard to remember'}, {'Subreddit': 'Java', 'Reddit_Title': 'JStachio 1.0.0 release! Fastest Java templating engine (currently).', 'CommentAuthor': 'Lost-Horse5146', 'Comment': 'nice job with the v1.0!\n\nUnfortunately we have an ungodly amount of emails using freemarker, otherwise (or next opportunity) I will definitively use this!'}, {'Subreddit': 'Java', 'Reddit_Title': 'JStachio 1.0.0 release! Fastest Java templating engine (currently).', 'CommentAuthor': 'magickaldo', 'Comment': 'Nice work!\nI would like to use this to render my mustache templates in a dropwizard project. Has someone managed to set this up?'}, {'Subreddit': 'Java', 'Reddit_Title': 'JStachio 1.0.0 release! Fastest Java templating engine (currently).', 'CommentAuthor': 'None', 'Comment': '[removed]'}, {'Subreddit': 'Java', 'Reddit_Title': 'JStachio 1.0.0 release! Fastest Java templating engine (currently).', 'CommentAuthor': 'agentoutlier', 'Comment': 'Darn I was hoping the play on Pistachio and Mustachio would be memorable.\n\nHopefully enough people like the library enough google search will make it easier to find.'}, {'Subreddit': 'Java', 'Reddit_Title': 'JStachio 1.0.0 release! Fastest Java templating engine (currently).', 'CommentAuthor': 'agentoutlier', 'Comment': 'Freemarker is actually is an awesome templating language. If I had to choose a non-mustache non-type-safe based templating Freemarker would be my first choice.'}, {'Subreddit': 'Java', 'Reddit_Title': 'JStachio 1.0.0 release! Fastest Java templating engine (currently).', 'CommentAuthor': 'agentoutlier', 'Comment': 'Dropwizard support is now in 1.2.0'}, {'Subreddit': 'Java', 'Reddit_Title': 'JStachio 1.0.0 release! Fastest Java templating engine (currently).', 'CommentAuthor': 'agentoutlier', 'Comment': 'I saw your comment earlier and did not forget. I will try to get some dropwizard support out asap!'}]"
Java,Dominion ECS - the Release Candidate is out,https://www.reddit.com/r/java/comments/13nn56c/dominion_ecs_the_release_candidate_is_out/,45,14,jumpixel,1684657298.0,"I‚Äôm pleased to announce the availability of the first Release Candidate of Dominion ECS (Entity Component System). 

Dominion is a Java library designed to simplify game development using the Entity Component System architecture. With the Release Candidate now available, we are one step closer to the final release of the first version, incorporating valuable feedback from the community.

Key Features 
* Efficient Entity Component System: Dominion adheres to the ECS paradigm, fostering code organization, reusability, and flexibility when developing game systems.
* Optimized Performance: Dominion  has undergone extensive optimization to ensure smooth gameplay experiences through efficient memory usage and execution speed.
* Seamless Integration: With Dominion , integrating the library into your Java projects is a breeze, allowing you to quickly harness its capabilities.
* Comprehensive Documentation: Discover Dominion with the detailed documentation, including helpful usage examples and API references.

To embark on your Dominion journey, simply visit [www.dominion.dev](https://www.dominion.dev/). 
I also invite you to join our Discord community to share your experiences, seek guidance, and collaborate with other utilising Dominion.
User feedback is essential in shaping the future of the project. As you explore the Release Candidate, I encourage you to provide feedback, report any issues you encounter, and share your ideas for further improvements.
If you find Dominion valuable and would like to show your support, we kindly ask you to visit our GitHub repository at [github.com/dominion-dev/dominion-ecs-java](https://github.com/dominion-dev/dominion-ecs-java) and give it a star. Your support will help us reach more developers and continue improving the project.

Happy coding :)","[{'Subreddit': 'Java', 'Reddit_Title': 'Dominion ECS - the Release Candidate is out', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Java', 'Reddit_Title': 'Dominion ECS - the Release Candidate is out', 'CommentAuthor': 'blobjim', 'Comment': 'It would be helpful if you listed the type/architecture of the ECS implementation in the readme. Does it use archetypes, etc. The way its implemented can affect use cases and inform what access patterns and operations are the fastest. Also, does it support multithreaded system processing?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Dominion ECS - the Release Candidate is out', 'CommentAuthor': 'nutrecht', 'Comment': ""Neat :) I recently started a pet project for spacetraders.io and I'm going to see if I can cram this into my system.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Dominion ECS - the Release Candidate is out', 'CommentAuthor': 'klekpl', 'Comment': 'Can someone enlighten me on the differences between ECS and procedural programming with global state are? Also: what actual advantages does ECS have over OOP? Is it only an enabler for so called data oriented programming? Or maybe it is a workaround for a lack of a low latency GC?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Dominion ECS - the Release Candidate is out', 'CommentAuthor': 'jumpixel', 'Comment': ""Thanks üòä\nEntity ID is internal because it will change every time you add/remove components. You can't rely on it.\nIn which use case a system should fetch all the dominion entities?""}, {'Subreddit': 'Java', 'Reddit_Title': 'Dominion ECS - the Release Candidate is out', 'CommentAuthor': 'jumpixel', 'Comment': 'You are right, I will add more info about the architecture!\nAbout which operations perform better you can already relying on the available [benchmarks](https://github.com/dominion-dev/dominion-ecs-java/tree/main/dominion-ecs-engine-benchmarks)'}, {'Subreddit': 'Java', 'Reddit_Title': 'Dominion ECS - the Release Candidate is out', 'CommentAuthor': 'Lord_Naikon', 'Comment': 'The primary advantage of an ecs over other paradigms is runtime composable classes. This makes it easier to make both data and behavior of entities data driven. Because each system only looks at certain aspects of an entity, this can also enable better separation of concerns. The secondary advantage has to do with potentially better memory layouts.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Dominion ECS - the Release Candidate is out', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Java', 'Reddit_Title': 'Dominion ECS - the Release Candidate is out', 'CommentAuthor': 'klekpl', 'Comment': 'Ok, but you give up on lexical scoping and encapsulation that an OO language gives you - entities are global state and there is no mechanism that enforces access rules - each system (procedure?) can read and modify any aspect of any entity. There is also no type level information about what aspects are accessed by a particular system.\n\nI fail to see an advantage over aspects and systems being proper (abstract) classes/interfaces with methods, like:\n```\ninterface Position {...} // aspect/component\ninterface Velocity {...} // aspect/component\n\ninterface Movable { //system\n  Position position();\n  Velocity velocity();\n  \n  default void move() {\n    ..\n  }\n}\n\ninterface Entity extends Movable {}\n```\nIf entities might change their capabilities in runtime then object/role  pattern can be used:\n```\ninterface Entity {\n  Optional<T> as(Class<T> role)\n}\n```'}, {'Subreddit': 'Java', 'Reddit_Title': 'Dominion ECS - the Release Candidate is out', 'CommentAuthor': 'jumpixel', 'Comment': 'That makes sense, so please raise a new issue to track this request, ChunkedPool class implementation could be improved to cover this use case.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Dominion ECS - the Release Candidate is out', 'CommentAuthor': 'senseven', 'Comment': 'Unity introduced ECS/DOTS to separate data and code to avoid cache misses. The result can be [seen here](https://www.youtube.com/watch?v=0VQyWo-gb2c). The interesting part is, that traits can be a complete subsystem that runs in own threads and do complicated calculations before the move() is executed. If properly setup, base data structures are also simple to setup vs. classical entity models that need a lot of special handling to get the right data where it needs to be before the game starts.\n\nOn a practical level, I would expect smaller teams to follow code design and not doing access shortcuts. You could annotation checks that enforces certain access behaviours during the compile phase, to catch the rare sidestepper.'}]"
Java,Java opensource projects that need help from community.,https://www.reddit.com/r/java/comments/13n584j/java_opensource_projects_that_need_help_from/,50,22,Ramona_giati_ego_3,1684612466.0,I am looking for Java opensource projects that are not yet mature to contribute. The reason I am mentioning this is because I have already made my first PRs in well established projects but things moved really slowly which is completely understandable . That's why I am trying to find some opensource projects that are in earlier stages and need more help and thus they will discuss/review and finally merge PR from external contributors more quickly. So any suggestions?,"[{'Subreddit': 'Java', 'Reddit_Title': 'Java opensource projects that need help from community.', 'CommentAuthor': 'Electronic-Youth-343', 'Comment': ""I'm maintaining an open-source project and I say that the size or maturity is not necessarily the driving factor behind how fast or slow the PR is processed. \nI think the time taken to process a PR  is more related to:\n1. how much free time the project maintainers have\n2. how complicated the PR is (fixing a typo vs implementing a complex algorithm)\n3. how well aligned a PR is with the direction of the project they want (I.e. implementing a feature the maintainers are not interested in, is not going to be looke at with priority).""}, {'Subreddit': 'Java', 'Reddit_Title': 'Java opensource projects that need help from community.', 'CommentAuthor': 'dmigowski', 'Comment': 'You could also just try to fork some existing projects, maybe eben abandoned projects, and try to get them up and running again. \n\nSomething which I am looking eagerly for would be something like the old mmscomputing twain scanner api, but in a way that it crosses bitness boundaries. Like where you can access 32-bit twain drivers from 64-bit JVMs.\n\nOur you could try to get the latest SWT running on 32-bit again. It feels useless that they decided to drop that architecture, also because all the major OpenJDK variants also still have 32-bit JVMs.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java opensource projects that need help from community.', 'CommentAuthor': 'brokeCoder', 'Comment': 'If engineering/scientific projects appeal to you, Units of measurement implementations for Java are woefully behind when compared with the likes of [UnitsNet](https://github.com/angularsen/UnitsNet) for C#.\n\nThe reference implementation for JSR 385 (units of measurement) is being developed to bridge the gap I think, but it - and its (in my opinion) more well developed implementation Seshat - could definitely use  more community help.  \n\n\nJSR 385 reference implementation Indriya - [https://github.com/unitsofmeasurement/indriya](https://github.com/unitsofmeasurement/indriya)\n\nMore well developed implementation (with unit simplification) - [https://github.com/unitsofmeasurement/seshat](https://github.com/unitsofmeasurement/seshat)'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java opensource projects that need help from community.', 'CommentAuthor': 'zephyy', 'Comment': 'https://github.com/MunGell/awesome-for-beginners#java'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java opensource projects that need help from community.', 'CommentAuthor': 'shadowknight094', 'Comment': ""Slick 2d? I remember having fun with it while building a small game for a class project long ago. Heard that it's dead. Not sure if it's worth it though""}, {'Subreddit': 'Java', 'Reddit_Title': 'Java opensource projects that need help from community.', 'CommentAuthor': 'jojolichtenberger', 'Comment': ""Append-only database system (based on a persistent index structure): https://github.com/sirixdb/sirix or a retargetable query compiler https://github.com/sirixdb/brackit\n\nThere's a lot of stuff to do that is not DB-specific.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Java opensource projects that need help from community.', 'CommentAuthor': 'vmcrash', 'Comment': 'In case someone else wants to contribute to a mature Java library, this one could need some help: https://github.com/eclipse-platform/eclipse.platform.swt'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java opensource projects that need help from community.', 'CommentAuthor': 'gnahraf', 'Comment': ""I'm not good at this, but I could certainly use help from outside contributors. There's a lot to work on at various levels of specialty. Some examples..\n\n* https://github.com/crums-io/skipledger (a flexible alternative to Merkle trees w/ some interesting applications)\n* Port File I/O test cases to use a more standard library\n* Work on build, release and distribution\n* Improve CLI tools that use picocli library\n* Elias Fano encoding improvements for compressed offset files, if you want to get down and dirty https://github.com/crums-io/io-util/blob/master/io-xp/src/main/java/io/crums/io/sef/package-info.java\n\nIf any of these topics interest you, let's connect somehow""}, {'Subreddit': 'Java', 'Reddit_Title': 'Java opensource projects that need help from community.', 'CommentAuthor': 'byteBullets', 'Comment': '[https://github.com/HavardNJ/boardcad-le](https://github.com/HavardNJ/boardcad-le)\n\nCAD program that uses cubic bezier curves for designing surfcraft. This program has full potential for further developing.\n\nMy suggestions would be: \n\nImprove the 3d experience with libGDX; Improve the surface blending between cross-sections via a G1 type curvature generation. Some GUI improvements; Finalize the bezier based CAM module;'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java opensource projects that need help from community.', 'CommentAuthor': 'kag0', 'Comment': ""https://github.com/blackdoor/hate could use an owner. It already has some production users but I've switched over to focusing on scala and I think this project still has some interesting potential""}, {'Subreddit': 'Java', 'Reddit_Title': 'Java opensource projects that need help from community.', 'CommentAuthor': 'ingvij', 'Comment': ""I'll mention https://github.com/hkupty/penna here as I think it needs more testing and traction...""}]"
Java,bld pure Java build tool extracted from RIFE2,https://i.redd.it/4lnz7lqi9jza1.jpg,99,90,gbevin,1683937087.0,"We received several requests to dissociate bld from RIFE2, so we went ahead and did the work. 

bld now has its own repo and is suitable for any Java project, not just RIFE2 projects.

More information here:
https://github.com/rife2/bld","[{'Subreddit': 'Java', 'Reddit_Title': 'bld pure Java build tool extracted from RIFE2', 'CommentAuthor': 'jThaiLB', 'Comment': 'What is it advantages over Maven? Just asking. I am not having any issue with the xml.'}, {'Subreddit': 'Java', 'Reddit_Title': 'bld pure Java build tool extracted from RIFE2', 'CommentAuthor': 'Amazing-Cicada5536', 'Comment': 'Please add a row for comparisons with ant, as it seems to be a similar idea.'}, {'Subreddit': 'Java', 'Reddit_Title': 'bld pure Java build tool extracted from RIFE2', 'CommentAuthor': 'simonides_', 'Comment': ""to describe gradle as non declarative is bold üòÇ. especially if you claim bld is. \n\nsure you can have code in there but the general idea for gradle is to be declarative. it is almost the same with maven just that you have to go through one more hoop in maven to get custom code in builds. \n\nas for java libraries in gradle... you can use them just as well as classes. so I don't see the advantage here. \n\ngradle is also not magic as maven isn't and there are reasons that there is convention over configuration stuff around. it usually makes sense. \n\nnow a benchmark that coul make a difference... how does your bld tool support building hybrid classpath / module path applications? \n\nhow do you handle collisions in dependency management. especially where you want to declare rules on how something should be resolved. e.g. switch out a logger of a dependency. \n\nor merge dependencies so you can use them on the module path? \n\ncan you handle the toolchain by any means? meaning if I wanted to run the tests against java 11 and java 17 can I do that easily? \n\ncan you include projects and reference things from other builds so the ide can see both and debug all together like gradle does with includeBuild ? also this include build has implications on the dependency resolution... have you got any way to handle that ?""}, {'Subreddit': 'Java', 'Reddit_Title': 'bld pure Java build tool extracted from RIFE2', 'CommentAuthor': 'Zico2031', 'Comment': ""God job man I appreciate your effort to develop this cool tool by yourself.\n\nFolks if you don't like his tool just don't use it, you dont need be a bunch  assholes in the comments""}, {'Subreddit': 'Java', 'Reddit_Title': 'bld pure Java build tool extracted from RIFE2', 'CommentAuthor': 'Iryanus', 'Comment': ""Everything moves in circles, now we have ant in java. Great... Not. Good luck with that, but honestly, the big selling point if maven/gradle is more the environment that exists around it (plugins, tools, etc.). With your thing, I cannot do half (if even 10%) of what I can do in maven easily. As soon as you have the tooling around it, it may be worth a look, but chances are that by then, you've added declarative config, etc. and all the other things I have learned to love.""}, {'Subreddit': 'Java', 'Reddit_Title': 'bld pure Java build tool extracted from RIFE2', 'CommentAuthor': 'cowwoc', 'Comment': ""It's ridiculous how many people are shouting you down purely based on what they theoretically believe to be true, instead of actually trying the project and see for themselves.\n\nI've used Maven for almost 2 decades now. I've written my own plugins. And I still say it's a poor tool compared to what an imperative tool using Java could be. All the declarative fanboys are working on simple projects. Try to deviate from the convention and you quickly find yourself in hell.\n\nGradle is a steaming pile of garbage. It breaks compatibility every week, the documentation is atrocious, and god forbid you try doing something different than the default behavior. You will run into a lot of bugs.\n\nI honestly hope your build tool picks up. It has real potential to distrupt the statue quo.""}, {'Subreddit': 'Java', 'Reddit_Title': 'bld pure Java build tool extracted from RIFE2', 'CommentAuthor': '1Saurophaganax', 'Comment': ""I'll probably stick with maven and mvnd, but good on you for attempting something new.""}, {'Subreddit': 'Java', 'Reddit_Title': 'bld pure Java build tool extracted from RIFE2', 'CommentAuthor': 'amackenz2048', 'Comment': "">bld was created because we're not really interested in build tools. We use them because we have to, but we'd rather just get on with coding the real stuff.\n\nGreat - I use Maven because I'm not interested in spending all day coding a build tool rather than writing useful business logic.""}, {'Subreddit': 'Java', 'Reddit_Title': 'bld pure Java build tool extracted from RIFE2', 'CommentAuthor': 'wildjokers', 'Comment': 'This post just links to an image. Is there a link to the actual build tool?'}, {'Subreddit': 'Java', 'Reddit_Title': 'bld pure Java build tool extracted from RIFE2', 'CommentAuthor': 'jw13', 'Comment': 'I moved a personal Java project from gradle to bld, and must say that I‚Äôm very satisfied with the results so far.\n\nMaybe it‚Äôs because I‚Äôm most familiar with java, and don‚Äôt really like kotlin or groovy, but I feel much more ‚Äúin control‚Äù with bld.'}, {'Subreddit': 'Java', 'Reddit_Title': 'bld pure Java build tool extracted from RIFE2', 'CommentAuthor': 'BoyRobot777', 'Comment': 'Hopefully this takes off. All tools/inspections for Gradle and Maven suck even with IntelliJ.'}]"
Java,How best to explain that Java LTS doesn't mean what people think it does?,https://www.reddit.com/r/java/comments/13bp6dj/how_best_to_explain_that_java_lts_doesnt_mean/,1,51,1Saurophaganax,1683552628.0,"I've been gathering ammo to convince my superiors to let us use the latest feature releases for our new highly maintained projects. I'm dying inside because I know in the context of OpenJDK, LTS is meaningless, but they still keep bringing it up.

We currently use corretto, but I remember reading somewhere a while ago that corretto doesn't actually provide a fully maintained JDK like Azul or RedHat, but merely only backports changes from the mainline. Is that the case, or did I hallucinate that? It would be a pretty killer argument to stay up to date considering we don't want to pay for LTS.","[{'Subreddit': 'Java', 'Reddit_Title': ""How best to explain that Java LTS doesn't mean what people think it does?"", 'CommentAuthor': 'udderss', 'Comment': 'I‚Äôm trying to rack (wrack?) my brain of why LTS is meaningless in any context. \n\nin the most basic sense it continues to receive updates, OpenJDK/Oracle/Corretto, why is it useless? And if you‚Äôre using Corretto, you aren‚Äôt paying for LTS anyway. \n\nI‚Äôm genuinely curious for the first question though'}, {'Subreddit': 'Java', 'Reddit_Title': ""How best to explain that Java LTS doesn't mean what people think it does?"", 'CommentAuthor': 'henk53', 'Comment': ""I'm in the same boat at times, and frankly, I've given up. \n\nLTS means whatever people want it to mean. Almost everyone have their own interpretation of what LTS is.\n\nAmong them:\n\n* A final, non alpha release\n* A faster, better release\n* A more secure release\n* A superior release (without qualifying what superior is)\n* A release allowed to be used in production \n* And much more\n\nOften people simply WANT it to mean those things, and when people want to believe something, good luck changing their minds.""}, {'Subreddit': 'Java', 'Reddit_Title': ""How best to explain that Java LTS doesn't mean what people think it does?"", 'CommentAuthor': 'nonomild', 'Comment': 'For most business applications, it would make sense to stick to LTS versions like 17 or 21. The main reason is that libraries and frameworks take time to adapt and support the new released Java version. During this time, you cannot upgrade and are using an unsupported Java version in production. Security fixes are not back ported.'}, {'Subreddit': 'Java', 'Reddit_Title': ""How best to explain that Java LTS doesn't mean what people think it does?"", 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Java', 'Reddit_Title': ""How best to explain that Java LTS doesn't mean what people think it does?"", 'CommentAuthor': 'Joram2', 'Comment': ""For an actively maintained app, you generally should use the latest released Java. If nothing else, it keeps your developers engaged + motivated. If you are deploying to a managed runtime like AWS Lambda, you are limited by what they support.\n\nThe other issue, is at least today, the non-LTS releases, Java 18+19+20, the new features are preview features. But for an actively maintained app, it's reasonable to use preview features :)""}, {'Subreddit': 'Java', 'Reddit_Title': ""How best to explain that Java LTS doesn't mean what people think it does?"", 'CommentAuthor': 'waitplzdontgo', 'Comment': 'Not sure I understand your complaints. You say LTS is meaningless (without citing any reason), but it is absolutely not.\n\nBusinesses care about stability far more than they do innovation for innovation‚Äôs sake. LTS vendors give businesses a phone number to call if their applications start breaking and it is beyond the ability of developers to handle. It also helps to ensure that you don‚Äôt have a million different versions of Java running on your servers, instead focusing down to a few key specific versions.\n\nSo anyway in summary I disagree with your statement.'}, {'Subreddit': 'Java', 'Reddit_Title': ""How best to explain that Java LTS doesn't mean what people think it does?"", 'CommentAuthor': 'eXecute_bit', 'Comment': ""There are vendors providing free access to LTS versions, even without paid support. LTS is meaningful because those updates will contain security fixes (important!) if nothing else.\n\nHow frequently/quickly you'll get those updates, without paid support, is another matter. But to tell security that you're using a version that still gets updates is important.\n\nYou also get updates moving to the latest feature release every six months. However, if there's a risk that you'd stop updating every six months then there's a chance you are running an unsupported version in production that will no longer get patches, and that tends to check the wrong boxes on various security and compliance lists.\n\nTL;DR - It's a big commitment from Dev & Ops to use a non LTS release.""}, {'Subreddit': 'Java', 'Reddit_Title': ""How best to explain that Java LTS doesn't mean what people think it does?"", 'CommentAuthor': 're-thc', 'Comment': 'Print out pron‚Äôs message about LTS all over the office and stick it as your background during video call :p /s'}, {'Subreddit': 'Java', 'Reddit_Title': ""How best to explain that Java LTS doesn't mean what people think it does?"", 'CommentAuthor': 'wildjokers', 'Comment': ""It is impossible to convince people that LTS doesn't mean anything unless you pay for support. I have given up trying.""}, {'Subreddit': 'Java', 'Reddit_Title': ""How best to explain that Java LTS doesn't mean what people think it does?"", 'CommentAuthor': 'QualitySoftwareGuy', 'Comment': 'I‚Äôm a bit confused on this. Adoptium/Eclipse Temurin supports LTS versions for at least four years (source: https://adoptium.net/support/). Even though it‚Äôs not the 8 years that I think Oracle provides, surely 4 years is not ‚Äúmeaningless‚Äù? Maybe I‚Äôm missing something.'}, {'Subreddit': 'Java', 'Reddit_Title': ""How best to explain that Java LTS doesn't mean what people think it does?"", 'CommentAuthor': 'FeedingMyCatsaHassle', 'Comment': ""If the term LTS bothers you so much when the word is 'support', then change it to 'service.'\n\nUltimately what companies want is the knowledge that if some major security hole reveals itself, their LTS vendor will _probably_ offer a patch. And this is generally what happens, regardless of whether they are paying for support.\n\nPeople moan about LTS being meaningless based on their misunderstanding of what's important to people about it, give it a rest.""}]"
Java,Ensuring the thread-safety of the entire codebase,https://www.reddit.com/r/java/comments/12zap31/ensuring_the_threadsafety_of_the_entire_codebase/,16,36,Fokezy,1682496761.0,"After spending a few years programming in languages that favour other flavours of concurrency besides or on top of threads, I'm back to writing Java in enterprise projects, and it got me wondering.

I just encountered a bug where my non-thread safe cache implementation caused race conditions due to a piece of code way up the call stack suddenly using parallel streams. Now it seems to me like every piece of code that I write has to be written with thread-safety in mind, since I have no idea who might access it down the line. On the other side, if I want to introduce a seemingly innocent use of threads somewhere, there is hardly a way for me to insure that the entire call chain won't experience any concurrency problems, short of understanding every line of code in the project.

Now, writing thread-safe code wouldn't be so bad if it weren't hard to verify, and ugly to read, and as far as I know, Java has no language constructs to statically test thread-safety.

How do others approach this problem in large codebase?","[{'Subreddit': 'Java', 'Reddit_Title': 'Ensuring the thread-safety of the entire codebase', 'CommentAuthor': 'thomasjjc', 'Comment': 'I do try to make every part of the application thread-safe. I do that by using immutable classes for data and writing services so that they do not share state.\nIf I have to share state, I usually can use synchronization, concurrent collections, or explicitly thread-safe containers (atomic, blocking queue, etc.).\nIf that is not possible, then I document it on the class.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Ensuring the thread-safety of the entire codebase', 'CommentAuthor': 'john16384', 'Comment': ""It is up to the user (the parallel stream) to ensure that the code they're using is thread safe. Writing everything to be thread safe has performance penalties that make no sense when you don't need it.\n\nWhat's more, thread safety is only one aspect when doing parallel tasks. The task may not fail, but does it make sense when other tasks are operating on the same data at the same time?\n\nSuppose a task is attaching a new value to a list, while another task removes all items in the list. It's thread safe, the list won't get into an inconsistent state, but the task may not do what you expected. The first task may expect to see it's new item at the end of a long list, but sees only the item it added, while the other task may expect to see an empty list, but still sees one item present.\n\nI've seen far too often people just using or switching to `ConcurrentHashMap` and think that all their problems are over. Sure, the map won't get confused anymore, but there's far more to it.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Ensuring the thread-safety of the entire codebase', 'CommentAuthor': 'Silent-Manner1929', 'Comment': 'Writing robust multi-threaded code isn\'t easy, there is a learning curve, it\'s a skill you have to learn.\n\nIMHO, as a general principle you should always be making classes threadsafe untless there is a good reason not to.  (Some people would argue there is never a reason not to.)  So, yes, you are exactly right when you say ""*every piece of code that I write has to be written with thread-safety in mind, since I have no idea who might access it down the line*"".\n\nAnd set up some integration tests. Unit tests are great but they test classes in isolation from each other and won\'t catch threading issues.  Integration tests can (and should) exercise the code across multiple threads to check for things like deadlocks and so on.  If you use maven, take a look at failsafe which helps with this (I don\'t use gradle, my guess is that failsafe works with that too).'}, {'Subreddit': 'Java', 'Reddit_Title': 'Ensuring the thread-safety of the entire codebase', 'CommentAuthor': 'None', 'Comment': ""Thread safety is only a risk when you have shared mutable state. No shared mutable state, no thread safety risk. IMO, most of your codebase shouldn't be shared mutable state. At least not in your business logic.\n\nYou can't pre-emptively make all your code synchronized or concurrent or whatever. As other folks have said, there's a performance cost to thread safety.\n\nBut overall, the easiest thread safety is to just not write code that has a thread safety risk.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Ensuring the thread-safety of the entire codebase', 'CommentAuthor': 'rzwitserloot', 'Comment': '> Now it seems to me like every piece of code that I write has to be written with thread-safety in mind, since I have no idea who might access it down the line.\n\nThis is 1990s thinking. It\'s what caused `StringBuffer`, `Vector`, etcetera to exist (most of their relevant methods are marked `synchronized`, and they promise that invoking __single methods__ are atomic and not a JMM heisenbug issue).\n\nThis doesn\'t work. It cannot be made to work. This mindset is wrong.\n\nBut to explain why it is wrong, and what the true solution is (which certainly isn\'t perfect either, so don\'t expect miracles here), we need to cover some ground.\n\n## JMM Heisenbugs\n\nThe JMM (Java Memory Model) is that section of the JLS that explains that java does not actually guarantee that any writes to any field are visible. Unless that bytecode that wrote a field has a \'Happens-Before\' relationship with that bytecode that reads it.\n\nSo, what happens when no such relationship exists? __THAT IS THE HEISENBUG__ - no guarantees! A JVM is legally allowed to give you either value. In fact, with `long` and `double` it can even give you a teared version (the first 32 bits of one state and the last 32 bits of the other state, combined). Before you say: Hah! 64-bit chips mean at least I don\'t have to care about that! - nope, value types incoming, which re-introduce the problem.\n\nThus, you can have this code:\n\n```\nprivate int x;\n\npublic void test() {\n  x = 5;\n  new Thread(() -> x = 10).start();\n  Thread.sleep(TimeUnit.DAYS.toMillis(9));\n  System.out.println(x);\n}\n```\n\nA JVM is allowed to print 5\'. It is also allowed to print \'10\'. It is not a bug in the JVM that this is the case. This code is the bug. But, __you cannot unit test this reliably__. a JVM is, after all, free to return 5 EVERY TIME here. So how do you know that tomorrow it\'ll print 10 instead? There is _no way to know that_. Hence, JMM bugs are __really bad__ - they lead to DAYS of frantic bug hunts.\n\nSo, let\'s try to avoid them entirely. I get why you want to do this. But, you can\'t do that either.\n\n## Why the \'all thread safe all the time model does not work\'\n\nBecause we as programmers love to lop things up into pieces. Objects and concepts expose functions and we compose at will. Let\'s write some code that caches some lookups:\n\n```\nprivate final Map<String, String> nlToDe = new HashMap<>();\npublic String translateToGerman(String dutch) {\n  if (nlToDe.containsKey(dutch)) return nlToDe.get(dutch);\n  String german = translationService.translate(dutch);\n  nlToDe.put(dutch, german);\n  return german;\n}\n```\n\nSeems simple, right? Except, of course, hashmap isn\'t safe. So let\'s fix it with:\n\n```\nprivate final Map<String, String> nlToDe = Collections.synchronizedMap(new HashMap<>());\n...\n```\n\n__But this is still broken!__ the problem is, once we\'ve done this \'threadsafe at all times\' thing, __all operations must be atomic__ and our method is not. It is __NOT POSSIBLE__ for any map implementation to be written such that this code is going to work out. 2 threads can both try to translate the same word, both notice that the dutch word isn\'t in our map yet, both call the translation service - __even if__ that hashmap is synchronized. They can\'t corrupt the map but they can easily both call the translation service and waste translation API credits.\n\nInstead, the caller is the only one who can fix this if we stick with this model:\n\n```\npublic String translateToGerman(String dutch) {\n  synchronized (nlToDe) {\n    if (nlToDe.containsKey(dutch)) return nlToDe.get(dutch);\n    String german = translationService.translate(dutch);\n    nlToDe.put(dutch, german);\n    return german;\n  }\n}\n```\n\nThis fixes the problem - with that code it is no longer possible to waste creds looking up the same word twice. However, given that we now already explicitly synchronize, there is no point for the map to be in any way or form caring about it.\n\nThis gets us to a key point:\n\n__Unless the API is explicitly designed for multicore access, you CANNOT make classes inherently thread safe__.\n\nThink about it. How do you propose a hypothetical \'ThreadSafeHashMap\' is written to avoid the above problem? If you can\'t solve the above problem, with inherent value is there in a hashmap that merely guarantees that any single operations on it are safe?\n\nThe answer is generally: ""There is no way to write such a map"" and ""there is very little point to that"".\n\nAdd in the notion that `synchronized` isn\'t exactly free, and you quickly conclude that making hashmap \'internally safe\' is pointless.\n\n__The OpenJDK team agrees with this logic and has done so for 2 decades or thereabouts__.\n\nThe OpenJDK team started where you are at: Vector (ArrayList before ArrayList existed), Hashtable (HashMap before HashMap existed), and StringBuffer (StringBuilder  before StringBuilder existed) are all \'internally synchronized\'. And are all now _obsolete_, replaced by non-internally-synchronized variants. Because they came to the same conclusion.\n\n## This is freeing you\n\nThis is nice. Given that any map impl that has in its javadoc: ""/** Internally thread safe. */"" is either meaningless or useless, you __don\'t have to, yay__ - you are freed.\n\nThe onus of ensuring thread safety is on the callers, not on the library authors. Now, you can\'t just wash your hands entirely as a library author, you have to keep in mind that your users might want API that is easy to use so that __they__ can do it right. This is why `java.util.concurrent.ConcurrentHashMap` exists, and methods like `computeIfAbsent`.\n\n## So how do you do it right as caller?\n\nBy going straight to the source and lopping this shit\'s head right off.\n\n__Do not ever share _mutable_ fields between threads, period__\n\nOnce you no longer do that, you\'re in the clear. No JMM Heisenbugs can befall you. _Ever_. This is the only true way to do it right, because any errors here are untestable.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Ensuring the thread-safety of the entire codebase', 'CommentAuthor': 'erjiin', 'Comment': ""I'm doing some (light) integration tests with a junit runner like tempus fugit [http://tempusfugitlibrary.org](http://tempusfugitlibrary.org).""}, {'Subreddit': 'Java', 'Reddit_Title': 'Ensuring the thread-safety of the entire codebase', 'CommentAuthor': 'sweating_teflon', 'Comment': ""It's hard to come up with a definitive solution using current Java. I'd look into using the Checker Framework to supplement the Java type system with Send and Sync marker interfaces, similar to what Rust does.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Ensuring the thread-safety of the entire codebase', 'CommentAuthor': 'PiotrDz', 'Comment': ""Wellness, i guess you can solve it by your system architecture. \nServices (singletons) should not be stateful. \nOf course sometimes you need to cache some data , so this caches should be the only state full thing in your services, and they have to be thread-safe. \nBut besides cache, you should have defined entry points where multithreading is involved. The higher the stack the better. So you for example split processing into batches, and process each batch sequentially. At processing level you don't have to think about mutlithreading, as all object are called by the same thread. \nAlso, objects itself shall be immutable. Make use of records mandatory. It is unfortunate that default state in java is mutable, but fortunately you can fix it by using records.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Ensuring the thread-safety of the entire codebase', 'CommentAuthor': 'AnEmortalKid', 'Comment': 'I use This pattern to test mine \n\nhttps://www.yegor256.com/2018/03/27/how-to-test-thread-safety.html'}, {'Subreddit': 'Java', 'Reddit_Title': 'Ensuring the thread-safety of the entire codebase', 'CommentAuthor': 'Amazing-Cicada5536', 'Comment': 'Verifying thread safety statically in general programming is straight up impossible, it‚Äôs in the same category as the halting problem.\n\nIt‚Äôs good practice to rely on immutable, or at least thread safe objects for communication between threads, that way you circumvent most of the problems.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Ensuring the thread-safety of the entire codebase', 'CommentAuthor': 'Iryanus', 'Comment': ""I would suggest, as a first step, document thread-safe classes with the appropriate annotations (`@ThreadSafe` and `@NotThreadSafe` exist, iirc Brian Goetz pioneered those). This way, you can, for example, add an ArchUnit rule that demands that each class that is itself declared `@ThreadSafe` may not use classes that are `@NotThreadSafe`. And then it's simply a question of following contracts. If you use something, check if it's thread-safe or not. The onus is here on the one start multiple threads.""}]"
Java,CI - dependency management automation,https://www.reddit.com/r/java/comments/12yt1rd/ci_dependency_management_automation/,44,19,naked-space-monkey,1682450381.0,"Hi all!
Do you use any dependency automation for the Java/Spring projects in your organization? i.e. something in your CI that updates external and internal dependencies?
Some colleagues at work are looking into renovatebot but it will need some substantial configuring","[{'Subreddit': 'Java', 'Reddit_Title': 'CI - dependency management automation', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Java', 'Reddit_Title': 'CI - dependency management automation', 'CommentAuthor': 'macpreiz', 'Comment': 'If you use GitHub a similar tool available named Dependabot'}, {'Subreddit': 'Java', 'Reddit_Title': 'CI - dependency management automation', 'CommentAuthor': 'jevring', 'Comment': ""We use dependabot, and we're pretty happy with it. We used renovate for a while about two years ago, but mostly because dependabot wasn't available on gitlab, or something like that. Dependabot isn't perfect, but it gets you 80% of the way there, which is enough.\n\nJust make sure you have enough tests. Otherwise you'll get stuff that breaks when it's actually deployed. Especially with Google libraries. They are the absolute worst.""}, {'Subreddit': 'Java', 'Reddit_Title': 'CI - dependency management automation', 'CommentAuthor': 'gaelfr38', 'Comment': ""Definitely RenovateBot.\n\nShould not need much configuration, what makes you feel you'll have anything to configure?""}, {'Subreddit': 'Java', 'Reddit_Title': 'CI - dependency management automation', 'CommentAuthor': 'Worth_Trust_3825', 'Comment': 'You might want to try versions plugin and its display-dependency-updates goal. https://www.mojohaus.org/versions/versions-maven-plugin/display-dependency-updates-mojo.html\n\nI suggest against any automation approach that will blindly create pull requests to update the said dependencies because that will be just noise. Some frameworks, and libraries tend to merge, and split modules. The automation will not figure out how to replace that, as the dependency management tools just do not track that.\n\nAs u/maxip89 points out, not everyone treats versions the same way. Hell, even my current project has monthly release schedule, where our version is release date and the only recommendation is ""don\'t skip versions, they provide deprecation notices if anything changes"".\n\nJust scan your dependencies if there are any reported issues with them and move on.'}, {'Subreddit': 'Java', 'Reddit_Title': 'CI - dependency management automation', 'CommentAuthor': 'maxip89', 'Comment': 'This was tried since 30 years.\n\nIn the end you have some developers (Yeah you Spring Security) that do breaking changes in a minor release. Which break your automatic dependency management bot.\n\nIn the end it will cost you more time because you have to search first ""why now the build is no more working"". \n\nIn my experience manual dependency management is more time efficient then trying to automate it. \n\nIn my eyes this is the same management stuff like doing automated testing and thinking you don\'t have to test anymore.\n\n&#x200B;\n\nFor creating the BOM there are too much tools out there which can create it.'}, {'Subreddit': 'Java', 'Reddit_Title': 'CI - dependency management automation', 'CommentAuthor': 'gaelfr38', 'Comment': 'RenovateBot supports by default to open a single PR for dependencies of the same group. You should not need manual rules for that.'}, {'Subreddit': 'Java', 'Reddit_Title': 'CI - dependency management automation', 'CommentAuthor': 'naked-space-monkey', 'Comment': ""Hey! Thanks for your comment! I've only seen some very initial testing for the moment and many of the updates it was proposing were either breaking the build for an individual project or would have broken it downstream (i.e. there was also a major Sping Boot version bump).\nWe also use BOMs, but it's possible our project definitions nees some care :)\nIf most of the configuration is only necessary for BOMs that would be great indeed!""}, {'Subreddit': 'Java', 'Reddit_Title': 'CI - dependency management automation', 'CommentAuthor': 'ITCoder', 'Comment': 'Company wide maven bom is what I have seen before. Does renovatebotn just updates the version of dependencies in pom ?'}, {'Subreddit': 'Java', 'Reddit_Title': 'CI - dependency management automation', 'CommentAuthor': 'gaelfr38', 'Comment': ""Why would it cost more time? Automated dependency doesn't mean you merge blindly: if test/build do not pass, you don't merge. Or if you know a dependency has tendency to break things (looking at Jackson, logback, stuff like that), you just do manual testing on your side.\n\nBut at least you are notified automatically of new versions and 90% of the time you can merge blindly.\n\nAt least that's my experience. It has been a game changer for all our projects (Java as well as others including Python, Scala, Node, Kubernetes...) and we use it for 3/4 years.""}, {'Subreddit': 'Java', 'Reddit_Title': 'CI - dependency management automation', 'CommentAuthor': 'None', 'Comment': '[deleted]'}]"
Java,How to practice Java Performance Optimization or JVM performance tuning?,https://www.reddit.com/r/java/comments/12on914/how_to_practice_java_performance_optimization_or/,55,24,semsayedkamel2003,1681675909.0,"I am interested in learning how to tune the JVM and how changing it's continuations can affect the performance of an application, but currently I am not working at a company to know how this works in real-life, but I am interested to experiment this stuff on my own. Any ideas on how to get started? I watched a couple of talks on this topic but I don't know how to apply that knowledge in practice in my projects.","[{'Subreddit': 'Java', 'Reddit_Title': 'How to practice Java Performance Optimization or JVM performance tuning?', 'CommentAuthor': 'karianna', 'Comment': ""We practice and teach this a lot internally at Microsoft. This may be surprised Pikachu for some I know - but we do have 2M+ JVMs running internally here!  Here's a shortlist of considerations when entering this space :-):\n\n1. **A methodology** \\- E.g., Kirk Pepperdine‚Äôs Java Performance Diagnostic Model, Brendan Gregg‚Äôs USE, Monica Beckwith's Top-Down. There are others but without an approach of sorts you tend to be shooting in the dark.\n2. **Performance Goals** \\- SLA/SLO - e.g., ‚ÄúWe want a min 1000 txns/s with <= 500ms latency at P999 on a Standard\\_DS\\_v4 VM‚Äù\n3. **App Architecture** \\- You need an understanding of both the logical architecture and the physical architecture\n4. **Timeboxing / Time Budgeting / Observability -** E.g., ‚ÄúThe round trip includes \\~200ms of JS, 400ms in the JVM, and 300ms in the DB‚Äù**Some Math and understanding of statistical techniques -** e.g., P99 latency curves, Baselining, sampling, multiple measurements, smoothing etc.\n5. **Understanding of the technology Stack -** How does the JVM, CPU, Memory, O/S, Hypervisors, Docker, K8s all work?  How does each layer surface key perf metrics to the next layer?\n6. **JVM** \\- How does GC work, JIT work, JMM and so forth\n7. **Tools and Tactics -** This stuff changesload testing, observability tooling for timeboxing, resource monitoring, analysis / diagnostic tooling.  Things like JFR/JMC, GCToolkit and a \\*ton\\* more.\n\nYou learn in part by doing in this space and you can also join the Java Performance Tuning community on LinkedIn.""}, {'Subreddit': 'Java', 'Reddit_Title': 'How to practice Java Performance Optimization or JVM performance tuning?', 'CommentAuthor': 'WrickyB', 'Comment': 'Use tools like JMH, and profilers, to measure performance, and find hotspots respectively, to find where you need to optimise.'}, {'Subreddit': 'Java', 'Reddit_Title': 'How to practice Java Performance Optimization or JVM performance tuning?', 'CommentAuthor': 'devchonkaa', 'Comment': 'the default configuration is already best for 90% of cases.\nThere is a popular book: java performancd. definitive guide.\nMight be interesting to learn more about jvm parameters'}, {'Subreddit': 'Java', 'Reddit_Title': 'How to practice Java Performance Optimization or JVM performance tuning?', 'CommentAuthor': 'Qinistral', 'Comment': 'There\'s a bunch of open source applications you could run to play with and see how JVM tuning changes behavior. Consider something like Solr or ElasticSearch which has more overhead than something like a queue (like Kafka or ActiveMQ), or write a little app in something like Vaadin or find some other open source app to play with.\n\nYou could also just google ""how to tune JVM for X"" or ""what jvm params for X"" and you\'ll get a lot of common advice. This will show you what most people even bother with.\n\nMini homework: Learn about object pointers. Eg. https://www.baeldung.com/jvm-compressed-oops'}, {'Subreddit': 'Java', 'Reddit_Title': 'How to practice Java Performance Optimization or JVM performance tuning?', 'CommentAuthor': 'teapotJava', 'Comment': '* Write or find existing benchmarks for anything you like (Java features, API/spec, libraries etc.).\n* Measure (different Java versions or JVMs, API implemenentations etc, GCs etc.).\n* Compare, profile and explain results.\n* Optimize existing code and verify your change.\n* Present and discuss your findings.'}, {'Subreddit': 'Java', 'Reddit_Title': 'How to practice Java Performance Optimization or JVM performance tuning?', 'CommentAuthor': 'semsayedkamel2003', 'Comment': 'Thanks everyone for your suggestions and advice.'}, {'Subreddit': 'Java', 'Reddit_Title': 'How to practice Java Performance Optimization or JVM performance tuning?', 'CommentAuthor': 'Comprehensive-Pea812', 'Comment': 'Nowadays I dont hear people tune JVM anymore since in general application is scalable so tuning JVM is very last resort or if there is an obvious issue spotted.'}, {'Subreddit': 'Java', 'Reddit_Title': 'How to practice Java Performance Optimization or JVM performance tuning?', 'CommentAuthor': 'zorelx', 'Comment': 'I would only do this if I was paid a lot of money lololol'}, {'Subreddit': 'Java', 'Reddit_Title': 'How to practice Java Performance Optimization or JVM performance tuning?', 'CommentAuthor': 'yawkat', 'Comment': '> You learn in part by doing in this space and you can also join the Java Performance Tuning community on LinkedIn.\n\nLearning by doing is really hard in the perf space compared to ""normal"" programming imo. In normal programming, you can fix a bug and will be pretty sure that it\'s gone. But in perf, it\'s easy to measure the wrong things and believe you\'ve improved something, when you really haven\'t. I never would have thought about coordinated omission in benchmarking without reading about it for example.'}, {'Subreddit': 'Java', 'Reddit_Title': 'How to practice Java Performance Optimization or JVM performance tuning?', 'CommentAuthor': 'dpash', 'Comment': "">JMH\n\nYep, do not implement your own benchmarking, because your results will almost certainly be invalid unless you know what you're doing (hint: you probably don't).""}, {'Subreddit': 'Java', 'Reddit_Title': 'How to practice Java Performance Optimization or JVM performance tuning?', 'CommentAuthor': 'brunocborges', 'Comment': 'Unless you are running the JVM inside containers with little CPU/memory.\n\nIn this case, the defaults are not great.'}]"
Java,Integrating npm with Maven in a mono repo: seeking advice and best practices,https://www.reddit.com/r/java/comments/12g885k/integrating_npm_with_maven_in_a_mono_repo_seeking/,16,34,justUseAnSvm,1681012982.0,"Hey everyone!

I know this is a Java group, but I figured some of you might have some experience with Maven, which is why I'm posting here. I work on a mono repo that's mostly using Java, but we also have around 20 npm packages that we use for various things like front-end development, infrastructure, and other stuff. The problem is that these npm packages have interdependencies, so it's essential that every package is built using the same version of its dependencies. We have some dependencies from the monorepo, so we often need to bump versions for upgrades and forget to do it somewhere.

We use a Maven plugin that just fires off ""npm ci"" and builds whatever is in the package lock file. However, about once a month, we end up breaking something because of incompatible types or other issues that come up when we have multiple versions of a dependency. It's a terrible way to build software, and we end up fiddling with package versions in several places until things work. (Cabal hell, anyone?)

We are committed to Maven, as switching to something else is just a massive lift and would break IDE support. I'm wondering if any of you have experience integrating npm with Maven to ensure that all the packages installed are consistent. I've looked at peerDependencies, npm workspace, Maven plugins, and right now the plan is to try them all or just build Java and node projects separately and tie them together with a Makefile.

Our node engineering feels second class, and I'd like to change that. If any of you have experience or best practices you can share, I'd appreciate it. Let's have a discussion!","[{'Subreddit': 'Java', 'Reddit_Title': 'Integrating npm with Maven in a mono repo: seeking advice and best practices', 'CommentAuthor': 'emberko', 'Comment': 'I use this all the time.\n\nhttps://github.com/eirslett/frontend-maven-plugin'}, {'Subreddit': 'Java', 'Reddit_Title': 'Integrating npm with Maven in a mono repo: seeking advice and best practices', 'CommentAuthor': 'MemerinoPanYVino', 'Comment': 'Even in monorepo, we keep the projects for backend and frontend separate.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Integrating npm with Maven in a mono repo: seeking advice and best practices', 'CommentAuthor': 'overachiever', 'Comment': 'Put all your javascript code inside a single maven module and use a JS monorepo tool to manage the interdependencies between the packages (e.g. npm workspaces + turborepo or NX)'}, {'Subreddit': 'Java', 'Reddit_Title': 'Integrating npm with Maven in a mono repo: seeking advice and best practices', 'CommentAuthor': 'Worth_Trust_3825', 'Comment': 'Check out vaadin template project structure. As of vaadin 11 they integrate npm into their frontend development builds, which has both maven and npm in the repository. If I remember correctly, they also do it your way: maven calls npm to do things for browser related builds, while it handles rest itself.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Integrating npm with Maven in a mono repo: seeking advice and best practices', 'CommentAuthor': 'Prateeeek', 'Comment': ""Wait, if I understand the problem correctly, it's the occasional version changes which is a problem?, or is it an integration problem?""}, {'Subreddit': 'Java', 'Reddit_Title': 'Integrating npm with Maven in a mono repo: seeking advice and best practices', 'CommentAuthor': 'Zardoz84', 'Comment': 'On my workplace, what we did is :\n\n* Putting all npm stuff on his own independent repository.\n* Having a single maven project where we have stored the base package.json (and related files) that are to be used in our maven projects. Every maven project that need to use these files, and build the frontend, have a dependency to this maven proyect. We calle it ""config-client"".\n* Using frontend-maven-plugin, in our to handle nodejs + npm from maven in our maven proyects that need to build a frontend (IE. installing nodejs, runing ""npm i"" and executing ""npx XXX"")\n\nNot have any sense mixing all npm stuff with maven stuff.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Integrating npm with Maven in a mono repo: seeking advice and best practices', 'CommentAuthor': 'chabala', 'Comment': "">integrating npm with Maven to ensure that all the packages installed are consistent\n\nYou're looking for [WebJars](https://www.webjars.org/). Any NPM package can be automatically converted to a WebJar, and stored in Central; the most popular packages already are.\n\nPlus, once it's in Central, there's no unpublishing. Remember the left-pad incident? No downtime that day in my shop, we were using the WebJar.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Integrating npm with Maven in a mono repo: seeking advice and best practices', 'CommentAuthor': 'redikarus99', 'Comment': 'Why do you use monorepo? The first thing our developers did when the former lead dev left the company was to move into a multirepo solution, and they were extremely happy afterwards. Might that help in your problem?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Integrating npm with Maven in a mono repo: seeking advice and best practices', 'CommentAuthor': 'spellcrit', 'Comment': 'the same here'}, {'Subreddit': 'Java', 'Reddit_Title': 'Integrating npm with Maven in a mono repo: seeking advice and best practices', 'CommentAuthor': 'Zardoz84', 'Comment': 'Same thing'}, {'Subreddit': 'Java', 'Reddit_Title': 'Integrating npm with Maven in a mono repo: seeking advice and best practices', 'CommentAuthor': 'justUseAnSvm', 'Comment': 'Thanks. We have one requirement that openApi specs from Java are used for a node CLI tool, but I think we could swing it‚Ä¶'}]"
Java,Testdatabase Provider,https://www.reddit.com/r/java/comments/12d5reh/testdatabase_provider/,47,11,Jotschi,1680746718.0,"I don't like to wait for my database tests to startup the container, create the db, run flyway and populate the test fixture. I thus wrote a tool which essentially is able to handout throwaway databases by constantly creating copies from a template database. This way a test can request a DB and directly get one from the pool. When the test is done the db will be removed in the background.

I wrote a similar tool a few years ago for a company I worked for. It reduced the test duration from 8h down to 45min. I now decided to rewrite it and OSS it because I need it for my own project.

I however don't think it is suitable for smaller projects. Those are better off using Testcontainers instead.The project consists of a server, junit4, junit5 extensions and an optional maven plugin.

[https://github.com/metaloom/testdatabase-provider](https://github.com/metaloom/testdatabase-provider)","[{'Subreddit': 'Java', 'Reddit_Title': 'Testdatabase Provider', 'CommentAuthor': 'IIDaFuQII', 'Comment': 'Okay but why? Testcontainers does pretty much the same with throwaway db‚Äôs'}, {'Subreddit': 'Java', 'Reddit_Title': 'Testdatabase Provider', 'CommentAuthor': 'mikotui', 'Comment': 'Good stuff. I am currently restructuring our integration Tests and this could bei handy'}, {'Subreddit': 'Java', 'Reddit_Title': 'Testdatabase Provider', 'CommentAuthor': 'AcanthisittaEmpty985', 'Comment': ""I see this more for an integration test framework  than for unit testsing; my understanding is that unit testing doesn't rely on external sources (like Postgress) and relies on mocks if neccesary.\n\nThis project should try to use embeeded databases like Derby, H2 os HSQLDB""}, {'Subreddit': 'Java', 'Reddit_Title': 'Testdatabase Provider', 'CommentAuthor': 'bringero', 'Comment': ""Interesting... I'll check it on Monday. Thank you!""}, {'Subreddit': 'Java', 'Reddit_Title': 'Testdatabase Provider', 'CommentAuthor': 'dmigowski', 'Comment': ""At least with PostgreSQL it takes literally milliseconds to clone a database, so maybe this wouldn't even need to async fill new databases and hog valuable CPU cycles.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Testdatabase Provider', 'CommentAuthor': 'ForeverAlot', 'Comment': ""Testcontainers is leaps and bounds better than pretending an H2 is meaningfully substitutable but they still don't have a solution to running schema migrations and application code with different roles. I don't know if this tool supports that but by owning the database container you get that ability.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Testdatabase Provider', 'CommentAuthor': 'Jotschi', 'Comment': 'At scale it becomes more resource and time efficient to use a dedicated database instead of starting up new testcontainers for each testcase / testclass. Even when using snapshots of a database filesystem ([https://github.com/metaloom/postgresql-snapshot-testcontainer](https://github.com/metaloom/postgresql-snapshot-testcontainer)). Restarting the daemon + setup of the db takes some time.  At scale this can add up. If you have a way to avoid this (e.g. prune tables) that would work too. I choose to completely decouple this operation from the test execution/setup.  \nAdditionally tests in my IDE now start in milliseconds and not in seconds.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Testdatabase Provider', 'CommentAuthor': 'Jotschi', 'Comment': 'Good point. Originally I used this with MariaDB and afaik it does not have a way to clone databases. With PostgreSQL it may be enough to clone the db during startup of a test.  I have not tested that.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Testdatabase Provider', 'CommentAuthor': 'jAnO76', 'Comment': 'You can just keep testcontainers alive during your whole test run‚Ä¶ simply override the default lifecycle. I have some code lying around that does just that (not at that machine though) can share later.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Testdatabase Provider', 'CommentAuthor': 'Jotschi', 'Comment': 'Yes, you can either choose to use a JUnit 4 static rule or similar and only startup the container per testclass or even choose to reuse the container. See [https://www.testcontainers.org/features/reuse/](https://www.testcontainers.org/features/reuse/)  \n\n\nEvery testcase however still needs its own database. It may taint the DB and affect assertions that other cases run when using the same db. If you however manage to clone the db as dmigowski suggested you would not have the problem.  \n\n\nI may try to implement an approach which dynamically allocates DBs without the use of a server. The only complicated problem here is to manage concurrency issues. However good comments for new ideas. Thank you all.'}]"
Java,Is it ok if my portfolio and github have java only related projects?,https://www.reddit.com/r/java/comments/12d1lds/is_it_ok_if_my_portfolio_and_github_have_java/,20,21,smaller_gamedev,1680736922.0,"I'm mostly a Java nerd, it was our main language at university so I'm super comfortable with it and it's ecosystem.

I make games, windows app, Android and (obviously) Web dev using Java. So I'm pretty much using it for everything

But, I keep reading online that it's much more attractive for employers to have Python and Javascript projects than just Java

So I'm really torn if I should stick to Java and keep improving my skills, or should I take a break and focus on other dominant languages?","[{'Subreddit': 'Java', 'Reddit_Title': 'Is it ok if my portfolio and github have java only related projects?', 'CommentAuthor': 'humoroushaxor', 'Comment': ""You're completely fine.\n\nI have no idea why, but search results and surveys massively under-represent the demand for Java. Probably because Java engineers are too busy working to participate.\n\nGoogle, Apple, Microsoft, FinTech, Defense, Health care all have massive amounts of Java developer jobs. Especially given these companies are huge. Even companies like Netflix  have shit tons of Java to the point of leading parts of the ecosystem.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Is it ok if my portfolio and github have java only related projects?', 'CommentAuthor': 'PartOfTheBotnet', 'Comment': ""If you apply to jobs that do Java, having Java is good.\n\nIf you apply to jobs that do other things, having those other things is good. Some places value wider flexibility, others value more narrow expertise. It all depends on where you're looking.\n\n***\n\nAlso, this may not fit the sub's content policy. Probably better in /r/cscareerquestions""}, {'Subreddit': 'Java', 'Reddit_Title': 'Is it ok if my portfolio and github have java only related projects?', 'CommentAuthor': 'zephyy', 'Comment': ""You'll be lucky if anyone actually looks at your portfolio instead of just filtering you based on Leetcode ability.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Is it ok if my portfolio and github have java only related projects?', 'CommentAuthor': 'Asdas26', 'Comment': ""Do you want a Java programming job? Then Java projects are good. Are you interested in Python or JS jobs? Then add Python and Javascript projects. It's that simple.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Is it ok if my portfolio and github have java only related projects?', 'CommentAuthor': 'hutthuttindabutt', 'Comment': 'Nope. Straight to coder hell.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Is it ok if my portfolio and github have java only related projects?', 'CommentAuthor': 'People_Sucker101', 'Comment': 'You probably want to show employers that you can learn different languages.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Is it ok if my portfolio and github have java only related projects?', 'CommentAuthor': 'coverslide', 'Comment': ""Honestly, I don't see many employers taking a hard look at peoples' githubs. Most of the time, what employers care about is that you can execute on a project.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Is it ok if my portfolio and github have java only related projects?', 'CommentAuthor': 'GrayDonkey', 'Comment': ""Employers often want full stack developers, someone that can work on the front-end and the backend. If you are applying for Android dev jobs a lot of places want Kotlin now although you might find a couple still using Java. Almost all other front-end work won't be in Java: AWT, Swing, JavaFX, JSP, JSF, are all uncommon so you'd need to look specifically for jobs needing those. The most common UI platforms usually involve some type of web framework such as React which is JavaScript/TypeScript. You want a desktop app then just bundle your web app with a browser (electron).\n\nBut the web based frontends pair nicely with a Java backend. Sometimes Spring Web, occasional JAX-RS, sometimes other micro service Java frameworks. Or even server less Java services like AWS lambda.\n\nAnd since a lot of developers end up needing to learn JavaScript for the frontend they want to apply their knowledge when creating backends so you have Node based services becoming more popular.\n\nLearn HTML/CSS/JavaScript and a popular web framework like React. Combined with your Java knowledge you'll be in a better place than developers that just know JavaScript.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Is it ok if my portfolio and github have java only related projects?', 'CommentAuthor': 'PritchardBufalino', 'Comment': 'You will be just fine if you commit to Java. Unless you want to go into data engineering or machine learning'}, {'Subreddit': 'Java', 'Reddit_Title': 'Is it ok if my portfolio and github have java only related projects?', 'CommentAuthor': 'greglturnquist', 'Comment': 'If you were to become an expert in Java, you‚Äôll have no problem finding a position at a big shop. And if you like Java, even better.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Is it ok if my portfolio and github have java only related projects?', 'CommentAuthor': 'Skies1069', 'Comment': 'Dude, Java is in high demand. You shouldn‚Äôt have an issue getting placement at a good company.'}]"
Java,Any Java Open source projects?,https://www.reddit.com/r/java/comments/12cmgms/any_java_open_source_projects/,0,14,EnvironmentFar968,1680705455.0,"Wondering if there were any out there for people to contribute to.

Edit: Oh, I see, I'm a dumb.","[{'Subreddit': 'Java', 'Reddit_Title': 'Any Java Open source projects?', 'CommentAuthor': 'tonydrago', 'Comment': 'WTF? There are thousands, possibly millions of them.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any Java Open source projects?', 'CommentAuthor': '4z01235', 'Comment': 'How about Java itself?\n\nhttps://github.com/openjdk/'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any Java Open source projects?', 'CommentAuthor': 'i_donno', 'Comment': 'On github\nhttps://github.com/search?q=language%3AJava'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any Java Open source projects?', 'CommentAuthor': 'cyclewanderist', 'Comment': 'I did the WTF? as well. \n\nJava is the second most common language in GitHub for pull requests, after Python. [https://madnight.github.io/githut/#/pull\\_requests/2022/4](https://madnight.github.io/githut/#/pull_requests/2022/4) [https://github.com/readme/featured/java-programming-language](https://github.com/readme/featured/java-programming-language) \n\nThe JVM itself is open source ([https://openjdk.org/](https://openjdk.org/)) as is even the language specs (in a way, because you can contribute to them--[https://openjdk.org/jeps/0](https://openjdk.org/jeps/0), [https://jcp.org/en/jsr/overview](https://jcp.org/en/jsr/overview))'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any Java Open source projects?', 'CommentAuthor': 'C_Madison', 'Comment': 'https://projects.apache.org/projects.html?language#Java\n\nTake your pick.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any Java Open source projects?', 'CommentAuthor': 'stefanos-ak', 'Comment': '""yes""'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any Java Open source projects?', 'CommentAuthor': 'Puyo95', 'Comment': 'jEdit'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any Java Open source projects?', 'CommentAuthor': 'truilus', 'Comment': 'https://netbeans.apache.org/participate/index.html'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any Java Open source projects?', 'CommentAuthor': 'emaphis', 'Comment': '[www.github.com](https://www.github.com)\n\nEnjoy.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any Java Open source projects?', 'CommentAuthor': 'padreati', 'Comment': 'If you want to materialize some ideas through an open source project there are greater chances that project exists already than not.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any Java Open source projects?', 'CommentAuthor': 'tonghoangvu', 'Comment': ""I've started the below project recently, so it has a few features to try. I hope you find something useful in it (code style format, CI/CD, dockerizing, exception handling).\n\n[https://github.com/pocketo-app/pocketo-backend](https://github.com/pocketo-app/pocketo-backend)""}]"
Java,Anyone feel like C# is becoming more popular than Java?,https://www.reddit.com/r/java/comments/125g42r/anyone_feel_like_c_is_becoming_more_popular_than/,0,48,MoneySounds,1680074108.0,"I've recently been getting the impression that C# is becoming more and more demanded nowadays for web development stuff, and it sort of makes sense why given the entire Microsoft ecosystem, from the IDE to asp.net & Azure, it all feels tightly coupled and has everything you need.

Not to mention that Java competes with other languages in backend with JavaScript/Node.js and Golang. I'm mostly focusing on webdev and microservices.

What do you guys think the future of Java is in terms of industry demand and the kind of applications/projects will be using it.","[{'Subreddit': 'Java', 'Reddit_Title': 'Anyone feel like C# is becoming more popular than Java?', 'CommentAuthor': 'teefj', 'Comment': 'What gives you that impression?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Anyone feel like C# is becoming more popular than Java?', 'CommentAuthor': '_AManHasNoName_', 'Comment': 'Nope. I worked at a company once that actually migrated away from C#.Net into Java.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Anyone feel like C# is becoming more popular than Java?', 'CommentAuthor': 'redikarus99', 'Comment': 'No, not really. Some companies like to use C#, but compared to java, they are marginal.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Anyone feel like C# is becoming more popular than Java?', 'CommentAuthor': 'Mosquitoz', 'Comment': 'nope I see the complete opposite thing, many companies switched from c# to java'}, {'Subreddit': 'Java', 'Reddit_Title': 'Anyone feel like C# is becoming more popular than Java?', 'CommentAuthor': 'Ilookouttrainwindow', 'Comment': ""I'm working with both. Having so much struggle with c# I'm an inch away from throwing a towel. Redis libraries are old or pay for. No choice in connection pooling and there's a built-in delay. Lack of docs, I keep reading articles to understand behavior. Everything in c# just feels so , don't know how to put it, young and playful as if never field tested. \n\nYeah, I'm not having a happy experience.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Anyone feel like C# is becoming more popular than Java?', 'CommentAuthor': '_INTER_', 'Comment': 'One area that is the case without doubt is game development.\nUnity really made C# popular in that area.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Anyone feel like C# is becoming more popular than Java?', 'CommentAuthor': 'nutrecht', 'Comment': ""C# advocates have been claiming C# is 'just about' to kill Java for 2 decades now. All I see here locally is demand for .Net declining.\n\nMost C# jobs here are really Sharepoint jobs.\n\nAlso there is zero reason for a company to move from Java to C#. It's a massive ecosystem change with a massive risk attached, and no direct benefit at all. If developers want to use a different language, Kotlin is a much better and safer option.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Anyone feel like C# is becoming more popular than Java?', 'CommentAuthor': 'm_vokhm', 'Comment': ""I don't.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Anyone feel like C# is becoming more popular than Java?', 'CommentAuthor': 'jojolichtenberger', 'Comment': 'I know bigger companies that do use both, depending on the projects. IMHO, Java will gain a lot more traction again in the coming years due to some ""overdue"" changes as the memory model, Virtual Threads/Coroutines/Structured Concurrency, and language enhancements which reduce the boilerplate or make some patterns obsolete (visitor pattern due to pattern matching, records, text blocks...).'}, {'Subreddit': 'Java', 'Reddit_Title': 'Anyone feel like C# is becoming more popular than Java?', 'CommentAuthor': 'hilbertglm', 'Comment': ""I am not sure I agree with the premise, but it doesn't really matter.  Java is a good programming language with a rich ecosystem and a lot of job opportunities.  There is such an embedded base, it will be around for the rest of my lifetime.\n\nOn the other hand, I have had C# opportunities, so I learned that language, too. Same with Python.  However, Java is still my first choice.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Anyone feel like C# is becoming more popular than Java?', 'CommentAuthor': 'nomader3000', 'Comment': 'nope, not even close'}]"
Java,DELD: An experimental HTTP-Client,https://www.reddit.com/r/java/comments/122rhcr/deld_an_experimental_httpclient/,40,31,lonew0lf-G,1679847949.0,"I was wondering how tools such as Feign work exactly, how they implement the interfaces we give them, and how they take care of complex tasks such as managing threads for Asynchronous http requests. 

Finding pretty uninteresting the task of merely cloning repositories and reading the codes, I decided to make my own HTTP-Client and learn-by-doing instead. Hence that the [DELD-httpclient](https://github.com/malandrakisgeo/DELD-httpclient) was created. 

It works pretty much like Retrofit and Feign. One creates an interface with annotations for HTTP methods, Headers, Request parameters, Authorization, etc, and the rest is done by DELD. 

It has been tested and [works](https://github.com/malandrakisgeo/DELD-demo) with Spring and Quarkus.

It is, of course, completely experimental at the moment, there is plenty of TODOs, and it is limited on sending and receiving json, xml, and octet-stream objects. But it might have the potential of becoming something bigger.

So far it has been a wonderful journey of knowledge in stuff like Java Reflections, the java.net.\* package, JVM details, etv

No matter if you clone the repo or not, I openly encourage you to go on and make your own Feign-like HTTPClient -not for practical reasons (it is extremely unlikely that any such projects will compete Feign or Spring's WebClient), but because working on such projects is can and will make you a senior Java dev sooner or later.","[{'Subreddit': 'Java', 'Reddit_Title': 'DELD: An experimental HTTP-Client', 'CommentAuthor': 'Worth_Trust_3825', 'Comment': 'How do you deal with default methods, and interfaces that extend other interfaces?\n\nLooking at main repository you seem to only support JSON payloads, and leak GSON dependency into your dependents.\n\nAll in all, looks alright. Which client do you use under the hood? OKHttp?'}, {'Subreddit': 'Java', 'Reddit_Title': 'DELD: An experimental HTTP-Client', 'CommentAuthor': 'InstantCoder', 'Comment': 'Why not implement Microprofile REST client specification ? It‚Äôs similar like Feign but based upon a standard. And Java has his own json parser called JSON-B and JSON-P (binding and processor resp.). \n\nAnd if I‚Äôm not wrong Java has his own improved http client since Java 17.'}, {'Subreddit': 'Java', 'Reddit_Title': 'DELD: An experimental HTTP-Client', 'CommentAuthor': 'rbygrave', 'Comment': 'So far, it looks to me like DELD uses the approach of creating dynamic proxies and using reflection.\n\nIf you are interested, [https://avaje.io/http-client/](https://avaje.io/http-client/) takes the path of code generation using an annotation processor (no reflection, no dynamic proxies).'}, {'Subreddit': 'Java', 'Reddit_Title': 'DELD: An experimental HTTP-Client', 'CommentAuthor': 'gkopff', 'Comment': ""There's a typo in your README:\n\n> The only code necessary afterwards is a Procuder method""}, {'Subreddit': 'Java', 'Reddit_Title': 'DELD: An experimental HTTP-Client', 'CommentAuthor': 'Hioneqpls', 'Comment': 'Yeaaahh I‚Äôll pull this into one of my services on a late friday evening üç∫'}, {'Subreddit': 'Java', 'Reddit_Title': 'DELD: An experimental HTTP-Client', 'CommentAuthor': 'divorcedbp', 'Comment': 'The leaking of a json library is the biggest deal here. I _really_ wish we could get a basic, no frills low-level JSON parser into the JDK to help with this. I‚Äôm tired of having 26 Jackson, gson, json-simple, json.org dependcies on my classpath.'}, {'Subreddit': 'Java', 'Reddit_Title': 'DELD: An experimental HTTP-Client', 'CommentAuthor': 'lonew0lf-G', 'Comment': ""No support for such yet. \n\nI only use Java's HttpClient (java.net.http.HttpClient), just like Feign and Retrofit.""}, {'Subreddit': 'Java', 'Reddit_Title': 'DELD: An experimental HTTP-Client', 'CommentAuthor': 'lonew0lf-G', 'Comment': ""As previously mentioned, I wanted to get a deeper understanding of how such Feign-like tools work, and I chose a learning-by-doing approach. \n\nThe java httpclient was came with Java 11, but I could be wrong. \n\nI'll take a look on the specification nevertheless""}, {'Subreddit': 'Java', 'Reddit_Title': 'DELD: An experimental HTTP-Client', 'CommentAuthor': 'lonew0lf-G', 'Comment': ""Looks interesting. I'll check it as soon as I have time. \nThanks!""}, {'Subreddit': 'Java', 'Reddit_Title': 'DELD: An experimental HTTP-Client', 'CommentAuthor': 'lonew0lf-G', 'Comment': 'Thanks for noticing!'}, {'Subreddit': 'Java', 'Reddit_Title': 'DELD: An experimental HTTP-Client', 'CommentAuthor': 'Worth_Trust_3825', 'Comment': 'This could be solved if we had an interface such as XML does. Parsers do not belong in the standard library.'}]"
Java,What shall good Java CI do?,https://www.reddit.com/r/java/comments/11w6xb1/what_shall_good_java_ci_do/,47,56,Leading_Reaction4210,1679282194.0,"As someone who knows the language but primarily work with other languages I‚Äôd love to discuss the issue of CI norm in Java (as well as Scala and Kotlin).

I‚Äôd love to know what good JVM CI should do.

Here is a list of things that I think probably should belong to the CI.

1. Build jars and push them to remote artifact store.
2. Build Docker images and push them to remote artifact store.
3. Autoformatting the code, Gradle / Maven files, etc.
4. Run tests, with different Java versions & OS if necessary.
5. Check that the docs are valid and complete, generate Javadocs and deploy them to some website.
6. Detect code smell such as dead code and unused dependencies.

Is this list reasonable? Really thanks!

Could you guys please share some JVM open source projects on GitHub with good CI? Currently I‚Äôm using Apache Arrow Java as the basis of the CI I want to have and definitely love to have more examples.","[{'Subreddit': 'Java', 'Reddit_Title': 'What shall good Java CI do?', 'CommentAuthor': 'cmsimike', 'Comment': 'I am of the opinion that CI shouldn‚Äôt modify/commit code. By all means alert the developer of something needs reformatting and let them do it, not the CI. Might be duplicating effort creating a jar and docker container but that is very much dependent on other things. Otherwise solid list.'}, {'Subreddit': 'Java', 'Reddit_Title': 'What shall good Java CI do?', 'CommentAuthor': 'thedarkproject', 'Comment': ""We have all of these in place in our huge java project except for the reformatting one. That's an absolute no go. I would set the server on fire if CI ever changed my code formatting.""}, {'Subreddit': 'Java', 'Reddit_Title': 'What shall good Java CI do?', 'CommentAuthor': 'asciimo71', 'Comment': 'you forgot testing the code and do e2e tests. Other things are named strange, but seem to work. Also, there should be vulnerabilities check on jar, dependencies and docker image. In the end, you should write out a bill of materials and update config management.'}, {'Subreddit': 'Java', 'Reddit_Title': 'What shall good Java CI do?', 'CommentAuthor': 'SirBugmenot', 'Comment': ""Regarding #3: no, no, no, no, NO! Set your standards, make your programmers adhere to them, but trust the human mind to know better than an automaton for specific cases. If the programmer, as an intelligent person, breaks a rule, assume that he had a reason. Don't just throw that away.""}, {'Subreddit': 'Java', 'Reddit_Title': 'What shall good Java CI do?', 'CommentAuthor': 'the-beauxdog', 'Comment': ""It's tacitly mentioned in the comments. A full process is more than just building and deploying(or pushing to a repository) artifacts. Consider what the various hooks need to do as gate-keepers to pushing code and reporting.\n\nThrough all the articles on automating a build and deploy process, rarely does any of them touch on versioning. How will versioning be handled?\n\nA goal should be a fast feedback loop.""}, {'Subreddit': 'Java', 'Reddit_Title': 'What shall good Java CI do?', 'CommentAuthor': 'uncont', 'Comment': '0. The CI should be fast. If there are tests that are difficult/impossible to run locally, then having a fast turnaround time is required to keep devs productive/prevent then from hating the dev experience. That might mean having both a filesystem cache (.m2/.gradle) and a build cache (like what Grade Enterprise provides).'}, {'Subreddit': 'Java', 'Reddit_Title': 'What shall good Java CI do?', 'CommentAuthor': 'wildjokers', 'Comment': '> Autoformatting the code, Gradle / Maven files, etc.\n\nCI should absolutely not change source code.\n\n> Detect code smell such as dead code and unused dependencies.\n\nI good IDE does this. Although I guess there is no harm in a CI tool notifying that it found these things.\n\nAll the others seem good.'}, {'Subreddit': 'Java', 'Reddit_Title': 'What shall good Java CI do?', 'CommentAuthor': 'gubatron', 'Comment': 'have CI fail in case your lint checks fail, dont alter code.'}, {'Subreddit': 'Java', 'Reddit_Title': 'What shall good Java CI do?', 'CommentAuthor': 'jevon', 'Comment': 'The CI for my Java-based game:\n\n* setup & install JDKs and other supporting languages/environments\n* pull down packages/dependencies\n* code generation\n* run unit & integration tests\n* check licenses\n* future: strip/optimise/obsfucate with proguard\n* [Mac only] sign packages for Mac release\n* package the game up into a bundle/executable\n* [Mac only] submit bundle to Apple for notarization & stapling (guh)\n* save release\n* future: upload to Steam/Epic, push to app stores, etc'}, {'Subreddit': 'Java', 'Reddit_Title': 'What shall good Java CI do?', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Java', 'Reddit_Title': 'What shall good Java CI do?', 'CommentAuthor': 'devchonkaa', 'Comment': 'I dont know why you need point 2.? Maybe thats some special requirement but surely not required in general'}]"
Java,I finished Java EE Bootcamp and I still feel like I lack a lot,https://www.reddit.com/r/java/comments/11uqb00/i_finished_java_ee_bootcamp_and_i_still_feel_like/,18,26,MooiDaedalus,1679150654.0,"I finished a **Java EE** Bootcamp. During my 8 months long bootcamp, we learned mostly about Java and also a little bit of everything like; Spring, MySQL, Angular, Maven, Design patterns etc. During the classes I learned a lot of theory and logic of coding.

Since my bootcamp has finished I did some small projects. I have this habit where I spend a lot of time on small details and this sometimes make me feel like I am wasting time. I know that I lack a lot of technical knowledge. I want to focus on more important stuff instead of some unnecessary details.

To improve my skills and to be ready for job interviews, I started doing those ""**Top Interview Questions""** on LeetCode. Almost everyday I learn new ways of solving problems, I started to feel overwhelmed by all the different ways on how u can solve problems. I always try to solve myself without looking for solutions. After spending half an hour or more I look to the solution and try to understand it.

Learning everyday is an  important part of a developer I agree and I also enjoy it. But I also expect to be able to achieve more with what I already know. But it feels like it's always just not enough. I get sometimes tired of always studying. This also makes me think that I am not ready for the technical interviews.

It is also not only about solving the question, I also want to understand it and to be able to explain the process to myself and others. Is it a must to be comfortable with those type of exercises before applying for jobs as a junior developer?","[{'Subreddit': 'Java', 'Reddit_Title': 'I finished Java EE Bootcamp and I still feel like I lack a lot', 'CommentAuthor': 'sickvice', 'Comment': 'You should just go and apply for interview you know enough to get junior position and the rest you will learn in your job. Im 4 year mid java developer and I dont know enough to explain for everyting works but I still have a nice salary and able to perform day to day tasks'}, {'Subreddit': 'Java', 'Reddit_Title': 'I finished Java EE Bootcamp and I still feel like I lack a lot', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Java', 'Reddit_Title': 'I finished Java EE Bootcamp and I still feel like I lack a lot', 'CommentAuthor': 'hem10ck', 'Comment': 'Genuinely curious, why are boot camps teaching Java EE in 2023? I‚Äôve worked for a multinational bank for the last 15 years, the prime target of Java EE and it‚Äôs essentially dead in favor of Spring. Are other industries choosing Java EE over Java SE + Spring?'}, {'Subreddit': 'Java', 'Reddit_Title': 'I finished Java EE Bootcamp and I still feel like I lack a lot', 'CommentAuthor': 'Zalenka', 'Comment': ""Well pull yourself up by your bootcampstraps! \n\nReally a bootcamp is meant to help you know how to find resources and how to recognize patterns.\n\nYou can't write a compiler but you can find an error and search hr right stuff for a solution. That's good enough sometimes.""}, {'Subreddit': 'Java', 'Reddit_Title': 'I finished Java EE Bootcamp and I still feel like I lack a lot', 'CommentAuthor': 'DonAndres8', 'Comment': ""This is quite frankly no different than a traditional 2/4 year education to a certain degree. You learn a lot of concrete things, but don't learn much of the abstract which is harder to teach.\n\nOnce you land a job and get some good experience in the field it's much easier to see the path forward. Definitely not knowledge the any business should expect from a junior developer position. Focus on the basics of java you learned, SQL, and debugging.\n\nLastly practice and perfect pseudo coding. Your thought process on how to handle an issue is equally important as how much you know at any stage of your career. The vast majority of what you learn will be from peers, the code base you're working with, and google. If an interviewer doesn't allow this be very cautious.""}, {'Subreddit': 'Java', 'Reddit_Title': 'I finished Java EE Bootcamp and I still feel like I lack a lot', 'CommentAuthor': 'hilbertglm', 'Comment': ""I started programming when I was a teenager in the 1970s.  I was a freelance programmer for the last 27 years, so I had an opportunity to learn a greater diversity of problem domains than programmers typically get in a corporate setting.\n\nStill.  **I feel like a lack a lot**.\n\nThe key to IT is a desire to learn, and the humility to understand that the more you know, the more you realize what you don't know.  Be honest with what you know and don't know, and share what seems to be a genuine desire for continual learning.  Interviewers will value that.  You will be fine.""}, {'Subreddit': 'Java', 'Reddit_Title': 'I finished Java EE Bootcamp and I still feel like I lack a lot', 'CommentAuthor': 'None', 'Comment': '[removed]'}, {'Subreddit': 'Java', 'Reddit_Title': 'I finished Java EE Bootcamp and I still feel like I lack a lot', 'CommentAuthor': 'TheoGrd', 'Comment': 'You could pass the java certifications , some companies value those.'}, {'Subreddit': 'Java', 'Reddit_Title': 'I finished Java EE Bootcamp and I still feel like I lack a lot', 'CommentAuthor': 'None', 'Comment': ""Agree with this alot, I am currently rolling into my 7th year and I always feel like I don't know enough, heck doubt I could do a lot of those leet code questions in a decent amount of time. I've either forgotten how to do something or just didn't know in the first place I guess.""}, {'Subreddit': 'Java', 'Reddit_Title': 'I finished Java EE Bootcamp and I still feel like I lack a lot', 'CommentAuthor': 'MooiDaedalus', 'Comment': 'Thanks a lot for sharing your experience and advice! I will continue practicing and apply for jobs in the meantime. Here in Belgium there is a fair amount of demand for developers. I hope to land to a place where I can learn a lot and have good experience as a junior dev. I will make great use of your advice!'}, {'Subreddit': 'Java', 'Reddit_Title': 'I finished Java EE Bootcamp and I still feel like I lack a lot', 'CommentAuthor': 'Java-Zorbing', 'Comment': 'Java EE is actually on the rise again and Spring boot is dropping'}]"
Java,Announcing rust-maven-plugin: Compile and bundle Rust JNI libraries in Java Maven projects!,https://github.com/questdb/rust-maven-plugin,134,15,_shadowbannedagain,1678454351.0,,"[{'Subreddit': 'Java', 'Reddit_Title': 'Announcing rust-maven-plugin: Compile and bundle Rust JNI libraries in Java Maven projects!', 'CommentAuthor': 'beginnnnner', 'Comment': 'Its cool that you can have Maven do all sorts of things like this. I was just using a plugin to build my web front-end project in Node.js. I do wonder what a Panama+Rust plugin would look like?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Announcing rust-maven-plugin: Compile and bundle Rust JNI libraries in Java Maven projects!', 'CommentAuthor': 'KafkasGroove', 'Comment': 'Why am I not surprised this comes from the QuestDB team :) Very cool stuff!'}, {'Subreddit': 'Java', 'Reddit_Title': 'Announcing rust-maven-plugin: Compile and bundle Rust JNI libraries in Java Maven projects!', 'CommentAuthor': 'perryplatt', 'Comment': 'Is there going to be a javar interface instead of javah'}, {'Subreddit': 'Java', 'Reddit_Title': 'Announcing rust-maven-plugin: Compile and bundle Rust JNI libraries in Java Maven projects!', 'CommentAuthor': 'International_Break2', 'Comment': 'So when does this become an official plugin where it comes in as maven.plugins?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Announcing rust-maven-plugin: Compile and bundle Rust JNI libraries in Java Maven projects!', 'CommentAuthor': 'None', 'Comment': '[removed]'}, {'Subreddit': 'Java', 'Reddit_Title': 'Announcing rust-maven-plugin: Compile and bundle Rust JNI libraries in Java Maven projects!', 'CommentAuthor': 'amunra__', 'Comment': 'The plugin would need to be extended to support that. The workflow I think would be:\n* Declare a set of Rust functions as C-callable (`#[no_mangle] pub extern ""C"" fn ...`)\n* Export those functions to C headers using `cbindgen` from a `build.rs` script.\n* Run the Jextract tool.\n\nOf course this is contingent on Project Panama shipping properly first :-)'}, {'Subreddit': 'Java', 'Reddit_Title': 'Announcing rust-maven-plugin: Compile and bundle Rust JNI libraries in Java Maven projects!', 'CommentAuthor': 'Worth_Trust_3825', 'Comment': ""javah generates the headers for C/C++. Why can't you implement them in rust?""}, {'Subreddit': 'Java', 'Reddit_Title': 'Announcing rust-maven-plugin: Compile and bundle Rust JNI libraries in Java Maven projects!', 'CommentAuthor': '_shadowbannedagain', 'Comment': 'The plugin would have to be adopted by the Apache Foundation. Everything is possible with enough interest I guess. But practically speaking - the plugin is already easy to consume as it is.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Announcing rust-maven-plugin: Compile and bundle Rust JNI libraries in Java Maven projects!', 'CommentAuthor': 'scratchisthebest', 'Comment': 'who cares? Third-party plugins are common in the maven and gradle ecosystems'}, {'Subreddit': 'Java', 'Reddit_Title': 'Announcing rust-maven-plugin: Compile and bundle Rust JNI libraries in Java Maven projects!', 'CommentAuthor': 'amunra__', 'Comment': ""Outside of the scope of this project, but a neat idea. \n\nRust doesn't do header files, so I think the pragmatic thing would be a tool that checks a that a rust crate implements a certain set of Java JNI APIs and errors with details of what's missing/oversupplied if it detects a mismatch.\nThe mismatch would then print out empty implementations as code suggestions thus removing the guesswork from the signatures, which will be can be tricky especially in the face of overloads.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Announcing rust-maven-plugin: Compile and bundle Rust JNI libraries in Java Maven projects!', 'CommentAuthor': 'khmarbaise', 'Comment': '> The plugin would have to be adopted by the Apache Foundation.\n\nCan you explain why?'}]"
Java,What's the point of acquiring Java certification ?,https://www.reddit.com/r/java/comments/11kbbsb/whats_the_point_of_acquiring_java_certification/,82,66,Affectionate_Run_799,1678131132.0,"In the book ""The Complete Coding Interview Guide in Java"" (2020) the author Anghel Leonard states:

"" While there‚Äôs nothing wrong with getting certifications (from Oracle or an other party), they are not required in job descriptions. Taking these certifications requires a significant amount of money and time, and most of the time they don‚Äôt pay off the effort. You can use this time more wisely and get involved in projects (side projects, school projects, open source projects, and so on). This is a better way to impress employers. So, certificates have limited value and it takes a lot of resources to obtain them. Moreover, **certificates are perishable**. Think how useful it is today, in 2020, to be Java 6 certified, or in 2030 to be Java 12 certified !  \[Chapter 1\] ""

&#x200B;

I would like to know your opinion on it.","[{'Subreddit': 'Java', 'Reddit_Title': ""What's the point of acquiring Java certification ?"", 'CommentAuthor': 'tristanjuricek', 'Comment': 'Certificates seem like a thing for consultancies that advertise ‚Äúskilled workers‚Äù but really just try to shovel people to random jobs based on spreadsheet analysis - might be helpful in some situations, but as a US engineer for a while, they‚Äôre irrelevant'}, {'Subreddit': 'Java', 'Reddit_Title': ""What's the point of acquiring Java certification ?"", 'CommentAuthor': 'chabala', 'Comment': ""In interviewing candidates in the US, Java certifications seem to be an anti-feature. They show you can pass an exam on Java, but nothing on problem solving or general aptitude.\n\nAnecdotally, the candidates that came in with Java certifications on their resume couldn't program their way out of a paper bag. Not to say there aren't good developers with Java certifications, but perhaps they leave them off their resumes.""}, {'Subreddit': 'Java', 'Reddit_Title': ""What's the point of acquiring Java certification ?"", 'CommentAuthor': 'pjmlp', 'Comment': ""Certificates are mostly used by consultancies to get special treatment in contract deals, like being Platinum Partner and such.\n\nThey attain those requirements by having at least X employees with certificates on Y.\n\nSo in those domains, achieving certificates is usually part of the career path, and yes they don't last forever, hence renewals are part of the game, and there is a whole industry that lives from renewals and trainings for certifications.""}, {'Subreddit': 'Java', 'Reddit_Title': ""What's the point of acquiring Java certification ?"", 'CommentAuthor': 'j32u', 'Comment': 'If somebody is sponsoring your certification then go for it. You will need to spend your time to get familiar with some details. This has a value.'}, {'Subreddit': 'Java', 'Reddit_Title': ""What's the point of acquiring Java certification ?"", 'CommentAuthor': 'african_or_european', 'Comment': 'I got certified for Java 8 because a) my work paid for it and b) I got to take the test on company time.  Absolutely no one has ever cared that I have my certification, but I got two afternoons off for the tests so I consider it a win.'}, {'Subreddit': 'Java', 'Reddit_Title': ""What's the point of acquiring Java certification ?"", 'CommentAuthor': 'bitcoind3', 'Comment': ""Proudly Java 5 Certified here by Sun Microsystems üí™\n\nIn most ways it's useless - I've never been asked for it and I wouldn't mention it. However it was paid for by my then employer, and it did ensure that I had robust knowledge early on in my career. It's most useful value now is to demonstrate I'm an OG java guy :p""}, {'Subreddit': 'Java', 'Reddit_Title': ""What's the point of acquiring Java certification ?"", 'CommentAuthor': 'know-your-onions', 'Comment': 'As somebody who took a Java certification in 2000 (as my employer wanted me to and paid for it), it has been of exactly zero use to me. \n\nAs somebody who has been interviewing and hiring Java developers for a touch shy of 2 decades, I have never once thought ‚Äú*Oh, they have a Java certification - that‚Äôs a plus*‚Äù.\n\nIn fact I once interviewed an ex-consultant with certifications coming out of their ears, and got second hand embarrassment from watching them try to write bubble sort and even get it to compile.\n\nLanguage certifications are essentially useless for developers. They can be great for\nsomething like security or accountancy, where process and best practices are particularly important - but for a developer I primarily want to know that you can solve problems, think logically, understand the requirements, understand the JVM, understand *why* you should do certain things a certain way, and write readable and maintainable code.\n\nCertifications *may* be useful for things like:\n* Secure programming;  \n* DevOps / Pipeline;  \n* Specific tools and libraries.\n\nBut a for a general *Java* certification: Use the space on your CV to add another bullet point about something way more interesting.'}, {'Subreddit': 'Java', 'Reddit_Title': ""What's the point of acquiring Java certification ?"", 'CommentAuthor': 'AlternativeAardvark6', 'Comment': ""I wanted to switch away from a programming language into Java and it was hard landing a project until I got certified. So in consultancy it can be a plus but they are expensive so make sure your employer pays for it. I wouldn't spend any of my own money on them.""}, {'Subreddit': 'Java', 'Reddit_Title': ""What's the point of acquiring Java certification ?"", 'CommentAuthor': 's-mores', 'Comment': 'From an engineering point of view, that quote is 100% correct. You will usually not state certs in a job posting and they don\'t demonstrate very much at all, mostly.\n\nThere are some exceptions, but you\'ll find that particular attitude in a LOT of engineering shops.\n\nHowever, when getting larger government jobs in a lot of places they\'ll quite often carry a ""minimum of X"" of certain certs, masters level college diplomas etc. So for bigger shops they\'re something you\'ll strategically want to get. Not if they\'re not paid for by your employer, though. \n\nFrom a regulatory point of view it makes a lot more sense to say they require cert x over wanting y years of experience etc.'}, {'Subreddit': 'Java', 'Reddit_Title': ""What's the point of acquiring Java certification ?"", 'CommentAuthor': 'dablya', 'Comment': 'In 2000 I got my first job offer when as a sophomore I showed up to the university job fair with my sun certified programmer or developer (whichever one was the first one) cert.'}, {'Subreddit': 'Java', 'Reddit_Title': ""What's the point of acquiring Java certification ?"", 'CommentAuthor': 'tonydrago', 'Comment': ""Full Disclosure: about 20 years ago I did 3 Java certifications\n\n- java programmer\n- java developer\n- java web component developer\n\n> they are not required in job descriptions\n\nJust because certifications aren't explicitly listed as a requirement, that doesn't mean it won't help you. It's hard to see how they wouldn't\n\n> Taking these certifications requires a significant amount of money and time\n\nI don't know what they cost now, but they weren't expensive when I did them.\n\n> Moreover, certificates are perishable. Think how useful it is today, in 2020, to be Java 6 certified, or in 2030 to be Java 12 certified\n\nThis is a particularly stupid point. Almost all knowledge has a limited lifespan, particularly in software development.""}]"
Java,Xtext - Do you use it in large projects?,https://www.reddit.com/r/java/comments/11iqv7r/xtext_do_you_use_it_in_large_projects/,15,37,dmigowski,1678001470.0,"I have the idea to use Xtext for describing the entities in our application and add a bunch of meta information to these entities that way. 

In addition I want to create a PRQL like query language on those entities also. 

Has anyone accomplished something like this with Xtext or even something simpler and what is your experience with the tool? 

It Xtext actually used somewhere currently?","[{'Subreddit': 'Java', 'Reddit_Title': 'Xtext - Do you use it in large projects?', 'CommentAuthor': 'oelang', 'Comment': ""Xtext is used in a few dozen huge companies (banks, automotive, embedded, etc). There used to be conferences (Xtextcon) in Kiel, Germany where you could see there was huge adoption.\n\nIt solves a bit of a niche problem, external dsls with java. In general I think most people underestimate what they're getting into. A DSL seems like a nice idea but you need a lot of knowledge about building languages to get it right. The consultancy around xtext was huge. To show off the xtext framework xtend was created to show it could even be used to create a general purpose language (java with lambdas & templates when java 8 wasn't out yet). There is a company that created something that resembles typescript with xtext (https://www.eclipse.org/n4js/).\n\nRight now the framework is in maintenance mode, it's very stable but there isn't much development behind it anymore. If I would adopt it right now I would target vscode instead of eclipse.\n\nThere also is langium (https://langium.org/) kindof the spiritual successor of xtext.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Xtext - Do you use it in large projects?', 'CommentAuthor': 'zopad', 'Comment': ""We used Xtext in a large CRM product: a DSL for user-customizable UI widgets. It was quite complex but the end result was worth it. I don't fully understand your idea, why not use a DB?""}, {'Subreddit': 'Java', 'Reddit_Title': 'Xtext - Do you use it in large projects?', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Java', 'Reddit_Title': 'Xtext - Do you use it in large projects?', 'CommentAuthor': 'henfiber', 'Comment': 'OpenHAB (Smart home automation software written in Java) uses Xtext/xtend. There is a DSL for the configuration of sensors with text files and a Rules DSL language. \n\nFrom OpenHAB 3+ they have moved to a Json specification for items configuration and more recently Javascript as the main language for rules (although xtext and rules dsl are still supported) and I have seen discussions among core maintainers that even senior devs struggle to migrate away from xtext. \n\nSince OpenHAB is open source, you can inspect the code (and documentation) to see how xtext is used and whether it would work for you.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Xtext - Do you use it in large projects?', 'CommentAuthor': 'dlvakalucifer', 'Comment': ""Xtext is not build for that. You will be lost in the meta information in no time. Databases however are designed to describe entities in a couple of ways for instance tables and relations.\n\nBut, that does not mean it won't work. The question why you want to use xtext for that?""}, {'Subreddit': 'Java', 'Reddit_Title': 'Xtext - Do you use it in large projects?', 'CommentAuthor': 'Minute-Flan13', 'Comment': 'I work in a small to mid size software house.  I tried socializing the idea of xtext, but the problems I ran into were that it required a specialized skillet to use, and that aside from myself and a few others, there was little share vision on how to use it. The industry is full of people who want to script out use cases, and not so much build tools to make that more efficient.  On the other hand, the business side of the fence is also interested in cranking out functionality, and not willing to innovate on the tooling side without explicit ROI.  Not possible in an environment that barely tracks meaningful productivity metrics.  \n\nOur idea was to use xtext to define a very application spelcific model and generate a lot of boilerplate (entities, payloads for rest calls and events, stubs for services, etc) from it.  \n\nOn another note, the xtext project itself seems to be slowing down.  Hopefully a lull, but I wish you the best.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Xtext - Do you use it in large projects?', 'CommentAuthor': 'mikaball', 'Comment': ""Used it before, but is very much attached to Eclipse dependencies. It feels like abandoned, similar to the Xtend lang (better than Kotlin when it started, but not anymore).\n\nI was expecting better support, since it's the same team that started the Theia IDE. But I guess their clients are not interested and that drives feature support.\n\nI have done something like you are describing, but with ANTLR (no IDE support).""}, {'Subreddit': 'Java', 'Reddit_Title': 'Xtext - Do you use it in large projects?', 'CommentAuthor': 'huhuh11', 'Comment': 'Sounds like you want two different things.\n\nFirst a modeling language for entities. This can take the form of a textual language like with Xtext, but depending on your users it may not be the best. Also ""entities in our application with a bunch of meta-information"" sounds a bit like system/architecture design, so graphical languages may be more suitable.\n\n&#x200B;\n\nSecond, you want a query-like language on your entities. Will the users of this second DSL be the same as the first ? Are they used to writing code or not? A nice Java API can be enough. A textual DSL is doable otherwise, but surely will require quite a bit more work.\n\n&#x200B;\n\nFor both you also need to figure out the platforms these will live in. Since you mention Xtext I\'m guessing you\'re in the Eclipse IDE/RCP world. Will this be the case for some time ? Or is your organization on the move towards cloud/web IDEs? DSL toolings/technologies for these are ""not there yet"" but there\'s a lot of work going on.  \nIn any case, if you\'re going for a textual DSL, be it manually, with ANTLR or with Xtext, I recommend implementing an LSP server for your language (comes sort-of-for-free with Xtext).'}, {'Subreddit': 'Java', 'Reddit_Title': 'Xtext - Do you use it in large projects?', 'CommentAuthor': 'JavaOldTimer', 'Comment': ""I've been around for a long time, I can't recall ever coming across Xtext, which is odd, I thought I was aware of the more common Eclipse projects. Checking the main page (I assume this is the main page https://www.eclipse.org/Xtext/) it looks like it's rule based, reminds me of Drools. I don't like Drools. I don't know anyone who likes Drools. It's a major headache to maintain projects using rule based approaches. Those are my thoughts.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Xtext - Do you use it in large projects?', 'CommentAuthor': 'devchonkaa', 'Comment': 'i dont see any issues using xtext for your requirement. xtext is great and super extensible'}, {'Subreddit': 'Java', 'Reddit_Title': 'Xtext - Do you use it in large projects?', 'CommentAuthor': 'dmigowski', 'Comment': 'Just in case someone wonders: I found a list of projects that use Xtext on [https://www.eclipse.org/Xtext/community.html](https://www.eclipse.org/Xtext/community.html)'}]"
Java,Why I will stop mocking for most of my Unit Tests in a Spring-Boot Application,https://www.reddit.com/r/java/comments/1181ayi/why_i_will_stop_mocking_for_most_of_my_unit_tests/,90,96,matrium0,1676979033.0,"Hey,

I think as many of us do, I am always looking for a way to improve my unit-testing, especially regarding efficiency (produce better tests with limited time). So I want to share with you the approach I used for my two most recent projects. The stack was very common I think: basically it provides a REST-Backend with Spring Boot / Security and JPA / Hibernate for persistence. For sake of clarity let's say it uses classic layering with rest-controller-layer, service-layer, and repository-layer.  
When I started writing tests I followed blogs and such and went heavily into mocking and isolating (even took a shot at TDD). My ""units"" were really small. Looking back at it now I feel like that method was tremendously inefficient. I had to spend so much time for the isolation (ARRANGE - e.g. mocking all dependencies) and after all that effort and having great UNIT tests I still felt like everything was only a like 10% tested. Everything was tested in its own neat little testing-environment, that was very different to the actual spring-environment the production code runs. So I had to get higher level by level , basically making ""bigger units"" to test the integration of smaller units and so on.

Overall I always felt like for the time invested there had to be a more productive solution. In those recent projects I tried a very different approach. I decided **only** to mock out dependencies outside of my control (think other REST-APIs I consume). Besides that I would not use a single mock. Even when deciding this I still thought I would use at least SOME mocks, but actually I rarely really needed it for my own code (which was a crazy experience, coming from a mock-all-the-things world).  
Now most of the tests run in a full Spring-Environment with an in-memory-db. 90% of the tests are on service-layer and with that I noticed that I very rarely had to write any separate test for the repository layer at all, because it is tested implicitly. I added some rest-controller-layer-tests (mostly to ensure mapping and such is working). Overall it was very weird at first and the ARRANGE part is **still** a lot of work. The time I saved on mocking I had to spend to bring the system into the correct state (e.g. inserting stuff into the database, logging user in, etc.). Also I had to spend some time and effort to reset the system after¬†each test. Overall I have to say I did save less time than I hoped..  
**BUT**.. I feel like the projects are **way** better tested like that! Most tests are as close to the real thing as it¬†gets - no more artificial mini-environments all over the place. No more obvious integrations bug that slipped through my custom-environments.  
In a perfect world I would have unlimited time to test my code and that would certainly change my approach - but with real world constraints (time/budget) writing tests have to be as productive as possible for me. I feel like this approach gives that to me - it produces better tests with the same amount of work. I will definitely use this approach in my next project as well.  
How do you guys feel about this? Do you mock a lot? Or even use TDD (which I liked in theory, but it felt exceptionally inefficient)?","[{'Subreddit': 'Java', 'Reddit_Title': 'Why I will stop mocking for most of my Unit Tests in a Spring-Boot Application', 'CommentAuthor': 'agathver', 'Comment': 'What most testing literature omit is considering team size and code complexity.\n\nAlso there is that testing pyramid. \n\nFor an application with zero tests, writing a small set of integration tests will quickly give you a large coverage of cases, but as you drill down into particular cases you will find writing unit tests for services handy. \n\nIf you are working in a large team, unit tests are almost essential and things like TDD are sort of must, you don‚Äôt know which developers commit will randomly break an integration test and you will spend hours stepping though the debugger finding what changed. With unit tests with everything else mocked, you can reliably scope the problem down to the layer that‚Äôs not behaving properly.\n\nSo what do I do instead: I unit tests services, preferably even TDD. I don‚Äôt write tests for controllers but use WebMvcTest and WireMock for rest dependencies and test containers (no in-memory DBS) and it takes care of request / response and error handling\n\nIf I have to test DTOs, I write separate unit tests for them'}, {'Subreddit': 'Java', 'Reddit_Title': 'Why I will stop mocking for most of my Unit Tests in a Spring-Boot Application', 'CommentAuthor': 'plumarr', 'Comment': ""Your approach is pretty good to test the happy path but can lead to a lot of work when you have a lot of cases to tests.\n\nImagine that you have a services with hundreds of input fields, and that you have to have correct error message for each of them :\n\n* the field must be identified\n* the error must be correct and understandable\n* ...\n\nIntegration tests would require that you have a test case for each error to test.\n\nIf you combine UT & IT, then you can use\n\n* the IT to validate that the error handling system is correctly called, the error are correctly formatted in the response,... This only require a small number of tests case\n* the UT to validate the error handling of each field, for each error case. This require a lot of test cases whish is easier for UT.\n\n&#x200B;\n\nIn the past I worked on an application that had to handle a lot of different data states. We had to to save the application from itself. When we started, it was full of bugs and fell appart once you feed it real world volume of data. At the same time we had to implement new functionalities, some of them on fixed timeline due to legal requirements. The team working on it was around 30 peoples (developers, analyst, testers & management). The only thing that saved us was the implementation of healthy testing :\n\n* UT to technically validate the various component and handle the validation of the data state at each step and interface of the application\n* IT to validate that what we build with the UT was coherent\n* Automated E2E tests to avoid regression and validate that it worked in a real situation\n* Manual test for the new functionalities\n\nThis allowed us to go from a barely usable software to something that was working quite well in 2 years, while introducing very few regressions (for one delivery we changed the whole database model without creating more than 5 smalls bugs).\n\nWith only UT, or only IT or only E2E tests we could not have achieved that with our team size. There is no type of test that is better than another, but each have their purpose and misusing them is quite costly in man power.\n\n\nEdit : To add credit to OP point, IT are probably the best investment in man power if you have a limited budget :\n\n* they easily validate that the happy path and the general error handling\n* they are a lot easier to run and automate than end to end tests\n* they can detect more global issues.\n\nBut, from my experience, they are bad for :\n\n* finding error coming from interaction with the outside world such as the web browser, the OS, the external API,... End to end a required for that\n* finding very small bugs such as a missing country in a country list, in whish UT shine.\n* thoroughly validate the internal working of critical part of your application (state machine, business algorithm). Use Blackbox testing done by UT for that, so that you don't care about the internal but it can run fast and handle a lot of cases if needed.\n\nI also understand that the experience that I described isn't universal and that not every project can afford such a test policy. However in my case this was a god saver as the application as deployed on premise by several clients and so we couldn't use fast deployment in production to fix any bug that could have crept in a release.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Why I will stop mocking for most of my Unit Tests in a Spring-Boot Application', 'CommentAuthor': 'kkapelon', 'Comment': 'Check first two anti-patterns here https://blog.codepipes.com/testing/software-testing-antipatterns.html'}, {'Subreddit': 'Java', 'Reddit_Title': 'Why I will stop mocking for most of my Unit Tests in a Spring-Boot Application', 'CommentAuthor': 'metatron7471', 'Comment': ""So basically you went from unit testing to integration testing. That's totally fine. I've been a dev for 25 years (different things but a lot of Java & server side) and I ususally do not waste time on unit tests and concentrate on end to end (integration) testing.\n\nIn my experience most bugs aren't simple bugs that unit tests might catch but complex things  in business logic (usually because underspecified analysis or lack thereof) or handling of failures at the boundaries (connecting to backends servers, Dbs Cloud,peripherals,...) or unexpected interactions between different pieces of the application (because analysts haven't thought it through).""}, {'Subreddit': 'Java', 'Reddit_Title': 'Why I will stop mocking for most of my Unit Tests in a Spring-Boot Application', 'CommentAuthor': 'boneve_de_neco', 'Comment': ""I followed a similar path, especially after I discovered the Test Trophy (as opposed to the Test Pyramid) when working on the frontend. The problem when learning about tests and TDD is that some fundamental definitions are kind of left in the air. We should write unit tests, but what is considered a unit? A function? A class? A whole microservice? I tend to think about how the code is going to be consumed. If a function will only be used internally by the application I'm writing, I don't consider it a unit. Same for a class. So, for me, a unit is something that has a public interface, it will be used by other unkown code or client. And that's where my tests will be, at the public interface.\n\nThat's how I came to the same conclusions as you. In Spring Boot, I find more valuable and efficient to write tests as a client to my spring boot app, usually spinning up the server and making REST calls to tests it, although lately I've been thinking about going one level down and calling controllers directly, as the REST layer could be considered an implementation detail.\n\nFor the services that the app consumes, I'll mock them out at the interfaces. So if there is a UserRepository interface, I'll mock that. If the app makes REST calls, it will be in a service and I'll mock the service. I don't like to mock libraries I don't control, for example, libraries that make an http call. It's usually complicated and the library implementation can change. I prefer to tuck it all in a service or helper class and mock that instead.\n\nLastly, I'm not a fan of using in memory databases, as I consider then an implementation detail (see mocking repositories above). What if we decide to change it from SQL to NoSQL, for example? So I prefer to abstract and mock the interface.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Why I will stop mocking for most of my Unit Tests in a Spring-Boot Application', 'CommentAuthor': 'reqdk', 'Comment': ""Not a hard and fast rule, but if mocking and setting up unit tests is such a chore, sometimes it's indicative of bad code design. Similarly, having to reset system state between tests can sometimes be indicative of bad test design. Testing with an in-memory database is also a recipe for surprises as they don't behave exactly like your production database. I've found it better over the years to budget for time to write better tests than to take shortcuts - integration tests have a different purpose than unit tests, which may not be apparent until the team completely changes.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Why I will stop mocking for most of my Unit Tests in a Spring-Boot Application', 'CommentAuthor': 'wildjokers', 'Comment': 'You seem to be confusing unit testing and integration testing. You replaced your unit testing with integration testing.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Why I will stop mocking for most of my Unit Tests in a Spring-Boot Application', 'CommentAuthor': 'Electrical_Fox522', 'Comment': ""Testing functionality in an isolated environment is the very definition of unit testing which makes mocking or stubbing required. \nMocking is easier than stubbing. You don't need to write any logic.\nMaybe you're doing unit testing now but they are different""}, {'Subreddit': 'Java', 'Reddit_Title': 'Why I will stop mocking for most of my Unit Tests in a Spring-Boot Application', 'CommentAuthor': 'amProgrammer', 'Comment': 'That just sounds like integration testing, not unlocked unit testing. Unit and integration testing both have their different benefits'}, {'Subreddit': 'Java', 'Reddit_Title': 'Why I will stop mocking for most of my Unit Tests in a Spring-Boot Application', 'CommentAuthor': 'DuneBug', 'Comment': ""I think on the whole... Integration tests probably offer more value, but they also take far longer to write. \n\nA unit test should simply be you testing that code programmatically. Pass in nulls or bad data and make sure it works as expected, that way you don't have to deploy it, change, deploy, change etc.\n\nSidenote... I believe in tests but not tdd. It's fine if you stub out the requirements in your tests but if you actually write them, I have to go rewrite them whenever my plan goes awry, which happens a lot.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Why I will stop mocking for most of my Unit Tests in a Spring-Boot Application', 'CommentAuthor': 'mauganra_it', 'Comment': ""We have all of these at work, but depending on features one is usually more suitable than the other.\n\nThe main disadvantage of your approach is *speed*. A monolith will waste a lot of time just bootstrapping, and with that TDD becomes infeasible. That is sufferable for high-level tests of endpoints, but discourages tests of smaller things. But you're completely right that it's the only way to ensure that the monolith is actually wired together correctly.\n\nAs you said, mocking is appropriate for things that you have no control over, or which are too annoying to use in test environments. Also, they are useful to check whether the component interacts with its dependencies correctly.\n\nIf you spend a lot of time mocking, then I bet that the application architecture can be improved. Especially architectures with an anemic domain model are prone to encourage god classes with long-ish spagetti code methods, which *of course* require tons of carefully mocked dependencies in tests.\n\nI have felt for a long time that TDD goes hand in hand with Domain Driven Development. The latter tends to produce tighter and more modular code that is easier to reason about and test. I was recently observing a refactoring project where a lack of TDD led to an explosion of end-to-end testcases. But bugs still slip through, and therefore I feel confirmed that the project's decision to not practice TDD was an error.""}]"
Java,"To use Java Collections or another collections library? (Eclipse, Guava, Apache)",https://www.reddit.com/r/java/comments/10lwoni/to_use_java_collections_or_another_collections/,32,51,thiagomiranda3,1674752559.0,"So. This is a question I already made to myself more than one time, when working with my projects.

Should I just keep using the default Java Collections or should I use another one instead?

I usually end up mixing them both. Like using normal HashMap, ArraysList and when needed, just use a BidiMap from another library.

What is you opinion about this? Is there any benefit to completely change to other collections libraries, or should I just keep using the other ones when the base java collections don't meet my needs?","[{'Subreddit': 'Java', 'Reddit_Title': 'To use Java Collections or another collections library? (Eclipse, Guava, Apache)', 'CommentAuthor': 'v4ss42', 'Comment': 'Are your projects libraries that you expect others to use, or standalone applications?\n\nFor the former, dependencies are pretty important to consider, while for the latter they don‚Äôt really matter at all (at least technically - legally you should be ensuring you‚Äôre in compliance with your dependencies‚Äô licenses ofc).'}, {'Subreddit': 'Java', 'Reddit_Title': 'To use Java Collections or another collections library? (Eclipse, Guava, Apache)', 'CommentAuthor': 'deadron', 'Comment': ""Its rare that you need to deviate outside the standard collections library. BiMap is a good example though. If you are constantly reaching for something that isn't there you are either doing something unusual or you may not appreciate how to use the existing collections well enough.""}, {'Subreddit': 'Java', 'Reddit_Title': 'To use Java Collections or another collections library? (Eclipse, Guava, Apache)', 'CommentAuthor': 'cogman10', 'Comment': ""IMO, familiarize yourself with the JDK's collection API (especially if you've not since Java 6).  They've significantly expanded it over the years.\n\nA lot of the libraries you mentioned were written for Java 6 when the JDK had a pretty limited collection api and capabilities.  What I've personally found is I don't need 99% of what Guava or others offer because there are alternatives in the standard library that work just as well.\n\nCertainly use those libs if it'll save you a bunch of time, but don't use them just because they are familiar.""}, {'Subreddit': 'Java', 'Reddit_Title': 'To use Java Collections or another collections library? (Eclipse, Guava, Apache)', 'CommentAuthor': 'InstantCoder', 'Comment': 'Try to stick as much as possible to the main Java libraries. Even if you don‚Äôt like them.'}, {'Subreddit': 'Java', 'Reddit_Title': 'To use Java Collections or another collections library? (Eclipse, Guava, Apache)', 'CommentAuthor': 'jevring', 'Comment': ""Unless there's a super specific reason not to, use the Java collections. It's not like logging where the libraries are better than what's in the jdk. The jdk collections are great. Not to mention you're guaranteed to be able to use them in other projects, whereas you might not be able to use, say, guava at some other place.""}, {'Subreddit': 'Java', 'Reddit_Title': 'To use Java Collections or another collections library? (Eclipse, Guava, Apache)', 'CommentAuthor': 'tendy96goldy', 'Comment': 'Eclipse collections is a fantastic lib especially bc the developed bytecode optimized a lot of it. I think the OG developer of it is Donald rab and has a great blog as well regarding the Java ecosystem. \nI tend to prefer eclipse collections over standard collections due to API reasons'}, {'Subreddit': 'Java', 'Reddit_Title': 'To use Java Collections or another collections library? (Eclipse, Guava, Apache)', 'CommentAuthor': 'beall49', 'Comment': 'Collections is fine for me. However I like some of the others for their convenience methods.'}, {'Subreddit': 'Java', 'Reddit_Title': 'To use Java Collections or another collections library? (Eclipse, Guava, Apache)', 'CommentAuthor': 'Ruin-Capable', 'Comment': 'If the base collections don\'t meet your needs, then by all means, use ones from another library.  (Hopefully they implement standard collection interfaces).\n\nI often find myself writing wrappers around the base collections to add methods that they don\'t have.\n\nFor example I have a class ""FunctionalSet"" that adds non-mutating methods for calculating intersections, differences, and unions.  It delegates to an internal instances of LinkedHashSet for most things, and creates copies to generate the return values for intersections, differences and unions.'}, {'Subreddit': 'Java', 'Reddit_Title': 'To use Java Collections or another collections library? (Eclipse, Guava, Apache)', 'CommentAuthor': 'Upset-Ad-4393', 'Comment': 'I never ever used other collections lib. I find the standard ones useful everywhere. You just need to have a certain practice to use standard collections in optimistic way!'}, {'Subreddit': 'Java', 'Reddit_Title': 'To use Java Collections or another collections library? (Eclipse, Guava, Apache)', 'CommentAuthor': 'kevinb9n', 'Comment': 'There\'s no ""instead"" here. If you\'re using just one collections library it\'s gonna be \\`java.util\\`, no question.\n\n\\- a Guava author'}, {'Subreddit': 'Java', 'Reddit_Title': 'To use Java Collections or another collections library? (Eclipse, Guava, Apache)', 'CommentAuthor': 'None', 'Comment': 'Use fastutil. Lesser known but best in class performance.'}]"
Java,C# vs Java: in terms of fields they specialise in?,https://www.reddit.com/r/java/comments/10ck3ef/c_vs_java_in_terms_of_fields_they_specialise_in/,45,32,_TheSuperiorMan,1673789877.0,"I know both are general-purpose programming languages and are very similar. But in general, which fields do they specialise in?

Am  I correct to say that most C# projects are focused on building web  servers and developing games in Unity. While Java is much more broad are  used in web servers, mobile apps, financial and other enterprise  applications, as well as big data.","[{'Subreddit': 'Java', 'Reddit_Title': 'C# vs Java: in terms of fields they specialise in?', 'CommentAuthor': 'CyAScott', 'Comment': 'I‚Äôve developed for both. They are both great as web server tech. Despite what others have said, .Net hasn‚Äôt been tightly coupled with MS / Windows in a long time; so both are good for cross platform development. Both can be used for native cross platform apps, but IMO they both are ok but not great at it. Although I haven‚Äôt developed for games, I‚Äôve been told both are good at cross platform game development.\n\nHowever, what I think sets them apart is Java‚Äôs open source catalog of projects is far numerous compared to .Net‚Äôs open source catalog. Probably because Java is older, has been open sourced for a lot longer than .Net, has been cross platform for longer than .Net, and didn‚Äôt have a sorted past with MS.'}, {'Subreddit': 'Java', 'Reddit_Title': 'C# vs Java: in terms of fields they specialise in?', 'CommentAuthor': 'morhp', 'Comment': ""C# is more used in areas where you need hardware access or access to Windows functions, like in Windows client applications, Windows utilities and also computer games. You can also use C# for server software, but as far as I know there's not really a good point in doing that, you'd mainly do that if you just happen to have C# programmers instead of e.g. Java or anything else (like PHP, shudder) or a very Microsoft dependant shop anyway.\n\nJava is more used in open source and cross platform software and especially server side and in Android applications.""}, {'Subreddit': 'Java', 'Reddit_Title': 'C# vs Java: in terms of fields they specialise in?', 'CommentAuthor': '-techspec-', 'Comment': 'C# is preferable when it comes to developing any Microsoft related Software. Out of the box you have access to the Windows API for instance.\nJava was used in Android Apps(now it is Kotlin to my knowledge).'}, {'Subreddit': 'Java', 'Reddit_Title': 'C# vs Java: in terms of fields they specialise in?', 'CommentAuthor': 'Dwight-D', 'Comment': 'Generalizing a bit, I think C# is used more in shops with a history for Windows/Microsoft usage, while Java usually goes with more open source stuff. \n\nThat means Java is more likely to be used in ‚Äútechy‚Äù businesses, while C# is more common in smaller or conservative companies that are not necessarily tech-focused. There are plenty of exceptions in both directions though.'}, {'Subreddit': 'Java', 'Reddit_Title': 'C# vs Java: in terms of fields they specialise in?', 'CommentAuthor': 'Gadekryds', 'Comment': 'I dont think there is anything Java does that C# cant. \nBoth are used for a lot of the same fields - id look more into what i prefer to work with and what is looked for where i live'}, {'Subreddit': 'Java', 'Reddit_Title': 'C# vs Java: in terms of fields they specialise in?', 'CommentAuthor': 'glablablabla', 'Comment': ""To me they are both languages which are used extensively for backend development because of their huge and very good library eco system in that field. I don't see them as desktop app languages or as mobile app languages.""}, {'Subreddit': 'Java', 'Reddit_Title': 'C# vs Java: in terms of fields they specialise in?', 'CommentAuthor': '_trunk_', 'Comment': 'If the company or tech company likes to use macs for dev machine then they are most likely inclined to use java, if only given option to choose from the two. \n\nI work in a fintech company, we uses both. Java in the backend for integration with other systems in a larger scale. We use C# mainly for frontend portals - and its core strength over Java which is native desktop UI capability. Banks usually use PC for its normal day to day business, you know bank employees and staffs. That aspect of C# I‚Äôm sure its far better than Java. Urgh its really superb. I‚Äôm a Java guy though and love backend systems so if you ask me in that aspect I will say Java is far more advance in support, flexibility and adaptability as far as frameworks and other techs are concerned i.e. docker, kubernates, etc.'}, {'Subreddit': 'Java', 'Reddit_Title': 'C# vs Java: in terms of fields they specialise in?', 'CommentAuthor': 'Brodeon', 'Comment': ""I wouldn't say Java is used in mobile app since Google announced that Kotlin is the main language for Android development, you can however develop cross platform apps using C# and .NET Maui. You can also use C# and blazor to develop single page applications, but I think C# is mostly used to develop backend apps. Developing backend apps using C# is quite easy and you get all the DI goodness and a lot more. There is also a ton of libraries that makes the job easier""}, {'Subreddit': 'Java', 'Reddit_Title': 'C# vs Java: in terms of fields they specialise in?', 'CommentAuthor': 'fgzklunk', 'Comment': ""C# is Microsoft environments and dominates GUI development as well. Java is back-end web microservices. \n\nC# benefits form the easy interaction with Windows APIs, but even with mono it has not really taken hold for other environments.\n\nThe extensive library support of things like Spring/SpringBoot and it's portability means that it can be developed on Windows and run on Linux, especially good at running within a Docker container.\n\nJava was the official language of Android development but that is now Kotlin.""}, {'Subreddit': 'Java', 'Reddit_Title': 'C# vs Java: in terms of fields they specialise in?', 'CommentAuthor': 'AncientBattleCat', 'Comment': 'C fence is mostly used for cheap games on android.  And Java used in apps, back-end of major banks and government services.'}, {'Subreddit': 'Java', 'Reddit_Title': 'C# vs Java: in terms of fields they specialise in?', 'CommentAuthor': 'Joram2', 'Comment': 'Both Java + C# are used in every domain you mention: web apps, mobile apps, games, finance, enterprise, big data.\n\nThis is quite subjective, but I would say:\n\n- C# specializes in games, particularly because Unity is the leading game engine. There are awesome games made in Java like Minecraft and Slay the Spire, but they are the exceptions. There are zillions of games done in Unity.\n- Java excels in an ecosystem of data-centric tools such as Spark, Kafka, Flink, Druid, Pinot. You can use C# in many of those, but often it uses the Java API underneath (https://learn.microsoft.com/en-us/dotnet/spark/what-is-apache-spark-dotnet), and it generally makes more sense to just use Java, unless you have a super opinionated dev team.\n- C# excels in the Microsoft ecosystem. If you are wiring different Microsoft products together, it generally makes sense to stay Microsoft. .NET does fully support Linux, but IMO, good Linux support came late, like around 2015, after rival platforms like Python and Golang and Node.js really took off.\n- A lot of business software can be written in almost anything.'}]"
Java,Java OSS with best code quality you‚Äôve ever seen?,https://www.reddit.com/r/java/comments/10bn8sy/java_oss_with_best_code_quality_youve_ever_seen/,82,49,kharkivdev,1673699047.0,"What are some OSS Java projects with the best code quality to take inspiration from in your opinion? 

Or just describe project you worked on that you deem as an example of engineering excellence. 

p.s. it‚Äôs certainly not spring","[{'Subreddit': 'Java', 'Reddit_Title': 'Java OSS with best code quality you‚Äôve ever seen?', 'CommentAuthor': 'agentoutlier', 'Comment': ""Obviously it depends on what you value. That fact you don‚Äôt like Spring says you have some opinions you need to express so I think we can better answer what quality facet.\n\nI prefer libraries that focus on longevity, support, doc, and minimizing your coupling to the library itself. Obviously well tested.\n\nThat last ones are really important to me. So zero dependency do only one thing really well libraries that have been around forever with good documentation are quality in my book and not some debate on code aesthetics.\n\njOOQ is a pretty good example. I don‚Äôt always like Lukas code style but the doc and continued support is massive quality.\n\nI also value backward compatibility.\n\nAnd yeah so unlike you I think Spring core (not boot) is high quality.\n\nEDIT \n\nI think [Mockito particularly its Javadoc is high quality](https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html) albeit I'm not a fan of mocking. I actually liked how much it embraced javadoc and did the [same with my mustache project](https://jstach.io/jstachio/).""}, {'Subreddit': 'Java', 'Reddit_Title': 'Java OSS with best code quality you‚Äôve ever seen?', 'CommentAuthor': 'Jotschi', 'Comment': ""I drew some ideas on how to write cleaner code from the vert.x codebase. Most of the code is easy to read and follows a bunch of clean code best practices.\nIt has good documentation and does not over-javadoc everything. It makes good use of interfaces which in turn result in easy to write and read end-user code based on vert.x. \nIn some areas (e.g JSON handling) I would have welcomed a better abstraction. But that's not a big issue and honestly I'm not sure if that would have opened a new can of worms. (E.g. more complicated usage..)""}, {'Subreddit': 'Java', 'Reddit_Title': 'Java OSS with best code quality you‚Äôve ever seen?', 'CommentAuthor': 'gerlacdt', 'Comment': 'Zookeeper has a damn good source code quality'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java OSS with best code quality you‚Äôve ever seen?', 'CommentAuthor': 'Yojimbo261', 'Comment': '[deleted]'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java OSS with best code quality you‚Äôve ever seen?', 'CommentAuthor': 'thecuseisloose', 'Comment': 'What about the actual java source itself? I always found it interesting to dig in and see exactly how HashMap, HashSet, etc work'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java OSS with best code quality you‚Äôve ever seen?', 'CommentAuthor': 'axiak', 'Comment': ""It doesn't embrace all the modern Java idioms but I've learned a lot from reading Guava's source code and how they've encapsulated various implementation details.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Java OSS with best code quality you‚Äôve ever seen?', 'CommentAuthor': 'greglturnquist', 'Comment': 'What about Spring is a mess?\n\nThey actually use a combination of code for matters to ensure consistency and they also spend extra time polishing things so variables/methods are in a consistent order. \n\nAdditionally they spend time ensuring documentation aligns with it and also update Java docs for user consumption.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java OSS with best code quality you‚Äôve ever seen?', 'CommentAuthor': 'DisruptiveHarbinger', 'Comment': ""On the other hand, what is the worst code you've seen in major OSS libraries? I work with JTS and GeoTools quite a bit and while the features are great, their implementation feels very outdated, and the API is painful.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Java OSS with best code quality you‚Äôve ever seen?', 'CommentAuthor': 'brianm', 'Comment': 'Trino ( n√©e Presto ) is lovely. https://github.com/trinodb/trino'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java OSS with best code quality you‚Äôve ever seen?', 'CommentAuthor': 'HxA1337', 'Comment': 'The Java JDK'}, {'Subreddit': 'Java', 'Reddit_Title': 'Java OSS with best code quality you‚Äôve ever seen?', 'CommentAuthor': 'None', 'Comment': 'Uh Spring is an umbrella project combining loads of different code bases. The overall adoption in enterprise systems worldwide and experience with many components I‚Äôve worked with make it one of the consistently best codebases(including testing, samples and documentation) in Java for me. \n\nOverall code quality is a combined metric, imho it has to include the whole artifact, including documentation and so on. I can‚Äôt prove it objectively, Spring is THE SHIT trust me bro üòé it saved my ass more often than stack overflow but in very severe circumstances. Wasn‚Äôt it for the top notch docs and reaction times to bugs (yes, this is also code quality how fast you can move), I‚Äôd be sniffing shoes on porches nowadays (maybe not literally). \n\nWell, yes, I agree I am somewhat a Spring brat and biased\n\nEdit: typos, clarification'}]"
Java,"Testing without Mocks / Using ""Nullables"" as first class deliverable features",https://www.reddit.com/r/java/comments/106jhhb/testing_without_mocks_using_nullables_as_first/,18,28,Nikolaus_Markus,1673185146.0,"James Shore's ""Testing without Mock"" [https://mastodon.online/@jamesshore/109560187641736554](https://mastodon.online/@jamesshore/109560187641736554)  
[https://www.jamesshore.com/v2/projects/testing-without-mocks/testing-without-mocks](https://www.jamesshore.com/v2/projects/testing-without-mocks/testing-without-mocks) made me think a lot. But what if we could use some of the Nullables as first class deliverable features? [https://joerg-pfruender.github.io/software/testing/2023/01/08/nullables.html](https://joerg-pfruender.github.io/software/testing/2023/01/08/nullables.html) . What do you think?","[{'Subreddit': 'Java', 'Reddit_Title': 'Testing without Mocks / Using ""Nullables"" as first class deliverable features', 'CommentAuthor': 'EntangledNoodle', 'Comment': 'Maybe I\'m missing something, but it seems this technique is really just application of dependency inversion in disguise. The decision to include a constructor with default ""nullable"" parameters seems superficial. A test-scoped factory method could do the same as long as the class provides an appropriate constructor to provide all dependencies.\n\nIt is certainly reasonable to use dependency inversion to isolate classes from knowledge of implementations of their environment, replacing implementations where needed. But, remember that anything you choose to isolate this way would mean that you are not testing the some thing that will be in production. I don\'t see how this article moves the needle on that core issue.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Testing without Mocks / Using ""Nullables"" as first class deliverable features', 'CommentAuthor': 'jonhanson', 'Comment': 'Comment removed after Reddit and Spec elected to destroy Reddit.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Testing without Mocks / Using ""Nullables"" as first class deliverable features', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Java', 'Reddit_Title': 'Testing without Mocks / Using ""Nullables"" as first class deliverable features', 'CommentAuthor': 'k2718', 'Comment': ""I found your article intriguing but confusing. Your use of the term nullable to apply to a default or test implementation is confusing.\n\nAnd second, it sounds fraught with peril. Is your test scenario even valid with the nullable implementation? It seems easy to write an invalid test that way. I don't like mocks, but at least you can tune the behavior for each mock for individual test to provide the exact scenario needed for test.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Testing without Mocks / Using ""Nullables"" as first class deliverable features', 'CommentAuthor': 'ForeverAlot', 'Comment': 'proggit: <https://old.reddit.com/r/programming/comments/ztwtc5/testing_without_mocks_by_james_shore/>'}, {'Subreddit': 'Java', 'Reddit_Title': 'Testing without Mocks / Using ""Nullables"" as first class deliverable features', 'CommentAuthor': '_AManHasNoName_', 'Comment': 'Mocking is much clearer IMO. ‚ÄúNullable‚Äù sounds more like something that should have been wrapped with Optional these days.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Testing without Mocks / Using ""Nullables"" as first class deliverable features', 'CommentAuthor': 'stefanos-ak', 'Comment': ""he completely lost my interest at point 20. \n\nyou can't just ignore contact testing (api compatibility between services). \n\nI would say that relying on pact.io instead of mocking, is a MUCH better approach. As for stateful services (e.g. a database), a solution for not mocking is TestContainers.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Testing without Mocks / Using ""Nullables"" as first class deliverable features', 'CommentAuthor': 'raze4daze', 'Comment': 'Integration testing only for life'}, {'Subreddit': 'Java', 'Reddit_Title': 'Testing without Mocks / Using ""Nullables"" as first class deliverable features', 'CommentAuthor': 'cowwoc', 'Comment': ""\\> But, remember that anything you choose to isolate this way would mean that you are not testing the some thing that will be in production. I don't see how this article moves the needle on that core issue.\n\nIn my experience, mocking has the same problem. Most of the time when tests break, it is because the class being mocked has changed (e.g. a method was added) leading the mock to return null when it should not. You end up spending an unreasonable amount of time chasing mocking bugs instead of focusing on what you should be testing.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Testing without Mocks / Using ""Nullables"" as first class deliverable features', 'CommentAuthor': 'agentoutlier', 'Comment': '> Maybe I\'m missing something, but it seems this technique is really just application of dependency inversion in disguise. The decision to include a constructor with default ""nullable"" parameters seems superficial. A test-scoped factory method could do the same as long as the class provides an appropriate constructor to provide all dependencies.\n\nThat is not how I read it. Mocks and Stubs are inherently not included with the code base when deployed. Furthermore Dependency Inversion and thus Dependency Injection (based on your framing of deps inversion as you do not need DI for inversion) unlike say runtime user flag requires much more configuration change and usually a full reload of the application (in spring parlance this is an Application Context Refresh).\n\nIgnoring all the new?/made up jargon in the article I see value with what they are saying. I guess think of it as putting a service in ""maintenance mode"" like read only similar to how some companies do this for data migration (stack exchange comes to mind).\n\nWhether it replaces mocks seems orthogonal but I vastly believe mocks (as in mock framework and not a full TCK) are painful and I prefer not to use them in less I absolutely have to. I think the article should have spent more time on the problems with using mocks.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Testing without Mocks / Using ""Nullables"" as first class deliverable features', 'CommentAuthor': 'murkaje', 'Comment': 'Nah, you are completely correct. There is a weird tendency to prefer unit tests with heavy mocking to actual integration tests because they are ""fast"" and not flaky, probably due to some middle manager looking at ""coverage"" thinking it means something.\n\nHowever the unit tests are filled with mocks with the business case hidden somewhere in-between that most likely gets thrown out accidentally (or it\'s just impossible to decipher) when someone rewrites the implementation.\n\nCompare that to higher level tests taking longer to run a single test but covering so many layers and not needing a rewrite when implementation details change. Often when these tests are flaky then something in prod can also be flaky. Perhaps some dislike these tests because they actually test something.'}]"
Java,Do Java developers have lower salaries than JavaScript developers?,https://www.reddit.com/r/java/comments/1065y7l/do_java_developers_have_lower_salaries_than/,0,31,Pristine_Purple9033,1673141469.0,"Java is a great language with a clear structure and performant. On the other hand, JavaScript is mostly used on the front-end because NodeJS one thread might not be enough for large enterprise projects.

Java developers should have higher salaries, right?

The above statement is my own opinion. I don't have a lot of industry experience.

What do you Java developers think about this? Why does this gap exist?

Edit: Image source [StackOverflow Survey 2022](https://survey.stackoverflow.co/2022/#technology-top-paying-technologies)

https://preview.redd.it/j0y4377y1qaa1.png?width=1167&format=png&auto=webp&s=a54f01a78fbea3d19a254b68a688c531d9b54c2a","[{'Subreddit': 'Java', 'Reddit_Title': 'Do Java developers have lower salaries than JavaScript developers?', 'CommentAuthor': 'TheEveryman86', 'Comment': ""For sure skewed by the cost of living in the areas of employment. I'm primarily a Java dev (but do C++, Perl, Python, Bash, ksh, etc. as necessary) and make more than double what you listed (in the US).""}, {'Subreddit': 'Java', 'Reddit_Title': 'Do Java developers have lower salaries than JavaScript developers?', 'CommentAuthor': 'joehonour', 'Comment': 'I would say a lot of these surveys miss the finance sector, where Java devs are paid considerably more (in  my experience), but would not actively disclose their salary. Most modern day trading systems (having worked in FX) are built nearly exclusively in Java or C++.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Do Java developers have lower salaries than JavaScript developers?', 'CommentAuthor': 'weales', 'Comment': ""\\>PHP not to be seen from image\n\nPHP bros! I'm not feeling so well...""}, {'Subreddit': 'Java', 'Reddit_Title': 'Do Java developers have lower salaries than JavaScript developers?', 'CommentAuthor': 'JRSofty', 'Comment': ""Salaries are different depending on your location. In the US the salaries may be higher, but you also wouldn't have the benefits that European devs have (working health insurance, 30 days paid vacation a year, protection against being fired for no reason).\n\nBesides you shouldn't learn to be a developer for a specific language, learn the concepts so that you can apply them to any language. Then these charts are a guide to decide your career path.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Do Java developers have lower salaries than JavaScript developers?', 'CommentAuthor': 'TheChiefRedditor', 'Comment': 'Dunno where that list of salaries you are showing came from but those numbers are laughably low. Unless these are all for straight out of school with 0 experience entry level first job numbers.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Do Java developers have lower salaries than JavaScript developers?', 'CommentAuthor': 'Least_Bee4074', 'Comment': 'I‚Äôve been primarily a Java dev for 22 years. Haven‚Äôt made 64k/yr since 2001.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Do Java developers have lower salaries than JavaScript developers?', 'CommentAuthor': 'None', 'Comment': ""I hire devs based on experience and understanding of their craft.  Language doesn't come into it unless something specific is necessary.  I have sr devs paid equally for .js and java specific domains.  Jr devs are often crapshots no matter the language.  They either rise up or stagnate.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Do Java developers have lower salaries than JavaScript developers?', 'CommentAuthor': 'rbuen4455', 'Comment': ""From the charts, their roughly similar with no big difference, only JavaScript having ever-so slightly higher salary. Otherwise, they make high salaries, but in different fields. \n\nJava is de-facto of enterprise, JavaScript is de-facto of front-end web dev.\n\nBut pay isn't based on just knowing a language. It's skill + experience + knowledge of several technologies (including coding languages).\n\nBut yet again, I question these charts. Some put Java above C# when it comes to salaries and Assembly even less, and SQL isn't even a programming language.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Do Java developers have lower salaries than JavaScript developers?', 'CommentAuthor': 'Anders_142536', 'Comment': 'Here in austria the average salary of a java dev is higher by a fifth or sixth based on sites like kununu and glassdoor.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Do Java developers have lower salaries than JavaScript developers?', 'CommentAuthor': 'justsomerandomchris', 'Comment': ""Statistics about the average salary grouped by the primary language used (and anyway, how do these statistics handle stacks that feature multiple languages?) are completely irrelevant to the salary you have / will have in your next role. If you're asking purely out of curiosity, there could be a discussion about what different factors could go into creating this effect. But if you're asking because you're trying to figure out which language could unlock the highest paying jobs, in order to optimize your life, I'd suggest that it might be a complete waste of time. You're better off putting all that energy into solving problems, generally, as that's the skill software developers are actually paid for. The languages involved are, unfortunately often, quite incidental.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Do Java developers have lower salaries than JavaScript developers?', 'CommentAuthor': '_INTER_', 'Comment': '""Supply and demand"" does also apply to the job market. You\'ll find Cobol dev\'s earn a lot despite the relatively ancient tech. That\'s because supply (as in Cobol dev\'s) is low and demand is high (as in desperate companies paying any salary, not number of job offerings).'}]"
Java,"A Makefile to compile a Maven/Gradle-style project layout using a custom JDK (for use w/ IE, Valhalla) -- Built because neither IntelliJ nor Maven can build/run Valhalla projects right now",https://gist.github.com/GavinRay97/bd7e36f3db9d3414b680d30a70f71f32,34,14,GavinRayDev,1670534635.0,,"[{'Subreddit': 'Java', 'Reddit_Title': 'A Makefile to compile a Maven/Gradle-style project layout using a custom JDK (for use w/ IE, Valhalla) -- Built because neither IntelliJ nor Maven can build/run Valhalla projects right now', 'CommentAuthor': 'Amazing-Cicada5536', 'Comment': 'Gradle supports using additional toolchains. https://docs.gradle.org/current/userguide/toolchains.html'}, {'Subreddit': 'Java', 'Reddit_Title': 'A Makefile to compile a Maven/Gradle-style project layout using a custom JDK (for use w/ IE, Valhalla) -- Built because neither IntelliJ nor Maven can build/run Valhalla projects right now', 'CommentAuthor': 'kiteboarderni', 'Comment': 'Worth noting any performance numbers or too early for that yet?'}, {'Subreddit': 'Java', 'Reddit_Title': 'A Makefile to compile a Maven/Gradle-style project layout using a custom JDK (for use w/ IE, Valhalla) -- Built because neither IntelliJ nor Maven can build/run Valhalla projects right now', 'CommentAuthor': 'GavinRayDev', 'Comment': ""Made this for myself to test primitive classes + value objects for database performance stuff, figured I'd share in case anyone else ran into the pain trying to get a proper project compiling like I did.\n\nWas kind of surprised it didn't work with Maven:\n\n```\n[INFO] --- exec-maven-plugin:3.1.0:exec (default-cli) @ java-jdk20-maven ---\nError: LinkageError occurred while loading main class org.example.Database\n\tjava.lang.UnsupportedClassVersionError: org/example/Database has been compiled by a more recent version of the Java Runtime (class file version 64.65535), this version of the Java Runtime only recognizes class file versions up to 63.0\n[ERROR] Command execution failed.\n```\n\nRunning `mvn build` works with the below, but I wanted to also execute it in the same run:\n\n```\n<properties>\n    <jdk20.home>/home/user/downloads/jdk-20-vahalla-20-75</jdk20.home>    <maven.compiler.executable>${jdk20.home}/bin/javac</maven.compiler.executable>\n    <maven.compiler.release>20</maven.compiler.release>\n    <maven.compiler.compilerVersion>20</maven.compiler.compilerVersion>\n    <maven.compiler.fork>true</maven.compiler.fork>\n    <maven.compiler.enablePreview>true</maven.compiler.enablePreview>\n    <maven.compiler.verbose>true</maven.compiler.verbose>\n</properties>\n```""}, {'Subreddit': 'Java', 'Reddit_Title': 'A Makefile to compile a Maven/Gradle-style project layout using a custom JDK (for use w/ IE, Valhalla) -- Built because neither IntelliJ nor Maven can build/run Valhalla projects right now', 'CommentAuthor': 'buzzsawddog', 'Comment': 'I need to check if this is what we tried...   We have a few JNI wrappers we use for one project and I was using a c style plugin to to handle the c code compile of the library.\n\nWorks super amazing for compiling on Linux for amd.  Gets dicey as you move to Mac and impossible on my M1...  Random help posts say they will add support in the future or some crazy hacks that no longer work from several years back...  I finally got pissed and wrote a make file to build the library on my Mac so that I can run the application natively on my M1.\n\nAfter all the frustration I decided to make a story for the updating the CI pipeline since we may be moving to arm pods...  If this works you will have saved me from future trama!  Thanks.'}, {'Subreddit': 'Java', 'Reddit_Title': 'A Makefile to compile a Maven/Gradle-style project layout using a custom JDK (for use w/ IE, Valhalla) -- Built because neither IntelliJ nor Maven can build/run Valhalla projects right now', 'CommentAuthor': 'agentoutlier', 'Comment': 'Couldn‚Äôt you have used maven tool chain support?\n\nhttps://maven.apache.org/guides/mini/guide-using-toolchains.html'}, {'Subreddit': 'Java', 'Reddit_Title': 'A Makefile to compile a Maven/Gradle-style project layout using a custom JDK (for use w/ IE, Valhalla) -- Built because neither IntelliJ nor Maven can build/run Valhalla projects right now', 'CommentAuthor': 'urielsalis', 'Comment': 'What maven is complaining about is that you are trying to run with a JRE (what %JAVA_HOME% points to from maven perspective) that is older than the JDK you used to compile it'}, {'Subreddit': 'Java', 'Reddit_Title': 'A Makefile to compile a Maven/Gradle-style project layout using a custom JDK (for use w/ IE, Valhalla) -- Built because neither IntelliJ nor Maven can build/run Valhalla projects right now', 'CommentAuthor': 'Worth_Trust_3825', 'Comment': 'Your system/build is malformed. Remove java from PATH. You only need to set java.home property or JAVA_HOME environment variable.'}, {'Subreddit': 'Java', 'Reddit_Title': 'A Makefile to compile a Maven/Gradle-style project layout using a custom JDK (for use w/ IE, Valhalla) -- Built because neither IntelliJ nor Maven can build/run Valhalla projects right now', 'CommentAuthor': 'sandys1', 'Comment': ""Actually I came to comment the same. Gradle allows for custom toolchain. This didn't work ?""}, {'Subreddit': 'Java', 'Reddit_Title': 'A Makefile to compile a Maven/Gradle-style project layout using a custom JDK (for use w/ IE, Valhalla) -- Built because neither IntelliJ nor Maven can build/run Valhalla projects right now', 'CommentAuthor': 'Worth_Trust_3825', 'Comment': ""Personally, it's easier to set javahome. Not all plugins respect the toolchains. And if you're using maven wrapper, while not having java in your PATH, the wrapper will always correctly resolve which jdk to use.""}, {'Subreddit': 'Java', 'Reddit_Title': 'A Makefile to compile a Maven/Gradle-style project layout using a custom JDK (for use w/ IE, Valhalla) -- Built because neither IntelliJ nor Maven can build/run Valhalla projects right now', 'CommentAuthor': 'GavinRayDev', 'Comment': 'Oh, that makes a lot of sense then.\n\nI guess I need to set the Maven JRE explicitly as well? That would be a lot better than Makefiles.'}, {'Subreddit': 'Java', 'Reddit_Title': 'A Makefile to compile a Maven/Gradle-style project layout using a custom JDK (for use w/ IE, Valhalla) -- Built because neither IntelliJ nor Maven can build/run Valhalla projects right now', 'CommentAuthor': 'buzzsawddog', 'Comment': 'Details are fuzzy at best this was 2-3 months back.  I actually start PTO tomorrow until the end of the year :). Need to check my notes when I have a chance and will read the linked guide and try to report back ;)'}]"
Java,Options for targeting ios with Java,https://www.reddit.com/r/java/comments/zc3w07/options_for_targeting_ios_with_java/,28,13,Amazing-Cicada5536,1670140454.0,"There seems to be quite a few ways to run Java programs on ios, but none of them is streamlined. What I found so far:
-	google‚Äôs j2objc compiler (which has the disadvantage of.. well objectiveC, and thus not having a proper GC (it can leak cyclic data structures)
-	graal/gluon - gluon is mostly proprietary, but I have actually tried out a sample JavaFX program on my iphone, so it seems to be possible. Graal can target ios, so it is not streamlined but quite likely to work just fine
-	there is an official OpenJDK 9 ios port https://openjdk.org/projects/mobile/ios.html , but I can‚Äôt seem to compile it based on the instructions
-	https://www.reddit.com/r/ipad/comments/y2h75q/m1_ipad_pro_running_java_minecraft_w_optifine_via/ I don‚Äôt even know how it works, but it seems to run the whole bleeding edge openjdk project without a problem? (No jailbreak, but JIT compilation require some ‚Äúwell-known‚Äù hack employed also for gameboy emulators and the like)

Do you have experience with any of them, or do you have some resources on how to get them to work? I primarily want to write a JVM interpreter running on an ipad (for some basic ‚ÄúIDE‚Äù like thingy that can compile), but I am interested in any of these.","[{'Subreddit': 'Java', 'Reddit_Title': 'Options for targeting ios with Java', 'CommentAuthor': 'mazebert', 'Comment': 'I can highly recommend MobiVM. I‚Äòm maintaining a cross platform game that uses libgdx and compiles to iOS through MobiVM (fork of RoboVM after Microsoft killed it) and it keeps working flawlessly since almost 8 years. \n\nThis is mainly thanks to this guy (https://www.patreon.com/dkimitsa), it is insane how much passion he puts into the project to keep it up to date with the latest versions of iOS.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Options for targeting ios with Java', 'CommentAuthor': 'vprise', 'Comment': 'Also [Codename One](https://github.com/codenameone/CodenameOne/)'}, {'Subreddit': 'Java', 'Reddit_Title': 'Options for targeting ios with Java', 'CommentAuthor': 'None', 'Comment': 'I mean, iOS is not a supported Java platform since apple controls it very tightly, so the ""lack of polish"" is something you\'ll have to deal with.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Options for targeting ios with Java', 'CommentAuthor': 'preskot', 'Comment': 'I think libGDX still uses [RoboVM](https://github.com/MobiVM/robovm), but I‚Äôm not sure if it‚Äôs being actively developed anymore.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Options for targeting ios with Java', 'CommentAuthor': '_INTER_', 'Comment': 'A few other projects:\n\n* [Multi-OS Engine](https://multi-os-engine.org/)\n* [Avian](https://readytalk.github.io/avian/)\n* [MobileUI](https://mobileui.dev/)'}, {'Subreddit': 'Java', 'Reddit_Title': 'Options for targeting ios with Java', 'CommentAuthor': 'urielsalis', 'Comment': 'Not exactly Java but Kotlin compiles to iOS\n\nIf you want to write an interpreter you are better off trying to compile the C JDK or writing your own interpreter for the byte code (which is easier than it sounds)'}, {'Subreddit': 'Java', 'Reddit_Title': 'Options for targeting ios with Java', 'CommentAuthor': 'ForeignCabinet2916', 'Comment': 'But why though?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Options for targeting ios with Java', 'CommentAuthor': 'Amazing-Cicada5536', 'Comment': 'It was not criticism, I‚Äôm just interested in the state of targeting ios. Also, since compiling AOT is a possibility, there is not much apple can do to limit it.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Options for targeting ios with Java', 'CommentAuthor': 'wildjokers', 'Comment': 'RoboVM was killed by Microsoft via acquisition many years ago. There is an active fork though called MobiVM.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Options for targeting ios with Java', 'CommentAuthor': 'troelsbjerre', 'Comment': 'To clarify, Kotlin/Native interops with objective C. Kotlin/Native has a much smaller standard library than Kotlin/JVM. As a Java developer, you will find Kotlin/Native pretty bare bones, since you will be missing the entire Java standard library, which is normally available in Kotlin.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Options for targeting ios with Java', 'CommentAuthor': 'Firedude_', 'Comment': 'Also its performance is much worse than the JVM implementation'}]"
Java,Java records make Google's AutoValue mostly obsolete,https://www.reddit.com/r/java/comments/zatsd2/java_records_make_googles_autovalue_mostly/,114,25,kevinb9n,1670006352.0,"[AutoValue](https://github.com/google/auto/blob/main/value/userguide/index.md) has posted a new doc [comparing itself to Java record classes](https://github.com/google/auto/blob/main/value/userguide/records.md). ([Records](https://docs.oracle.com/en/java/javase/19/language/records.html) were new in Java 16, or earlier with `--enable-preview`.)

In short, it says: if you can switch, you should!

If you can't, using AutoValue now (and following a few guidelines listed in the doc) is still a good idea, because it leaves your code about as easy/safe to *later* migrate to records as anything could.

And note that AutoValue's builder generation support will continue to work for records (with a simple annotation change).

Kudos to all the [Project Amber](https://openjdk.org/projects/amber/) contributors for a job well done on records.

I'm happy to answer questions, though possibly with poor response time. (Credit to AutoValue's primary-author-by-far, √âamonn McManus, for writing the article.)","[{'Subreddit': 'Java', 'Reddit_Title': ""Java records make Google's AutoValue mostly obsolete"", 'CommentAuthor': 'AnEmortalKid', 'Comment': 'That‚Äôs good. It means they made a feature missing from the language, and once the language evolved it is no longer needed.'}, {'Subreddit': 'Java', 'Reddit_Title': ""Java records make Google's AutoValue mostly obsolete"", 'CommentAuthor': 'jared__', 'Comment': ""Same with Lombok and it's a good thing""}, {'Subreddit': 'Java', 'Reddit_Title': ""Java records make Google's AutoValue mostly obsolete"", 'CommentAuthor': 'nomader3000', 'Comment': 'Hopefully, Lombok will be next'}, {'Subreddit': 'Java', 'Reddit_Title': ""Java records make Google's AutoValue mostly obsolete"", 'CommentAuthor': 'emberko', 'Comment': ""Java Records is semi-feature because there still nor withers nor deconstruction support. As such they have a very limited use. I don't know anyone who uses them for implementing domain model or data classes. Don't get why everyone is so excited.""}, {'Subreddit': 'Java', 'Reddit_Title': ""Java records make Google's AutoValue mostly obsolete"", 'CommentAuthor': 'bkail', 'Comment': 'I really like `record`, but I suspect at my job, most cases that are using AutoValue will continue to do so because they want either:\n\n* non-null checks. I wish there was a more robust answer than manually adding `requireNonNull` to the constructor or deprecating it.\n* ImmutableX\n\n(Tangentially related, I wish AutoValue had some mechanism for internally converting to ImmutableX but leaving the API using plain X.)'}, {'Subreddit': 'Java', 'Reddit_Title': ""Java records make Google's AutoValue mostly obsolete"", 'CommentAuthor': 'franzwong', 'Comment': 'Yes, just like joda-time.'}, {'Subreddit': 'Java', 'Reddit_Title': ""Java records make Google's AutoValue mostly obsolete"", 'CommentAuthor': 'Enough-Ad-5528', 'Comment': ""I don't think record makes Lombok obsolete. I use it for @Data for JPA classes, @Value for other immutable classes, @RequiredArgsConstructor, @AllArgsConstructor, @Getter for one off getters in non-data classes, @Slf4j, @Builder, @ToString on a non-data classes sometimes during debugging just to see the fields of the class (that's so handy!), @Delegate and perhaps a few more smaller ones I am missing.\n\nIt will be a long time before Amber catches up with the boilerplate replacements enough for me to consider ditching Lombok. And since Amber is not really boilerplate reduction project, it is not going to happen anytime soon. Most likely, in one of the upcoming releases the hack that Lombok uses in the javac compiler will be closed off and we will be forced to migrate.""}, {'Subreddit': 'Java', 'Reddit_Title': ""Java records make Google's AutoValue mostly obsolete"", 'CommentAuthor': 'NaNx_engineer', 'Comment': 'i still use records and @data in the same project.  they have different use cases.'}, {'Subreddit': 'Java', 'Reddit_Title': ""Java records make Google's AutoValue mostly obsolete"", 'CommentAuthor': 'lukaseder', 'Comment': 'I use them all the time as data classes, so now, you already know 1 person.'}, {'Subreddit': 'Java', 'Reddit_Title': ""Java records make Google's AutoValue mostly obsolete"", 'CommentAuthor': 'krzyk', 'Comment': 'I use them everywhere I can. All dtos are a no-brainer, another classes it depends. But I also finally don\'t need convincing people that using `get` prefix is superfluous.\n\nEven Intellij has now generators for getter using ""record style"" (but hidden behind a config).'}, {'Subreddit': 'Java', 'Reddit_Title': ""Java records make Google's AutoValue mostly obsolete"", 'CommentAuthor': 'poepstinktvies', 'Comment': 'Value is not needed when using records, no? I thought records were immutable'}]"
Java,Dycon: `ldc` intrinsics for lazy dynamic constants,https://www.reddit.com/r/java/comments/z77xeo/dycon_ldc_intrinsics_for_lazy_dynamic_constants/,31,14,baggot5,1669668294.0,"Dycon allows pure Java to produce lazy dynamic constants that can be achieved only through `ldc` instructions. See [its GitHub repository](https://github.com/nnym/dycon). I currently use it in 2 other projects without issues. Questions, test reports, suggestions and complaints would be appreciated.","[{'Subreddit': 'Java', 'Reddit_Title': 'Dycon: `ldc` intrinsics for lazy dynamic constants', 'CommentAuthor': 'FirstAd9893', 'Comment': ""For anyone intending to use this, be sure to only do so with Java 19. A bug in the HotSpot compiler disables compilation if the condy ldc instruction isn't always reached. Methods which are affected by this are only ever interpreted, which is of course much slower.\n\nhttps://bugs.openjdk.org/browse/JDK-8280473""}, {'Subreddit': 'Java', 'Reddit_Title': 'Dycon: `ldc` intrinsics for lazy dynamic constants', 'CommentAuthor': 'danielaveryj', 'Comment': ""Comments on the readme:\n\nIt looks like the 'work-around' examples in the readme might be a bit off. The first uses a broken form of double-checked locking, that is vulnerable to instruction re-ordering ([read more](https://www.cs.umd.edu/~pugh/java/memoryModel/DoubleCheckedLocking.html)). The simplest fix to that example is to mark the field volatile\n\n    private static volatile T expensiveObject;\n\nThe second example looks like a clever reformulation of [lazy singleton](https://en.wikipedia.org/wiki/Initialization-on-demand_holder_idiom), which might work... in Java 16+ (prior versions did not allow static declarations on inner classes). But it might be better to present that pattern in its common form, especially since it looked like `dycon` is pitching for Java 11+\n\n    private static class Holder {\n        static final T expensiveObject = expensiveInitialization();\n    }\n    \n    private static T expensiveObject() {\n        return Holder.expensiveObject;\n    }\n\nAlso might want to choose a different type besides `T`, as `T` looks like a type parameter, but none of the examples (including `ldc`) compile if `T` actually is a type parameter, because all of the examples are static methods that do not declare `<T>`. And lazy singleton doesn't work with type parameters.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Dycon: `ldc` intrinsics for lazy dynamic constants', 'CommentAuthor': 'licenciado_vidriera', 'Comment': 'IMHO the ""verbose"" solution to lazy initialization is not verbose, and from my point of view much simpler and intuitive than using DYCON.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Dycon: `ldc` intrinsics for lazy dynamic constants', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Java', 'Reddit_Title': 'Dycon: `ldc` intrinsics for lazy dynamic constants', 'CommentAuthor': 'TheMode911', 'Comment': 'Looks awesome! But I then have to ask why does it take the OpenJDK team so long to implement such seemingly simple feature.\n\nDo you have any similar plan for `invokedynamic`?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Dycon: `ldc` intrinsics for lazy dynamic constants', 'CommentAuthor': 'benevanstech', 'Comment': 'Awww, dammit.\n\n""Dycon""? Why, why, when ""Daikon"" was right there?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Dycon: `ldc` intrinsics for lazy dynamic constants', 'CommentAuthor': 'cowwoc', 'Comment': 'Is the Lombok-style ""magic behavior"" or is it obvious what\'s happening from the reader\'s perspective?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Dycon: `ldc` intrinsics for lazy dynamic constants', 'CommentAuthor': 'baggot5', 'Comment': ""Thanks. I learned from the declaration that you linked. I've updated the README with the changes that you suggested. Initially Dycon was for Java 17; Java 11 was an afterthought.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Dycon: `ldc` intrinsics for lazy dynamic constants', 'CommentAuthor': 'JustAGuyFromGermany', 'Comment': ""It quickly becomes verbose if you have multiple static field that you want to initialize lazily independently of each other. Then you're writing a lot of boilerplate methods or one-time-use holder classes for each constant.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Dycon: `ldc` intrinsics for lazy dynamic constants', 'CommentAuthor': 'baggot5', 'Comment': ""Currently I use them with method handles‚Äîmost notably [`Unsafe`](https://github.com/auoeke/unsafe/commit/c2c0dba45e30937c6618b7810726c4656e675fc9#diff-217d1d0cf70fbc127dfeddce6c7a568ff459d67ba4fedfc2f27266b535562e43); whose load and initialization time I was able to reduce from \\~21 ms to \\~6 ms‚Äîreflection and where I need lazy initialization (as an example, lazily acquiring an `Instrumentation` instance).\n\nI looked at your project. I like that it apparently allows the generation of multiple `invokedynamic` instructions per `@InvokeDynamic` and that it  is not dependent on any compiler because it operates on class files.\n\nI might try a barebones implementation of `invokedynamic` like `invokedynamic((Lookup, String, MethodType, Object...) -> CallSite, Object... constantArguments)` that would be used like `invokedynamic(This::bootstrapMethod, <constant arguments>)`. (Update: it does not work with any bootstrap method with a different signature. I'll hold off on `invokedynamic` for now.)\n\nThanks.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Dycon: `ldc` intrinsics for lazy dynamic constants', 'CommentAuthor': 'baggot5', 'Comment': ""I've been searching the OpenJDK mailing list archives for information about the state of JEP 303. So far the only interesting thing that I found is [an old message](https://mail.openjdk.org/pipermail/valhalla-dev/2017-August/003065.html) on valhalla-dev.\n\nI imagine that `invokedynamic` support would be simple so possibly. Reportedly [Mjolnir](https://github.com/forax/mjolnir) can handle `invokedynamic` but I haven't tried it.""}]"
Java,Whats a good tool for applying code changes to many repos,https://www.reddit.com/r/java/comments/z2m0f0/whats_a_good_tool_for_applying_code_changes_to/,10,26,Apprehensive_Dog7514,1669200565.0,"We have a fleet of \~80 microservices based on Spring Boot 2.x and we are very low on headcount for that number. So constant changes in the hosting environment descriptors, and breaking or non breaking dependency updates and a plethora of other challenges are keeping us busy keeping the systems up-to-date instead of adding features.

I've been looking into improving that situation by finding some kind of tool that can apply code changes across all projects. So far I have found [Shepherd](https://github.com/NerdWalletOSS/shepherd) which seems kind of limited and a tailored towards javascript and file manipulation. Of course there is also [Copybara](https://github.com/google/copybara) but it seems more suitable to recurring tasks where you have to copy and transform code from origin repositories.

Is there something that can be used in a more generic kind of way? Kind of like ""Structural find and replace"" in IntelliJ but a bit more generic? Bonus points if this tool can also create a branch and PR for those changes.","[{'Subreddit': 'Java', 'Reddit_Title': 'Whats a good tool for applying code changes to many repos', 'CommentAuthor': 'agentoutlier', 'Comment': 'Why not make the shared parts their own single repository?\n\nIf it‚Äôs deps management Maven and gradle have solutions for that. Maven particularly as you can have a shared parent.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Whats a good tool for applying code changes to many repos', 'CommentAuthor': 'qmunke', 'Comment': ""If you have 80 services which break when others are updated then you've probably not got microservices - you've got a distributed monolith.\n\nSo rather than try and patch over the problem, you should begin to work towards a situation where you are no longer afraid updating one service will impact another unless you really mean it to (e.g. you are knowingly making an API contract change). Any other approach you try to take is just going to, at best, mask the underlying issue.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Whats a good tool for applying code changes to many repos', 'CommentAuthor': 'axiak', 'Comment': ""We use [openrewrite](https://docs.openrewrite.org/) as our way to run code transformations on lots of repositories automatically. You still need to invest a good amount of time in tooling to actually apply the transformations but it's a compiler plugin so it can support sophisticated transforms.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Whats a good tool for applying code changes to many repos', 'CommentAuthor': 'maxip89', 'Comment': 'I know you want to optimize but I have to ask you. \n\nDo you really want to go the path?\n\nIf you are already in a low headcount, then there will be a more sad testing situation for your microservices. \n\nAnd keep in mind spring boot 3.0 is coming with the java 17 minimum requirement. This will be fun.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Whats a good tool for applying code changes to many repos', 'CommentAuthor': 'norma001', 'Comment': 'Check out [Spring Boot Migrator](https://github.com/spring-projects-experimental/spring-boot-migrator) as well as openrewrite'}, {'Subreddit': 'Java', 'Reddit_Title': 'Whats a good tool for applying code changes to many repos', 'CommentAuthor': 'n4te', 'Comment': 'More microservices is key.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Whats a good tool for applying code changes to many repos', 'CommentAuthor': 'ryszard_lipton', 'Comment': 'Regarding shared configurations, you could consider using Spring Cloud Configuration Server or apply some plugin that would enrich service configuration with common parts, eg. append your common environment descriptors to every service properties file.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Whats a good tool for applying code changes to many repos', 'CommentAuthor': 'Alternative-Pick-442', 'Comment': 'OP do you work at twitter ? Jk.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Whats a good tool for applying code changes to many repos', 'CommentAuthor': 'Worth_Trust_3825', 'Comment': 'Monorepository will solve your issues.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Whats a good tool for applying code changes to many repos', 'CommentAuthor': 'maxxedev', 'Comment': 'Another tool: https://paypal.github.io/butterfly/'}, {'Subreddit': 'Java', 'Reddit_Title': 'Whats a good tool for applying code changes to many repos', 'CommentAuthor': 'Brosiedon54', 'Comment': 'Its a little basic but I used to do this with bitbucket when I worked at a company that was obsessed with ""micro services"" I had to chase stuff down in a dozen repos + sometimes.\n\nI\'d search all of the repos find the places it needdd to be changed and commit from the ui. As long as thr changes aren\'t huge. Mine were usually urls or service nanes'}]"
Java,Is Spring Professional Certification worth it?,https://www.reddit.com/r/java/comments/yzrnyd/is_spring_professional_certification_worth_it/,11,17,folli,1668907551.0,"I'm not a professional Dev but I have been using Java and Spring Boot for a couple of hobby projects in my free time.

In order to spruce up my CV and perhaps open some doors professionally, I'm wondering how to add some ""credibility"" to my skills. My first thought was getting the Vmware Spring Professional Certification.

- Do you think it's worth it?
- is the 'Vmware Spring: Core Training' course really a requirement to be admitted? I have no problem doing it, but the 3k USD price tag is way too steep IMO.
- Any other certifications you would recommend, perhaps more focused towards Java in general?

Feedback is very much appreciated!","[{'Subreddit': 'Java', 'Reddit_Title': 'Is Spring Professional Certification worth it?', 'CommentAuthor': 'encamino92', 'Comment': ""I have it. The certification itself doesn't make a difference, but it doesn't hurt either. The knowledge grasped about Spring internals is worth it and the most important thing, though. It helped me to make better use of the framework.\n\nI have used a study guide + I read the entire Spring core, Spring MVC, etc. documentation + bought a mock exam simulator and I passed it last year.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Is Spring Professional Certification worth it?', 'CommentAuthor': 'VanayananTheReal', 'Comment': 'Generally speaking, no, professional certs are not valuable unless they are in vendor tech that is very hard to learn. (Cisco UCCE is a quarter million dollar bundle of products. Cisco UCCE certs have value. You can technically build a lab environment with it, but...no. You get a job and they train you and pay for a cert.)\n\nSpring is something literally anyone can download and learn for free.\n\nYou add credibility by having real experience on your resume with the tool *and* being able to talk intelligently about it in the tech screen or by having projects using it in GitHub *and* be able to talk about it intelligently in a tech screen. \n\nBeing Spring certified says instead that you are the sort of guy who would pay $3k for the privilege of cramming for a dumb multiple choice test instead of...just building a cool website with Spring.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Is Spring Professional Certification worth it?', 'CommentAuthor': 'esfomeado', 'Comment': 'I have it and makes 0 difference to be honest.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Is Spring Professional Certification worth it?', 'CommentAuthor': 'maxip89', 'Comment': 'Start with Azure (AZ-104, AZ-305) or AWS certifications. \n\nThe spring one is not worth the money and time.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Is Spring Professional Certification worth it?', 'CommentAuthor': 'leleleledumdum', 'Comment': ""i have multiple java certifications from Sun's SCJP, to Oracle's OCP Java SE11, and having them has helped me gaining recognition from peers and future employers. \n\nas for my current employers, it seems that they dont even care lol.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Is Spring Professional Certification worth it?', 'CommentAuthor': 'ranny_kaloryfer', 'Comment': 'Leetcode certification is the only one worth the effort.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Is Spring Professional Certification worth it?', 'CommentAuthor': 'iwalkinthemoonlight', 'Comment': 'I‚Äôm not certain that the certification itself would be worth it, but the knowledge that the certification would equip you with might certainly prove useful in the industry. I have a few certifications on Spring Boot and Spring Cloud. Definitely help me use the framework better so I can write better code.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Is Spring Professional Certification worth it?', 'CommentAuthor': 'alwaysoverneverunder', 'Comment': ""It's not worth it for a bunch of reasons:\n\n- not a lot of good study materials\n- not a lot of mock/practice exams/questions\n- too much API bullshit questions that a sane developer just looks up or uses their IDE for\n- ...""}, {'Subreddit': 'Java', 'Reddit_Title': 'Is Spring Professional Certification worth it?', 'CommentAuthor': 'realqmaster', 'Comment': 'I was about to take it but the 10x on the price they put on it this year is simply not worth it.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Is Spring Professional Certification worth it?', 'CommentAuthor': 'AccomplishedLet5782', 'Comment': 'What kinda study guide did you use? I only found the VMware Learning platform as a resource so far.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Is Spring Professional Certification worth it?', 'CommentAuthor': 'Sighma', 'Comment': 'This. Cloud-related certifications are worthy to put into a CV and there are a lot of materials to jump into the tech easily and quickly. From my personal experience developers who know Devops stuff are in huge demand.'}]"
Java,Any examples of a well designed Java web backend?,https://www.reddit.com/r/java/comments/yzlxcp/any_examples_of_a_well_designed_java_web_backend/,101,33,lucidJG,1668891485.0,"I am a junior dev at a startup where we don‚Äôt really have any code reviews(it‚Äôs bad I know).  Because of this, I have been trying to learn good architectural patterns myself.  I have gone through countless spring backend example projects on Github including the ‚Äúreal-world‚Äù repos and many ddd examples.  Almost all of the examples that claim to have good design and use buzzwords seem to be a disaster.  I have seen countless ‚Äúdomain driven design‚Äù examples that lack any form of value objects and have raw primitives for every field.  Many of these examples have no concept of the single responsibility principle and will have one big User or Product class with all sorts of methods that accomplish different things.  On the other hand, many examples will have a big User/Product service class with a bunch of long procedural methods inside.  I have read about anemic vs rich domains and understand some people prefer anemic, but shouldn‚Äôt there at least be some separation between services where everything isn‚Äôt all in one UserService class?  I also haven‚Äôt seen any examples that take advantage of pure functions or anything that would make testing/mocking easier.  Am I overthinking things.  Should I just write code with high coupling that does the job and move on with things? I would love to get the perspective from some senior/better developers on this matter.","[{'Subreddit': 'Java', 'Reddit_Title': 'Any examples of a well designed Java web backend?', 'CommentAuthor': 'kubelke', 'Comment': 'Been there done that. Don‚Äôt think of it, get experience by solving problems, eventually you will know what is a good code. There are some good practices what you probably know today, don‚Äôt try to find a holy grail of spring boot expertise, there is no such thing. For many years, I have been working with people who have been much more experienced than me. They write exactly the same code what you can see on github.\n\nAdvices from me:\n- if it‚Äôs hard to test/write a test, then it‚Äôs a bad code.\n- don‚Äôt try to overuse design patterns if it‚Äôs not needed, you will make the whole code much harder to maintain \n- write ‚Äúgood enough‚Äù code, trying to solving future possible problems now is a waste of time\n- write junit tests \n- keep it simple stupid, don‚Äôt implement sophisticated solutions\n\nGood luck, have fun'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any examples of a well designed Java web backend?', 'CommentAuthor': 'bendem', 'Comment': 'Patterns solve problems. As a junior, you probably have not seen enough different problems to see patterns emerge so don\'t think too much about them. It kills me when people try to push patterns that don\'t actually solve anything just because ""SINGLETON!!! FACTORY!?! IoC!!!?!"". Follow the existing architecture until you understand exactly why it\'s that way, it\'s easier to read something that\'s uniformly bad than something that\'s creatively bad (the hard part of software is reading code, not writing it).\n\nIf there are no formal reviews, are there at least some colleagues you can talk to that can informaly tell you what they think or provide some kind of advice?\n\nOne piece of advice from someone that started junior in a startup right after leaving school, know when to jump ship. You are not irreplaceable, you don\'t owe the company anything beyond work hours. You\'ll do more hours than asked and that\'s ok, until it\'s not. Look for that moment when it stops being ok, brush up your cv and move on.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any examples of a well designed Java web backend?', 'CommentAuthor': 'm-apo', 'Comment': 'I prefer anemic domain model, because multiple use cases usually refer to the same object. If you push all the use cases to the same object, the object becomes a mess.\n\nUse case based separation provides usually better organization that stands the time.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any examples of a well designed Java web backend?', 'CommentAuthor': 'Wizions', 'Comment': "">  Should I just write code with high coupling that does the job and move on with things? I would love to get the perspective from some senior/better developers on this matter.\n\nBadly designed programs don't really do the job well for very long. A year down the line it becomes torture to make changes or fix bugs.  Then again, apparently it's very common for projects to be terribly designed.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Any examples of a well designed Java web backend?', 'CommentAuthor': 'mahamoti', 'Comment': ""Why don't you show the examples you're not happy with, and explain why.  There are dozens of versions of Spring's pet shop project out there that are designed well enough to get started with.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Any examples of a well designed Java web backend?', 'CommentAuthor': 'Ok-Acanthisitta-341', 'Comment': '""The Spring Pet Clinic"" is well explained and obviously well designed and coded as an official Spring projet :\nhttps://github.com/spring-projects/spring-petclinic'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any examples of a well designed Java web backend?', 'CommentAuthor': 'Twistedtraceur', 'Comment': ""Whatever you write now, no matter what, you will hate in 6 months. So just enjoy learning and solving problems. Don't reinvent the wheel. Libraries are your friends, especially at a startup. Composition over inheritance. Lots of small classes. lombok is your savior. Prefer immutable classes and objects (val > var) And don't expose your database objects, use DTOs.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Any examples of a well designed Java web backend?', 'CommentAuthor': 'Anton-Kuranov', 'Comment': 'There is no such thing as ""right"" architectural design. Approaches change every 5 years, so people are calling ""right"" something that it\'s still in style for now. But it comes the next turn and yesterday\'s patterns will be declared as antipatterns and obsolete approaches. So the advice is simple: don\'t follow the cargo cult, and decide yourself if an approach fits well in your specific case or not. If the pattern simplifies coding, debugging and reading, it worth to use it, if it only adds a headache despite many wisemen declare it as ""good practice"" -- don\'t bother to drop it out.\n\nI don\'t discard here that patterns first must be learned and understood.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any examples of a well designed Java web backend?', 'CommentAuthor': 'None', 'Comment': 'JHipster (examples of layered architecture) and JHipster lite (examples of domain architecture) are good examples and worth studying'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any examples of a well designed Java web backend?', 'CommentAuthor': 'agentoutlier', 'Comment': '>  Many of these examples have no concept of the single responsibility principle and will have one big User or Product class with all sorts of methods that accomplish different things. On the other hand, many examples will have a big User/Product service class with a bunch of long procedural methods inside. I have read about anemic vs rich domains and understand some people prefer anemic, but shouldn‚Äôt there at least be some separation between services where everything isn‚Äôt all in one UserService class? \n\nAn enormous amount of architecture is dependency management.\nJHipster gets this wrong IIRC. Most people do in general.\n\nWhat you need if you are not going microservices is compile time separation (or alternatively Arch Unit to enforce it via test.. but IMO dependency management approach is better). \n \nI have talked about this numerous, numerous, numerous times on this sub. If you leave shit in the classpath people will break architecture rules... I don\'t give a fuck about Uncle Bob and whatever shit if you do not enforce rules with build breaking then it just won\'t happen regardless of whatever bullshit ""bestagon"" is in vogue.\n\nSo you need to know how shit becomes dependency tied up. You need to  know about:\n\n* Maven deps management:\n   * Maven Scope Rules\n   * Maven Optional\n   * `<dependencyManagement>`\n* Module Info (`module-info.java`)\n   * Modularization is the most underrated feature of Java\n* The `ServiceLoader`\n   * It is not ideal buts JDKs builtin way of doing service locating has more type checking than other options.\n\n>  I also haven‚Äôt seen any examples that take advantage of pure functions or anything that would make testing/mocking easier. Am I overthinking things. Should I just write code with high coupling that does the job and move on with things? I would love to get the perspective from some senior/better developers on this matter.\n\nMock testing would be nice if Java was like a pure language like Haskell but it just really isn\'t worth it. *If your separations is high enough with your layers then your layers become just a like a library*. You don\'t mock libraries. You don\'t mock the JDK.... You mock frameworks. If you don\'t use shit loads of deps and your API separating layers doesn\'t expose deps then those libraries become libraries.... just call the library directly.\n\nSo lets go through this with an example but first fuck the shit with 99% of spring examples:\n\n*Spring: put everything in one project and have Spring load up... have pretend separation with java packages*\n\nLets say we have three layers which is pretty much canonical:\n\n* Web\n* Service\n* DB\n\n1\\. What we ideally do is have \n\n`web <--service-api --> service <-- db-api --> db` = 5 modules or projects\n\n2\\. What is easier is:\n\n`web <-- common-api --> service <-- common-api --> db` - = 4 modules or project\n\n3\\. What most examples have is:\n\n`web --> service --> db` all in one project/module = 1 modules maybe 3 modules\n\nSo to do number 1 or 2 you need to know how to manage deps.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Any examples of a well designed Java web backend?', 'CommentAuthor': 'PiotrDz', 'Comment': 'An example would be great to have some anchor for discussion.'}]"
Java,jstachio v0.7.0 released. A typesafe Java Mustache templating engine.,https://www.reddit.com/r/java/comments/yyvz87/jstachio_v070_released_a_typesafe_java_mustache/,45,17,agentoutlier,1668809186.0,"I recently did a preview release post on
https://github.com/jstachio/jstachio

It is now released as v0.7.0.

For reference the previous post was: https://www.reddit.com/r/java/comments/ya1zw5/quick_preview_of_jstachio_a_type_safe_java/

I promise in the future to post far less often with probably one more before end of year when I release 1.0... [and I will as I too hate projects that are endlessly in zero version](https://0ver.org/).

Now here we go with some propaganda on why jstachio should be on your short list of templating engines. I think it is the best option as well as least risky and here is why:

**It is typesafe.** like [Jte](https://github.com/casid/jte) and [Rocker](https://github.com/fizzed/rocker).

**Prevents accidental toString.** JStachio will statically check during compile time that only certain types are allowed to be formatted (aka outputted). You can obviously customize which types but I do not know of a single other templating language that does this.  Most will `toString` any variable that is an object.

**Inline templates.** (as in template in Java code). Most of the typesafe compiled templates do not support this (e.g. jsp, jte, rocker, etc). Get [JEP 430](https://openjdk.org/jeps/430) like support now.

**Its syntax is based on a well known spec w/ multiple implementations**. There are 3-4 Java implementations (handlebars.java, mustache.java, JMustache, JStachio) that will run Mustache and largely compatible which means even if jstachio somehow dies or does not have the features you want it to you have many options w/o changing all your templates. JStachio supports the most modern version of Mustache v1.3. Furthermore JStachio integrates with existing Mustache implementations like JMustache so you can combine them.

Basically every templating language other than the mustache ones do not have a spec. 

**Great editor support.** While Jte has its a really cool intellij plugin Mustache syntax is supported in almost every major editor/IDE. 


And finally Mustache can be used for Javascript client side rendering as well!

**It is well documented.** As mentioned earlier mustache has a spec but also [I have spent an ass load of time on Javadoc](https://jstach.io/jstachio/). Compare this to other templating engines javadoc like mustache.java and jte and you will see it has much better javadoc coverage.

**It generates readable Java code.** (both rocker and Jte do not). 

**It is fast.** It is as fast as Jte (see project page for details).

**It is fully modularized.** Real module-info support.

**Hot reloading.** By using the JMustache extension you can edit templates without waiting for the compile/reload cycle.

## Coming soon

**It will soon know about `@Nullable`** (the work is not done yet on this but again I don't know of any templating engines that do). Yes JStachio will check if your types are marked nullable and force you do to open the section for those variables.

**It will soon have a true zero dep version**. What that means is once the annotation processor runs and generates code not a single reference of JStachio will be in the code and thus you will not need the the JStachio runtime.

**Spring (Boot) plugins** coming soon before end of year with some interesting typesafe support.

As mentioned in my previous post any critique is highly welcomed!","[{'Subreddit': 'Java', 'Reddit_Title': 'jstachio v0.7.0 released. A typesafe Java Mustache templating engine.', 'CommentAuthor': 'agentoutlier', 'Comment': 'Oh I forgot to thank u/sviperll for starting the original project and his help.'}, {'Subreddit': 'Java', 'Reddit_Title': 'jstachio v0.7.0 released. A typesafe Java Mustache templating engine.', 'CommentAuthor': 'ggleblanc2', 'Comment': 'Is there an explanation of mustache somewhere?  Could you link to it?'}, {'Subreddit': 'Java', 'Reddit_Title': 'jstachio v0.7.0 released. A typesafe Java Mustache templating engine.', 'CommentAuthor': 'None', 'Comment': 'Damn. This is documented very well. Cool project!'}, {'Subreddit': 'Java', 'Reddit_Title': 'jstachio v0.7.0 released. A typesafe Java Mustache templating engine.', 'CommentAuthor': 'Worth_Trust_3825', 'Comment': 'How do I configure this without annotations?'}, {'Subreddit': 'Java', 'Reddit_Title': 'jstachio v0.7.0 released. A typesafe Java Mustache templating engine.', 'CommentAuthor': 'klekpl', 'Comment': 'Really cool project. The only downside in my personal opinion is the template syntax itself. Comparing to JTE or Rocker it is ugly...'}, {'Subreddit': 'Java', 'Reddit_Title': 'jstachio v0.7.0 released. A typesafe Java Mustache templating engine.', 'CommentAuthor': 'None', 'Comment': '[removed]'}, {'Subreddit': 'Java', 'Reddit_Title': 'jstachio v0.7.0 released. A typesafe Java Mustache templating engine.', 'CommentAuthor': 'manifoldjava', 'Comment': 'For a more capable, type-safe, Java-oriented templating system see  [ManTL](https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-templates) from the manifold project.'}, {'Subreddit': 'Java', 'Reddit_Title': 'jstachio v0.7.0 released. A typesafe Java Mustache templating engine.', 'CommentAuthor': 'agentoutlier', 'Comment': 'My bad:\nhttps://mustache.github.io/\n\nIn short it is templating language that has many implementations partly because of how simple the syntax is and probably because one of the github founders sort of created it.'}, {'Subreddit': 'Java', 'Reddit_Title': 'jstachio v0.7.0 released. A typesafe Java Mustache templating engine.', 'CommentAuthor': 'agentoutlier', 'Comment': 'There are compiler flags in the works for some configuration but you still need at least one annotation to trigger the annotation processor. The main option being to point to non standard location for templates.\n\nJStachio is very static so there is less runtime configuration.\n\nEdit I forgot to mention there is a whole SPI for runtime config: https://jstach.io/jstachio/io.jstach.jstachio/io/jstach/jstachio/spi/package-summary.html\n\n(I know you don‚Äôt like annotations as I have seen you complain about this before but it is an annotation processing library).'}, {'Subreddit': 'Java', 'Reddit_Title': 'jstachio v0.7.0 released. A typesafe Java Mustache templating engine.', 'CommentAuthor': 'agentoutlier', 'Comment': 'I haven‚Äôt heard that about mustache.\n\nUsually the complaint is that it is not powerful enough.\n\nWhat parts do you think are ugly?\n\nBTW Rocker like JSP but more so is barely a templating language as it is basically Java.'}, {'Subreddit': 'Java', 'Reddit_Title': 'jstachio v0.7.0 released. A typesafe Java Mustache templating engine.', 'CommentAuthor': 'agentoutlier', 'Comment': 'Well mustache by design is less expressive.\n\nI‚Äôm just not a fan of basically embedded java like JSP (mantl) or another Razor clone (rocker).\n\nAs ‚Äúmore capable‚Äù ManTL appears to have many of the same missing features I outlined but it looks like the manifold project does that with other features.\n\nManifold is interesting but like Lombok it‚Äôs not my cup of Java.\n\nAppreciate the comment though.'}]"
Java,Challenging Java Hobby Projects,https://www.reddit.com/r/java/comments/yuqc8z/challenging_java_hobby_projects/,104,34,sotosha,1668405085.0,"I'm a junior-mid level developer and I'm looking to start a project which, when finished can be used for showcasing various programming skills.

I looked around before posting but didn't find anything that was really interesting.

Any topic/idea is welcome :) 

If instead of an idea you have a cool website with examples (or projects of yours) or a place to get inspiration from that would also be highly appreciated.","[{'Subreddit': 'Java', 'Reddit_Title': 'Challenging Java Hobby Projects', 'CommentAuthor': 'benevanstech', 'Comment': 'The only current Java client for Mastodon is 4 years out of date - [https://github.com/sys1yagi/mastodon4j](https://github.com/sys1yagi/mastodon4j) \\- upgrading that to use the modern APIs would be a very worthwhile thing, and would probably teach you quite a lot.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Challenging Java Hobby Projects', 'CommentAuthor': 'tastybentoyum', 'Comment': 'I got into Java programming by writing plugins for Minecraft servers. My kids were getting into the game and after watching a few tutorials it clicked. I just racked up over 750k downloads of the game I wrote and it‚Äôs been fun. For work purposes it hasn‚Äôt been too useful directly, but it‚Äôs taught me a lot. You might want to look at mods or plugins of other games too.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Challenging Java Hobby Projects', 'CommentAuthor': 'ozzymozzy2211', 'Comment': 'if you like spring you can check https://github.com/codecentric/spring-boot-admin and they have some issues always waiting for contribution https://github.com/codecentric/spring-boot-admin/labels/ideal-for-contribution\n\nif you like javafx https://github.com/asciidocfx/AsciidocFX/issues \n\ncheck https://dev.to/surajondev/20-trending-and-popular-java-open-source-project-2igi for more open source java projects'}, {'Subreddit': 'Java', 'Reddit_Title': 'Challenging Java Hobby Projects', 'CommentAuthor': 'chas66', 'Comment': 'RosettaCode - https://rosettacode.org/wiki/Rosetta\\_Code - Some of these are challenging.  existing ones might benefit from an update to modern java, and missing ones could have an example created.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Challenging Java Hobby Projects', 'CommentAuthor': 'Ruin-Capable', 'Comment': ""It all depends on your interests.  For a while my nephew was really into chess, so I started working on a chess engine.  He lost interest before I got it working, so I stopped.  I learned a lot about how chess engines optimize their searches, so it was still a good experience for me.\n\nI'm a 3D printing enthusiast.  So I've got a side project working on a model slicer/gcode generator.  Turns out writing this type of software is \\*tough\\* (for me at least).  I spent over a day just trying to figure out how to determine whether or not the winding order of a polygon is clockwise or counter-clockwise (so that I could ensure surface normals point in the correct direction).  Now I'm trying to read the specs for 3MF ([https://en.wikipedia.org/wiki/3D\\_Manufacturing\\_Format](https://en.wikipedia.org/wiki/3D_Manufacturing_Format)) so that I can write a parser (or figure out how to use a 3rd-party parser).  I've \\*seriously\\* bitten off more than I can chew.  This means it's a great learning opportunity.\n\nOther ideas, implement a portfolio manager that uses OIDC and OAuth2 to authenticate with your brokerage's API and allows you to execute automatic trades based on market events.  (Be very careful with this if your brokerage doesn't provide a testing environment.)""}, {'Subreddit': 'Java', 'Reddit_Title': 'Challenging Java Hobby Projects', 'CommentAuthor': 'nihal_gazi', 'Comment': ""I always keep a list of ideas that I would like to code sometime.\nSome of the best are:\n\n1. Image to Image Style Transfer. (i know u will say that it requires a neural net, but trust me. I made that *without* neural net or any AI algorithm....hint: distance formula)\n\n2. Make a neural net library class. (A class that includes feed forward, back prop, etc.)\n\n3. A self learning 4x4(or 3x3) tic tac toe player. (Put 2 computers players to play against them and just watch them play and learn through reinforcement)\n\n4. Genetic net (make a neural net learn weights using genetic algorithm.....it's quite fun)\n\n5. Make a next-word-predictor AI that will predict the next possible word as you type given a dataset paragraph (it works with small paragraphs too....and it's fast)\n\n6. Use the idea in 5 and implement that in image, where u predict pixels one by one\n\n7. Make a 2D ray tracer in applet (my friend made one, and it unexpectedly produced interference patterns!!)\n\n8. Make a music generator in Java without AI (there are several awesome algorithms for it)\n\n9. Frame by frame video stabilization \n\n10. Make a random image using AI without training (use a random neural net with h=16 that accepts x,y and outputs r,g,b ..... The resultant image is a beautiful designed colourful image.....and remeber to keep the weights between the range of -16 to +16)\n\n11. Use idea 10 to generate a video.....the neural net then accepts 3 values, x,y,frame_num\n\n12. Use idea 10. the net accepts RGB of an image and outputs RGB to create a new image.\n\n13. Image morphing (input 2 pure BW images containing a shape....then using nearest neighbour pixels, morph the image A into image B)\n\nYou can ask me if you want more information""}, {'Subreddit': 'Java', 'Reddit_Title': 'Challenging Java Hobby Projects', 'CommentAuthor': 'marvk', 'Comment': 'I can recommend building a Chess Engine.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Challenging Java Hobby Projects', 'CommentAuthor': 'Ovalman', 'Comment': ""You can use Java for Android programming.\n\nI'm currently trying to web scrape a deals site using JSoup to notify me of super hot deals I usually tend to miss out on. My idea is to scrape the site every so often and if a deal rises rapidly, I'll get my phone to notify me. I've run into a few problems on my initial site but I am able to scrape another deals site I can work with.\n\nI have a few projects on the go, mostly using Java on the Android side of things although I am trying to make the switch to Kotlin.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Challenging Java Hobby Projects', 'CommentAuthor': 'kovrik', 'Comment': ""Implement a Lisp/Scheme interpreter in Java. I'd suggest implementing R5RS Scheme.\n\nUse Peter Norvig's tutorial as a reference (it's in Python, but you can easily translate it to Java): [https://norvig.com/lispy.html](https://norvig.com/lispy.html)\n\nWhy is it a good and challenging project?\n\n* it's super fun\n* you'll learn Lisp / Scheme. Could be your gateway to Lisps and Clojure and Common Lisp\n* you'll learn how interpreters work: parsing, interpretation, environments, scopes, macroexpansion etc.\n* lots of flexibility: R5RS ([https://docs.racket-lang.org/r5rs/r5rs-std/index.html](https://docs.racket-lang.org/r5rs/r5rs-std/index.html))  is super easy to implement (barring macros) but you can add many more features to your language: make it a hybrid of Scheme and Clojure and Racket; add persistent data structures; concurrency primitives; add compiler; implement optimizations (for example, tail-call optimization - that's an interesting thing to do in Java) etc.\n* make it have Java interop (or maybe Kotlin interop)\n* implement one-shot continuations\n* implement (lazy) sequence abstraction (like Clojure does)\n* implement full numerical tower (including ratios, complex numbers etc.)\n* finally, implement Scheme R5RS interpreter in your Scheme R5RS implementation (very meta). Make it bootstrap itself.\n\nIt sounds like a super difficult thing to implement, but it is actually surprisingly easy but very rewarding. Definitely give it a go.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Challenging Java Hobby Projects', 'CommentAuthor': 'maxip89', 'Comment': ""Maybe you are in crusing.\n\nThere is a crusing shipping company called Royal Caribbean International. I really like. The Entertainment is stunning on this ships.\n\nThe problem. There is no website or app that provides you what shows are on which ship currently.\n\n&#x200B;\n\nHow to get the information? There is the offical royal caribbean app, where you can get the information by logging in and go to each ship separatly (looking into their calendars).\n\n&#x200B;\n\nHow you can make it?\n\nDebug the API, get the information via a cronjob and display it on a website. I'm pretty sure you will get some visitors.\n\n&#x200B;\n\nIf you are not do it I will do it. ;)""}, {'Subreddit': 'Java', 'Reddit_Title': 'Challenging Java Hobby Projects', 'CommentAuthor': 'vmcrash', 'Comment': ""You may start to write a programming language and compile it to native - even just for learning purposes it is interesting. I've done it in the last half year.""}]"
Java,Why do people keep on using application servers like Jboss?,https://www.reddit.com/r/java/comments/yd0gr2/why_do_people_keep_on_using_application_servers/,88,92,Specialist_Bee_9726,1666690239.0,"I've worked on a few legacy projects built on Jboss and my experience with it was horrible. That is probably mostly due to the quality of the project they were huge monoliths with lots of legacy untested/untestable code.  
I find Jboss and war deployments in general much more challenging to work with, than a stand-alone jar. Why do people keep pushing for these technologies are there advantages I am missing?","[{'Subreddit': 'Java', 'Reddit_Title': 'Why do people keep on using application servers like Jboss?', 'CommentAuthor': 'Halal0szto', 'Comment': 'Pure momentum. They have the infrastructure, the processes, roles, people. It has problems, but learning new stuff, replacing servers, build processes, replacing some people would be a huge risk and cost.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Why do people keep on using application servers like Jboss?', 'CommentAuthor': 'harambetidepod', 'Comment': 'No one ever got fired for buying ibm.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Why do people keep on using application servers like Jboss?', 'CommentAuthor': 'dstutz', 'Comment': 'Just a handful of reasons off the top of my head:\n\n* It\'s a lot quicker to build a jar with JUST your application code in it...\n* It\'s faster to build a docker container where a 20kb jar is changed vs 25-100+ MB of jars...\n* It\'s nice to use technologies supported by standards (standards that the other frameworks in some cases also support) that are well documented and work together out of the box...\n\nI\'ve used Glassfish, Payara, DropWizard, JBoss AS, Quarkus, Spring and Wildfly.\n\nNot everything has to be the new hotness to work and allow companies/teams to make money/provide value.\n\nI love how Spring people rip on Java/Jakarta EE like it\'s the plague yet Jakarta are the ones pushing some of the specs they rely on forward. \n\n>A migration to Spring Boot 3 is necessary because Spring Framework 6 uses Jakarta EE 9, which supports the jakarta.* package namespace.\n\nWhy do people need to put down another project/tech just because THEY aren\'t using it?  It\'s healthier to have multiple solutions in a space.  So many comments on here: \n""***I*** don\'t see anybody using <X>...why is <X> still around?!?!?""\n\nAre you *really* complaining about JBoss or are you complaining about Legacy in general?  \n\n>    ‚ÄúThe reason that [programmers] think the old code is a mess is because of a cardinal, fundamental law of programming:\n\n  >  It‚Äôs harder to read code than to write it.‚Äù'}, {'Subreddit': 'Java', 'Reddit_Title': 'Why do people keep on using application servers like Jboss?', 'CommentAuthor': 'tuxtorgt', 'Comment': ""\\- Cost: It is cheaper for traditional companies to manage a couple of servers and deploy a variable number of applications  \n\n\n\\- Stability: Despite bad PR, good applications are quite capable over app servers  \n\n\n\\- Scalability: Before kubernetes, elastic and every trend. We used to scale by creating app server clusters, with a central point of management  \n\n\n\\- Easiness: Sometimes it's just easy to create a monolith for small apps  \n\n\n\\- Features: XA Transactions, Cron tasks, monitoring capabilities,   \n\n\nThe legacy part is IT's fault, you could maintain up to date applications with app servers :).  \n\n\nDisclaimer: I do a lot of kubernetes and docker on daily basis but I miss the simpler times with simple applications""}, {'Subreddit': 'Java', 'Reddit_Title': 'Why do people keep on using application servers like Jboss?', 'CommentAuthor': 'leleleledumdum', 'Comment': 'it has been there for 20years, and will still be there for 20more years. Thats the beauty of a legacy, yet stable and proven technology.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Why do people keep on using application servers like Jboss?', 'CommentAuthor': 'Apokaliptor', 'Comment': 'Legacy code, expensive and risky to change it'}, {'Subreddit': 'Java', 'Reddit_Title': 'Why do people keep on using application servers like Jboss?', 'CommentAuthor': 'SomervillainSB', 'Comment': 'I\'ve always felt the reverse.  If you know what you\'re doing with JEE, it\'s the fastest and easiest way to do it.  Unfortunately, few these days open up a book and therefore every Java EE deployment I\'ve ever seen was done wrong.  \n\nOf course, legacy J2EE sucks, but EJB3 and newer was quite nice.  The problem is every JBoss production deployment I\'ve personally seen was super legacy and didn\'t correctly leverage EARs or built-in services.  Most shipped 100s of redundant libs and used like one legacy API, like EJB 2.1 or something like that.  If you don\'t know the technology well and have just seen deployments like I\'ve seen, I\'d understand why you\'d hate it.\n\nI do whatever people pay me to do and Spring Boot seems to be the dominant format now.  \n\nIf I had to choose, I\'d go JBoss.  It just does a lot of things out of the box that Spring Boot doesn\'t, especially all the important ops features like monitoring and sophisticated deployment strategies and load balancing that help those who have to live with your code after you\'re done writing it.  For example, 10 years ago, we were doing rolling deploys...deploying new versions without a moment of downtime.  I am sure there\'s ""some"" way of doing this in Spring Boot, but I don\'t think it does that out of the box.  \n\nA modern Java EE server can do a lot of management, monitoring, and orchestration that folks seem to prefer doing in docker.  I am a developer by trade and not an ops professional, so perhaps they have a good reason to do so, but it seems like just ignorance to me.  \n\nBeyond that, the container provides a full stack.  I prefer that.  A huge part of my life is maintaining team-built stacks whenever blackduck finds something wrong.  With JBoss, I can just update the server and they go through the trouble of updating all the libs and ensuring they\'re all compatible with one another.\n\nAnother huge factor is support.  When I was working on JBoss EAP 7, I could write support whenever I had an issue and they\'d help me and often it was even my fault....their app server worked great, the mistakes were always mine.\n\nI loved how I can just write code in their full stack:  JPA, JAX-RS, CDI, etc...no dependencies imported.  I wrote complex and full-featured applications that were mere kilobytes and deployed nearly instantly.  In contrast, the Spring Boot apps I work with now are monsters and take 20x as long to boot.  Everything was faster in Java EE when I relied on native libs because they were pre-warmed by the application server and I was passing around tiny files.  \n\nMy current employer has a MASSIVE amount of infrastructure from dozens of vendors to replicate what I remember being built into JBoss EAP 10 years ago.  It seems silly.\n\nHowever, to be fair, I don\'t understand most modern trends.  I don\'t understand why server-side rendering is EVIL!!!!  I like AJAX when it makes sense, but I don\'t think EVERY page needs to be assembled by a dozen REST calls when it would be faster/cheaper to make those dozen calls on the server and send the rendered copule.  It seems like sometimes server-side rendering is best and many times client-side is best...but the world disagrees with me.  \n\nI don\'t understand why we\'d rather tightly couple the entire stack and make it a Spring Boot executable rather than deploy it to a well-tested feature-rich server with excellent ops and monitoring support built-in.  \n\nI don\'t understand why people prefer making a dozen fine-graned microservice calls at a huge cloud computing bill and performance penalty rather than make a coarser REST service that executes much faster and is more tailored for their specific use case.  \n\nI honestly don\'t understand most software development trends.  They seem to be objectively inferior.  However, what\'s important is my paycheck, so I don\'t really care if my employer wants to waste money chasing fads that are counter to their business needs.  I get paid the same.  Spring Boot seems like a regression to me.  I have never heard anyone who knows Java EE really well say it\'s actually a lot better.  I think most proponents are either employed by whomever owns Spring these days or simply don\'t know any other frameworks.  \n\nFor me, it\'s fine.  I\'ll use it, but I see Java EE as objectively superior.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Why do people keep on using application servers like Jboss?', 'CommentAuthor': 'MaskyDo', 'Comment': 'Another advantage is that u can deploy several web apps in a  single server. Leaning toward a modular architecture  can reduce the cost of updating ur app.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Why do people keep on using application servers like Jboss?', 'CommentAuthor': 'Ok-Bowler-842', 'Comment': 'Unpopular opinion: I would rather work with jboss and other mature infrastructure rather than k8s clusters. Currently trying to switch my startup job with bleeding edge technology to some legacy enterprise. But turned out it‚Äôs not that easy lol, every company claims to have ‚Äúno legacy tech‚Äù.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Why do people keep on using application servers like Jboss?', 'CommentAuthor': 'angryundead', 'Comment': 'Because you can configure the application server in a standard way and deploy different jars to it. It creates a separation between Dev and Ops. It allows for an inversion of control where the application can use the configuration of dependencies without needing to know anything about configuration.\n\nWe run a 20 year old legacy application on EAP7 that came from Solaris/EAServer (Jaguar).\n\nContainerized is different but we do that too. I‚Äôd rather use the new layering stuff (featurepack) that allows a more granulated approach but I really like EAP for certain things.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Why do people keep on using application servers like Jboss?', 'CommentAuthor': 'coder111', 'Comment': 'Ok, say you want to build a simple MVC web application. Nothing fancy, communicate with some other subsystem over JMS, connect to some database, respond some HTTP requests and generate either JSON or HTML responses.\n\nLet\'s say you want to do all that with Spring. You need to configure:\n\n* Your own HTTP server. Oh, you need HTTPs? Let\'s add extra hassle.\n* A connection pool for database connections. Or say two pools because you need to use two databases.\n* A connection to a JMS messaging server.\n* Now say you need XA transactions between your message consumer and database, so that in case of error both message becomes unconsumed and database changes get rolled back. I know people tend to pretend these days that transactions don\'t matter, but they do and you won\'t convince me otherwise. So add:\n* A transaction manager. If it\'s an XA transaction manager, it\'s likely going to want to persist stuff on disk too.\n* Lots of other stuff like logging, and other misc stuff.\n* Add a bunch of configuration somewhere.\n\nNow you have to learn, pick and configure ~10-15 different libraries/frameworks and integrate them in Spring. Also, learn pros and cons of say different connection pools and pick the one that suits your need. That\'s like a month of work right there, just to get an ""Hello Enterprise MVC Java"" app.\n\nSpring Boot (and there\'s a huge difference between Spring and Spring Boot) does a lot of that for you, but it does a lot of magic and it\'s often difficult to know what happens under the hood or what are the default magical settings or how to change them. Or what to fix when things go wrong. Deviate too much from the defaults and you\'re in trouble, and some things like XA transactions were poorly supported last time I tried (which was a while ago to be frank).\n\nAlternatively, you write your app to JavaEE/JakarataEE spec and drop it into JBoss. JBoss takes care of pretty much all those things for you. And JBoss as a collection of all those aspects is fully tested and chances are people you hire already know it if they have it on their CV. Instead of discovering 6 months into a project that the particular connection pool you picked triggers some bug in the transaction manager you picked. Or having to teach every new hire how 10 different frameworks are configured and interacting with each other in this particular standalone jar. The team next door picked 10 different frameworks to do the same thing (held together with Spring of course), so now you cannot easily get one of their guys to help you if you need something.\n\nI mean with simple stand-alone jars you\'re fine while they are simple. If you need ""enterprise"" features in them and complexity starts creeping in- they stop being easy and simple and become non-standard balls of stuff. And people who say transactional integrity or persistent messaging aren\'t necessary are lying or watched too many microservices presentations.\n\nI\'m not saying one is better than the other. Use the right tool for the right job, but standardization has its advantages, and flexibility has its cons, and you should be aware of them.'}]"
Java,What Kind of Spring projects should i do to get the recruter's attentions & proves my efficiency ?,https://www.reddit.com/r/java/comments/y8jpia/what_kind_of_spring_projects_should_i_do_to_get/,4,17,Nidhal_Naffati,1666227278.0," 

I m curently learning spring boot,  and I m seeking an entry level position  as a java developer. 
I have some java projects and now i building a rest api project that shows the following points:

*Basic knowledge  in Spring Boot 

*Spring Data JPA 

*Handling different types of exceptions

*Sending mails using smtp 

*Securing the endpoints 

*Testing 

I gonna use swagger after finishing the project and I will learn some docker stuffs.

Is that enough to land a Spring Entry Level position ?

If there is more kind of projects that I should do to improve my competence plz guide me and gimme a hand.","[{'Subreddit': 'Java', 'Reddit_Title': ""What Kind of Spring projects should i do to get the recruter's attentions & proves my efficiency ?"", 'CommentAuthor': 'Cinghiamenisco', 'Comment': ""I guess things will vary from company to company.\n\nAnyway, for what it's worth, yes. It would be great. I would be very happy to hire a junior developer with knowledge in these areas.\n\nBonus points if he's able to answer or talk a bit about some 'advanced' questions on these subjects:\n\n>Spring Data JPA \n\n* Eager vs Lazy initialization \n* N+1 query problem, and how to avoid it\n* Criteria API\n\n(Recommended book to learn about these stuff:  _'Java persistence with hibernate'_ )\n\n>Testing\n\nSlicing the application vertically, to individually test layers:\n\n* Unit Tests\n* DataJpaTest\n* WebMvcTest \n* SpringBootTest\n\n(Recommended site to read about these stuff: _reflectoring.io/spring-boot-data-jpa-test_ )\n\n>Securing the endpoints \n\nHttps, JWT, roles and authorities. How the Spring security pieces are glued together.\n\n(Recommended resources: _Laurentiu Spilca_ YouTube channel )\n\nTo be honest, if you happen to learn/know these stuff, you could probably aspire to even something more than a junior role. \n(Or at least, even if you'll be hired as a junior, you should be able to progress pretty fast)\n\nEdit: Other things you might want to try out: Messaging Solutions (Kafka and similiars), containers (docker and similiars), Swagger (Spring open Api), correlations-id (sleuth or similiars), caching (redis). \n\nResources to learn/overview these stuff: _Spring Microservices in action_ it's a Manning book.\n\nEdit 2: If you're good on the technical side, you could even think about improving on the 'architectural' side.\nI found the 'red' books of the _'Addyson-wesley Signature Series (fowler)'_ to be of great value!\n\nBut once again, I just want to point out that *these are extras* and I wouldn't expect a junior to know all of that stuff.\n\nAre just ideas of things often used that could give you a lead.\n\nKeep up the good work üí™""}, {'Subreddit': 'Java', 'Reddit_Title': ""What Kind of Spring projects should i do to get the recruter's attentions & proves my efficiency ?"", 'CommentAuthor': 'katotoy', 'Comment': 'A usual crud app via rest..'}, {'Subreddit': 'Java', 'Reddit_Title': ""What Kind of Spring projects should i do to get the recruter's attentions & proves my efficiency ?"", 'CommentAuthor': 'Worth_Trust_3825', 'Comment': 'Recruiters care little about your portfolio. Brush up the CV.'}, {'Subreddit': 'Java', 'Reddit_Title': ""What Kind of Spring projects should i do to get the recruter's attentions & proves my efficiency ?"", 'CommentAuthor': 'ozzymozzy2211', 'Comment': 'I would suggest to find a open source project and open pr for some issues, best way to learn and have code review experience. example https://github.com/codecentric/spring-boot-admin/labels/ideal-for-contribution\n\nand try to answer https://stackoverflow.com/questions/tagged/spring-boot?tab=Unanswered which will make you see what other devs are doing.'}, {'Subreddit': 'Java', 'Reddit_Title': ""What Kind of Spring projects should i do to get the recruter's attentions & proves my efficiency ?"", 'CommentAuthor': 'Legal_Being_5517', 'Comment': 'Your projects  in those areas are good enough imo .. build some micro services too'}, {'Subreddit': 'Java', 'Reddit_Title': ""What Kind of Spring projects should i do to get the recruter's attentions & proves my efficiency ?"", 'CommentAuthor': 'berry120', 'Comment': "" > Is that enough to land a Spring Entry Level position ?\n\nGood basis for a recruiter to give you an *interview* for a junior position, unless they're looking for something like a degree or bootcamp certification (in which case no amount of extra projects will help there.)\n\nTo actually land the position though, remember that you'll probably get asked basic architecture & language questions - so brush up on those beforehand :-)""}, {'Subreddit': 'Java', 'Reddit_Title': ""What Kind of Spring projects should i do to get the recruter's attentions & proves my efficiency ?"", 'CommentAuthor': 'xanyook', 'Comment': 'Start developping a demo app for yourself, something everybody knows so your friends will help in ideas.\n\nLike a cinema management, with rooms, clients, films capacity, scheduled time.\n\nOr a pet clinic wirh animals, clients, pets, appointments, email notification, doctors etc...\n\nThat will help you do some crud operation wirh different entities and relationship btw them. \n\nLater on, add authorization (front desk, customers, vet etc...) And a vue.js front end.'}, {'Subreddit': 'Java', 'Reddit_Title': ""What Kind of Spring projects should i do to get the recruter's attentions & proves my efficiency ?"", 'CommentAuthor': 'sugan0tech', 'Comment': 'Pet Clinic? May be.'}, {'Subreddit': 'Java', 'Reddit_Title': ""What Kind of Spring projects should i do to get the recruter's attentions & proves my efficiency ?"", 'CommentAuthor': 'None', 'Comment': '[removed]'}, {'Subreddit': 'Java', 'Reddit_Title': ""What Kind of Spring projects should i do to get the recruter's attentions & proves my efficiency ?"", 'CommentAuthor': 'VincentxH', 'Comment': 'r/cscareerquestions for you'}, {'Subreddit': 'Java', 'Reddit_Title': ""What Kind of Spring projects should i do to get the recruter's attentions & proves my efficiency ?"", 'CommentAuthor': 'awolfard', 'Comment': 'Try JHipster. Study the generated code and then try building something yourself (JAVA Pet Store for instance).'}]"
Java,Reposilite 3.x released - alternative lightweight Maven repository manager for hobbyists,https://www.reddit.com/r/java/comments/xy07vc/reposilite_3x_released_alternative_lightweight/,88,19,dzikoysk,1665151972.0,"Hi folks!

I'm working on Reposilite and in September I've released 3.x.

* [https://github.com/dzikoysk/reposilite/releases/tag/3.0.0](https://github.com/dzikoysk/reposilite/releases/tag/3.0.0) (latest: 3.0.4)

Reposilite is easy-to-use repository management software dedicated for the Maven based artifacts in the JVM ecosystem. It's usually enough for hobbyists/smaller companies that want to just store some libs/mirror other repositories.

More than 1.5 year ago I've shared it with you and received pretty positive feedback, so I hope you'll like this one too :)

* Old thread: [https://www.reddit.com/r/java/comments/k8i2m0/reposilite\_alternative\_lightweight\_maven/](https://www.reddit.com/r/java/comments/k8i2m0/reposilite_alternative_lightweight_maven/)

Previously I've mostly talked about how this project started, this time I'll just throw a summary on some technical decisions and how the maintenance process for such OSS project is going, maybe it'll be interesting to some of you.

**Bio**

Reposilite has been pulled from Docker \~640k times, and manually downloaded about \~40k times. Not sure how much comes from automated bot/service requests, but another thing I can say is that it was launched \~14k times this year *(as long as those instances have access to Internet, they request one of my endpoint during startup).*

Since I've decided to publish the project, it slowly earns more popularity. It's not one of projects that gains 1k stars per day, so I'd say that it's all about being consistent and slowly fulfilling long-term goals, so people see they can somehow trust the project.

Naturally I've ended up with quite a lot of bug reports/feature requests on tracker, so at some point, in every project there's time to identify breaking changes and start working on a new major version. In my case it was S3 support and overall state of sources.

Because it's open-source and I'm basically doing it for free, I like to constantly use new tools to just learn more. One of the most significant changes I've made was a full rewrite to Kotlin. To be honest, at the time I wasn't really a big fan of it, I mostly had pretty poor experience with language in the past (Android), but at the same time I felt pretty ""limited"" by Java in terms of how much effort it needs to write code that doesn't randomly blow up at runtime, so here it is. It's not about which one is better, both langs have pros and cons, imo it depends on use case and for me it just simply works better here.

Some extra thoughts/personal experiences I have about development in general after this time:

* High test coverage (90%+) was pretty unhealthy for the project, it often ends up with various tests for internal impl/it's hard to do anything in the project and in return it doesn't give you that much. Testing public API (like facades) is all I need in most cases, in the end it should be the only entrypoint to your impl. I'd say that replacing Groovy with Kotlin, particularly in test scope was a big upgrade for me and it works way better in the long run - simply due to better IDE support and stability.
* Exception free workflow - I could be extreme here, but I literally just got rid of runtime Exceptions in Java (and Kotlin) by simply using result pattern, \`Result<Value, Error>\` (often represented by e.g. Either). Type based error handling forces me to handle those exceptions each time I interact with such API, so it's just safe. I know it could be painful and it's hard to read if you're not familiar with it, but it just works.
* Implement features as simple as possible, try to avoid any fancy well-known tools in Java out of your control like reflections (and it also means DI frameworks etc.), non-standard serialization & ORMs & other black-boxes that will eventually hurt you. There's nothing worse than just seeing how your application is affected by other projects' side-effects and not being able to simply fix it.
* *More but this post is already too long >.<*

During the development of Reposilite, I've also got involved into Javalin development, especially [5.x](https://javalin.io/news/javalin-5.0.0-stable.html) \- that much that I even joined the organization. If you're looking for lightweight http framework, I can guarantee it'll just simply work! :)

**Tech**

Reposilite  requires at least Java 11 and +/- 16MB of RAM (depends on JVM version & plugins, so it's safe to just stay on 32MB to avoid any issues). Stack:

* Backend: Kotlin + Javalin 5.x (based on Jetty) + Exposed (SQL) + AWS SDK + JUnit + Testcontainers
* Frontend: Vue3 + Vite + WindiCSS + JsonForms
* Site: Next.js + Vercel + Chakra UI

It's also **Hacktoberfest**, so if you'd like to contribute this month to OSS, we have some relatively good issues for newbies :)

* [https://github.com/dzikoysk/reposilite/issues](https://github.com/dzikoysk/reposilite/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22)","[{'Subreddit': 'Java', 'Reddit_Title': 'Reposilite 3.x released - alternative lightweight Maven repository manager for hobbyists', 'CommentAuthor': 'szabba', 'Comment': ""A Maven repository can be very simple. We did have a use case in a previous project where (in context) it made sense to just use NGINX with a bit of configuration for it. Didn't have a lot of features you might want/need, but when it's enough it's enough. And it uses a silver of the resources Archiva/Jenkins and other JVM based solutions need\n\nThat being said, you have impressive numbers as well! Props.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Reposilite 3.x released - alternative lightweight Maven repository manager for hobbyists', 'CommentAuthor': 'thatsIch', 'Comment': '> Exception free workflow\n\nWe also implemented our own `Either`-framework in Java to handle those, but I would argue, that it should just replace checked exceptions and not runtime exceptions. Those are still valid to address unfulfilled assumptions (like NPEs)\n\nRegarding Reposilite:\n\nIf I am in the process of setting up a repository for my team:\n\n* why should I choose your solution?\n* Is there some comparison between alternatives? I have no idea how many resources Nexus or Artifactory require.\n\nThanks for sharing!'}, {'Subreddit': 'Java', 'Reddit_Title': 'Reposilite 3.x released - alternative lightweight Maven repository manager for hobbyists', 'CommentAuthor': 'joshuasing6', 'Comment': ""I discovered Reposilite around 2 years ago and have been using it ever since.  \nIt's an amazing piece of software and I haven't had any problems while using it so far, and the performance of it still surprises me even now.\n\nI currently run Reposilite on Kubernetes with 256mb of RAM allocated to it, however Reposilite averages around 25mb of RAM, and this is for a public repository that is being used by developers and automated software all around the world.\n\nThe author of this software is also a really nice person and is usually quick to respond to anyone's questions and often helps people solve any problems they have while using Reposilite.\n\nThank you for creating this piece of amazing software :)  \nI cannot wait to see what this project will continue to become.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Reposilite 3.x released - alternative lightweight Maven repository manager for hobbyists', 'CommentAuthor': 'freshprince0007', 'Comment': 'Really impressed with this!\nJust does what it needs to do without insane requirements and looks great. The ldap/token approach is great. \nI\'m considering switching over from Artifactory OSS as it is painfully slow and unituitive.\n\n\nI got some questions if you don\'t mind\n\nMy sole hesitation to use reposilite is the ""enterprise"" readyness. Is this stable to run a 1TB sized repo used by 100 people?\n\nDoes it index the repo in the db? Or what is stored in the db exactly?\nWe are mainly running on postgres. But postgres is at your own risk if I understand correctly?\nIf the size of the db remains small, I guess the internal db is sufficient? Or is mariadb a requirement for performance?\n\nWe also use Swagger and javadocs but I\'m not sure how this integrates exactly with reposilite?\n\nIs there a flat repository browser like an Apache file browser to access the artifacts? Basically a black text on white background browser if you understand what I mean.\n\nI wil continue playing with and doing a test import from our Artifactory. \nGreat work on your project and I can really see this becoming more adopted by people like me just looking for a lightweight maven repo. \n(I\'m also looking for a container registry solution like your maven repo project at the same time) :-)\n\nThanks in advance,'}, {'Subreddit': 'Java', 'Reddit_Title': 'Reposilite 3.x released - alternative lightweight Maven repository manager for hobbyists', 'CommentAuthor': 'demkom58', 'Comment': 'Looks nice! What about native image of Reposilite?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Reposilite 3.x released - alternative lightweight Maven repository manager for hobbyists', 'CommentAuthor': 'a_kurth', 'Comment': ""Thanks for this project; I‚Äôve already used it at home for a while ‚Äì running within kubernetes ‚Äì and recently switched to version 3.\n\n>code that doesn't randomly blow up at runtime\n\nWould you mind explaining what you mean by this?""}, {'Subreddit': 'Java', 'Reddit_Title': 'Reposilite 3.x released - alternative lightweight Maven repository manager for hobbyists', 'CommentAuthor': 'dzikoysk', 'Comment': ""Thanks, that's how I started, and I guess a lot of people, to handle basic stuff. But if you want anything more than pure filesystem it's where the problem starts. Well, you could pretty much just launch a new instance of Nexus that will literally just consume your VPS or Artifactory where most of features are unavailable as those products are focused on paid versions for enterprise. On the other hand Reposilite always just ran on the potato and provides those basic features + to be fair, pure JVM is pretty lightweight :)""}, {'Subreddit': 'Java', 'Reddit_Title': 'Reposilite 3.x released - alternative lightweight Maven repository manager for hobbyists', 'CommentAuthor': 'dzikoysk', 'Comment': "">We also implemented our own Either-framework  \n in Java to handle those, but I would argue, that it should just replace  \n checked exceptions and not runtime exceptions. Those are still valid to  \n address unfulfilled assumptions (like NPEs)\n\nI'd say the more codebase you control the easier it is to apply it (obviously), but it's not impossible, I've once was implementing this approach in existing project and it was pretty helpful too + there's significant difference between error response and actual exception at runtime - in most cases exceptions in Java sadly represents the first scenario. I'm not fully against exceptions, but I think it should be used only to represent errors that were truly unexpected.\n\nIf there's a risk that given method will trow an exception, I usually just use sth like \\`Result.supplyThrowing\\` to execute unsafe part of code and if I'd be honest - the combination with Kotlin made that I didn't see a single NPE this year, ofc other runtime exceptions happen from time-to-time, but it's pretty rare and always comes from 3rd party source, so in the end it's still somehow a pros for me, because errors I don't know are not passed further. \n\n\n> why should I choose your solution?\n\nI think the question should be `when` you can choose it. I'm obviously not able to provide all features like professional competition, that's why in general I see 3 groups of users:\n1. JVM-only projects, group of hobbyists with private & public projects that look for a simple solution in CI/CD area. \n2. Individual needs - relatively simple sources, plugin system etc. are quite good entrypoint for users/smaller organizations that want to somehow extend Maven repository with custom functions. As an example, I had user that wrote licensing system for their product around it.\n3. Mirroring & caching - to improve performance or just cache artifacts (internal network / even localhost, to provide reliable alternative to m2 directory). \n\n\n> Is there some comparison between alternatives?\n\nThat's on [todo list](https://github.com/dzikoysk/reposilite/issues/1137), but it's this kind of work that requires quite a lot of work (benchmarks and comparisons of features) from docs segment, that we still didn't do yet :< Maven specification is fully covered by the project, so it's more like about fancy features around it. The best way to see if it's ok for you is to define your target environment and see which project supports it and what's the chance to get it fixed/covered in case of some issues. From my side I can at least say that I'll try to solve the issue like those 600 before! :)""}, {'Subreddit': 'Java', 'Reddit_Title': 'Reposilite 3.x released - alternative lightweight Maven repository manager for hobbyists', 'CommentAuthor': 'dzikoysk', 'Comment': ""Thanks üíú It's also good to have you around the project! :)""}, {'Subreddit': 'Java', 'Reddit_Title': 'Reposilite 3.x released - alternative lightweight Maven repository manager for hobbyists', 'CommentAuthor': 'None', 'Comment': '>I currently run Reposilite on Kubernetes with 256mb of RAM allocated to it, however Reposilite averages around 25mb of RAM\n\n~~Wow, that seems pretty low. Is that with GraalVM or regular JVM?~~\n\n>Reposilite easily handles traffic using about 32-64MB of RAM. I usually recommend 32, my main public instance runs on 64MB and it handles about 5M requests per month'}, {'Subreddit': 'Java', 'Reddit_Title': 'Reposilite 3.x released - alternative lightweight Maven repository manager for hobbyists', 'CommentAuthor': 'dzikoysk', 'Comment': 'Thanks! :) \n\n> My sole hesitation to use reposilite is the ""enterprise"" readyness.\n\nThe ""enterprise readyness"" is slightly fuzzy term, everyone can interpret it differently. I can say it\'s used mostly by standalone developers/smaller teams, but there are also some smaller companies that I know use it at some point. Nexus/Artifactory is the most common choice, because of the fact they support out of the box more build systems and companies usually do more than just pure JVM projects. \n\n>  Is this stable to run a 1TB sized repo used by 100 people?\n\nReposilite does not cache things in memory, so it\'s more up to your storage. In local configuration you can also adjust number of threads Reposilite can use for serving http requests/db queries/async stuff, by default they\'re relatively low, because most users doesn\'t really need a lot of resources. I sometimes post details about resources used by maven.reposilite.com on my Twitter, might be also helpful to find out how it perform:\n\n- https://twitter.com/dzikoysk/status/1590338747367043072\n\nSpeaking of people, Reposilite uses pretty straightforward approach to grant access to users, as long as such simple setup is enough for you it should be just fine. LDAP support is also pretty simple as I\'m not that familiar with it, but if you\'ll find some issues feel free to report this and hopefully we\'ll figure it out. If you\'re not sure how it works you can start by investigating the full docs related to tokens & routes:\n\n- https://reposilite.com/guide/tokens\n- https://reposilite.com/guide/routes\n\n> Does it index the repo in the db? Or what is stored in the db exactly? We are mainly running on postgres. But postgres is at your own risk if I understand correctly? If the size of the db remains small, I guess the internal db is sufficient? Or is mariadb a requirement for performance?\n\nDatabase keeps data about tokens, repositories (setup) and statistics (pretty much). By default Reposilite uses SQLite, but you can always use remote database if you want to keep that data out of the local fs.\n\n> We also use Swagger and javadocs but I\'m not sure how this integrates exactly with reposilite?\n\nReposilite can host Swagger UI if you want to get access to Reposilite\'s API, like e.g. here:\n\n- https://maven.reposilite.com/swagger/\n\nJavadocs are also available through plugin, you can get each docs by requesting given path, e.g.:\n\n- https://maven.reposilite.com/javadoc/releases/com/reposilite/reposilite/3.2.0\n\nAt this point, I want to emphasize that this Javadoc plugin is not perfect and in general we want to rewrite it & merge with the main codebase, but it\'s open source project so I just need some free time I can allocate to resolve this issue.\n\n> Is there a flat repository browser like an Apache file browser to access the artifacts? Basically a black text on white background browser if you understand what I mean.\n\nNo, there\'s only an UI. In case of some missing features etc. just report them directly on GitHub so we can discuss it and find the best approach. It\'s also good to mention that even if you\'ll need some custom features, you can write a dedicated plugin for your company.\n\n> I\'m also looking for a container registry solution like your maven repo project at the same time\n\nI want to support OCI specification for containers directly in Reposilite! Hopefully someday I\'ll find some time to address this issue üòÖ'}]"
Java,Favorite Frameworks / Use Cases For Java (Not Web Dev)?,https://www.reddit.com/r/java/comments/xee6v5/favorite_frameworks_use_cases_for_java_not_web_dev/,12,34,BradPittOfTheOffice,1663191695.0,I am currently a senior in School & have to do a project using Java. Admittedly I am more interested in Machine Learning / Hardware programming so Java typically isn't used in my projects. Anyone have Ideas or personal favorites to use Java for?,"[{'Subreddit': 'Java', 'Reddit_Title': 'Favorite Frameworks / Use Cases For Java (Not Web Dev)?', 'CommentAuthor': 'Lopatron', 'Comment': ""Java is the language of big data. And if you're doing machine learning on distributed data, chances are you are using either Java or a framework written in Java (Spark, Flink, ElasticSearch, etc ..) and their main APIs and documentation are also primarily for Java/Scala programs. I think any big ML shop, especially ones that do real time learning, will have a healthy amount of Java in addition to their Python, which is ubiquitous of course.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Favorite Frameworks / Use Cases For Java (Not Web Dev)?', 'CommentAuthor': 'dasbodmeister', 'Comment': 'ANTLR, making toy languages.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Favorite Frameworks / Use Cases For Java (Not Web Dev)?', 'CommentAuthor': 'ebykka', 'Comment': ""Sometimes(or could be even often) we write code without thinking about how hardware works. But if to know how hardware works then it is possible to introduce some great solutions.\n\nIn this context, I would like to draw your attention to the two projects\n\nLMAX and Aeron. Both projects were developed by Martin Thompson\n\nLMAX - The system is built on the JVM platform and centers on a Business Logic Processor that can handle 6 million orders per second on a single thread.( [https://martinfowler.com/articles/lmax.html](https://martinfowler.com/articles/lmax.html) )\n\nAeron - Efficient reliable UDP unicast, UDP multicast, and IPC message transport. (today used by Akka)\n\nOn youtube, you can find some of Martin's videos where he shows why knowing hardware is useful for developers [https://www.youtube.com/watch?v=Pz-4co8IaI8](https://www.youtube.com/watch?v=Pz-4co8IaI8)\n\nOr how Aeron is implemented [https://www.youtube.com/watch?v=tM4YskS94b0](https://www.youtube.com/watch?v=tM4YskS94b0)""}, {'Subreddit': 'Java', 'Reddit_Title': 'Favorite Frameworks / Use Cases For Java (Not Web Dev)?', 'CommentAuthor': 'vinj4', 'Comment': 'Library development in general. Mandatory OOP + packages hierarchy + strong static typing + great build tools + javadoc make it easy to organize code and write good APIs'}, {'Subreddit': 'Java', 'Reddit_Title': 'Favorite Frameworks / Use Cases For Java (Not Web Dev)?', 'CommentAuthor': 'stefanos-ak', 'Comment': 'https://www.baeldung.com/java-ai'}, {'Subreddit': 'Java', 'Reddit_Title': 'Favorite Frameworks / Use Cases For Java (Not Web Dev)?', 'CommentAuthor': 'abvgdee', 'Comment': 'You may want to look at Optaplaner on Quarkus https://quarkus.io/guides/optaplanner'}, {'Subreddit': 'Java', 'Reddit_Title': 'Favorite Frameworks / Use Cases For Java (Not Web Dev)?', 'CommentAuthor': 'alienmonc', 'Comment': 'Quarkus is my favorite , native image , og standards , panache , live reload.. quarkus provide evrything i need fast development and fast application'}, {'Subreddit': 'Java', 'Reddit_Title': 'Favorite Frameworks / Use Cases For Java (Not Web Dev)?', 'CommentAuthor': 'roiroi1010', 'Comment': 'I love Spring Batch for creating batch jobs. That‚Äôs an awesome framework.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Favorite Frameworks / Use Cases For Java (Not Web Dev)?', 'CommentAuthor': 'Holothuroid', 'Comment': 'Android programming'}, {'Subreddit': 'Java', 'Reddit_Title': 'Favorite Frameworks / Use Cases For Java (Not Web Dev)?', 'CommentAuthor': 'None', 'Comment': ""Use cases for Java:\n- Big data engineering / Analytics - Scala does it better.\n- GUI - C++ does it better.\n- Desktop apps - C# / JS does it better.\n- ETL / DE stuff - Scala does it better .\n- web-Cloud based Apps - JS does it better.\n- general automation - python's world.\n- infrastructure code - Go/Rust/C++ do it better.\n\nBest use case for Java is if you plan on quitting programming. It can help you with that.\n\nSource: Scala dev.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Favorite Frameworks / Use Cases For Java (Not Web Dev)?', 'CommentAuthor': 'maxip89', 'Comment': ""If you are lazy, then use Spring boot with Lombok and mapstruct. Don't use hibernate it will kill your effiziency in bugfixing.""}]"
Java,FIPS 140-2 Certification for an open source project,https://www.reddit.com/r/java/comments/xcl89x/fips_1402_certification_for_an_open_source_project/,13,13,Hakky54,1663009486.0,"I am a maintainer/owner of an [opensource library](https://github.com/Hakky54/sslcontext-kickstart) related to security and today someone on GitHub asked me whether it would be possible to make it FIPS 140-2 compliant. I was not sure how to react, sure I would love to put some effort to make it compliant by getting it tested and having a certification for it so U.S. and Canadian developers can use it easier for their projects, however I discovered that it can cost [$10.000](https://www.safelogic.com/faq) which is in my opinion a bit too much for an opensource library maintained by myself for free and anyone can use it for free. I don't earn anything from it, I just love writing software and try to make my life easier with creating some libraries and reusing it and sharing it with the community so they can also benefit from it. I would be happy if U.S and Canadian developers could more easily use my library, but is there an alternative? Can't they just use it as is or is there a different path for small opensource projects?

What do you think of the situation? Should I get the certification, is it worth it? Are there alternatives besides saying no. Does anyone have experience with something similar?","[{'Subreddit': 'Java', 'Reddit_Title': 'FIPS 140-2 Certification for an open source project', 'CommentAuthor': 'bowbahdoe', 'Comment': ""You license the library under the apache license - if they want it certified they can get it certified. You don't need to be involved in that""}, {'Subreddit': 'Java', 'Reddit_Title': 'FIPS 140-2 Certification for an open source project', 'CommentAuthor': 'Worth_Trust_3825', 'Comment': ""> Can't they just use it as is\n\nNo, not really. The government, or contractual projects for that matter, really care about certifications. Mind you, the request might also be an extortion scheme.""}, {'Subreddit': 'Java', 'Reddit_Title': 'FIPS 140-2 Certification for an open source project', 'CommentAuthor': 'verydumbdev', 'Comment': ""I find it odd that they would even ask you. It's free software! If they want to get it certified they can do so on their own dime and time.""}, {'Subreddit': 'Java', 'Reddit_Title': 'FIPS 140-2 Certification for an open source project', 'CommentAuthor': 'LionNo2607', 'Comment': ""> however I discovered that it can cost [$10.000](https://www.safelogic.com/faq) which is in my opinion a bit too much for an opensource library\n\n> What do you think of the situation? Should I get the certification, is it worth it?\n\nI can't believe you are considering it. Of course don't spend $10k for someone else that you'll earn nothing from. Have them spend it if they need it. Why would you have to be the one to do it, just because you already gave them all the code for free?""}, {'Subreddit': 'Java', 'Reddit_Title': 'FIPS 140-2 Certification for an open source project', 'CommentAuthor': 'noobgolang', 'Comment': 'tell them to send u 30k donation.  \n\n\n10k for that, 20k for yourself, business deal done.'}, {'Subreddit': 'Java', 'Reddit_Title': 'FIPS 140-2 Certification for an open source project', 'CommentAuthor': 'jiSYpqt8', 'Comment': ""Others have already given you some good information. However, 2 more points:\n\n* FIPS 140-2 is EOL, its replacement is FIPS 140-3 now (which is a bit stricter in some places)\n* FIPS 140 only covers cryptographic modules, i.e. software/hardware/firmware that actually implements cryptographic algorithms. Your project seems to be an SSL library, but if it doesn't actually implement the cryptographic algorithms (I didn't check), it would be difficult to get it validated under FIPS 140.""}, {'Subreddit': 'Java', 'Reddit_Title': 'FIPS 140-2 Certification for an open source project', 'CommentAuthor': 'purplepharaoh', 'Comment': 'FIPS certification is very expensive and takes a long time.  You would need to find an accredited lab to perform the evaluation and submit it for certification.'}, {'Subreddit': 'Java', 'Reddit_Title': 'FIPS 140-2 Certification for an open source project', 'CommentAuthor': 'ezaquarii_com', 'Comment': "">Should I get the certification, is it worth it?\n\nGiven that you clearly don't have a business model around it, it's probably a no.\n\n>Are there alternatives besides saying no.\n\nYou can investigate if they are willing to pay for it and look for a business model. If business is something you're not willing to do, just say you have no such plans.""}, {'Subreddit': 'Java', 'Reddit_Title': 'FIPS 140-2 Certification for an open source project', 'CommentAuthor': 'Hakky54', 'Comment': 'Thank you all for your amazing comments, it helped me a-lot! I know now to correctly proceed with this situation.'}, {'Subreddit': 'Java', 'Reddit_Title': 'FIPS 140-2 Certification for an open source project', 'CommentAuthor': 'DevelopmentSelect646', 'Comment': ""Late response, but you can be FIPS compliant, but not FIPS certified - compliant means you are ready to go to the lab (with hardware) to pass the test, but aren't willing to be certified, mostly due to costs.  If someone wants to use your software in a piece of hardware, then it is up to them to pass certification on their own dime.""}, {'Subreddit': 'Java', 'Reddit_Title': 'FIPS 140-2 Certification for an open source project', 'CommentAuthor': 'VincentxH', 'Comment': ""I don't know if there are any other OS examples, but I expect there to be a sponsorship structure to realize this.""}]"
Java,WebSecurityConfigurerAdapter is going away and traditional programming,https://www.reddit.com/r/java/comments/x6i45n/websecurityconfigureradapter_is_going_away_and/,0,11,RockingGoodNight,1662389608.0,"I was working in one of my personal side projects and noticed my security class configurer showed a deprecation warning.

It appears the computer science types have taken over Pivotal and they are moving fast towards, impossible to debug, async style programming:

https://spring.io/blog/2022/02/21/spring-security-without-the-websecurityconfigureradapter","[{'Subreddit': 'Java', 'Reddit_Title': 'WebSecurityConfigurerAdapter is going away and traditional programming', 'CommentAuthor': 'maethor', 'Comment': 'I\'m not seeing how it\'s that much different. Instead of a class that overides WebSecurityConfigurerAdapter you have a SecurityFilterChain bean.\n\n\nLambdas are not ""async style code"".'}, {'Subreddit': 'Java', 'Reddit_Title': 'WebSecurityConfigurerAdapter is going away and traditional programming', 'CommentAuthor': 'loGii', 'Comment': 'How is a bean declaration async style programming?'}, {'Subreddit': 'Java', 'Reddit_Title': 'WebSecurityConfigurerAdapter is going away and traditional programming', 'CommentAuthor': 'vbezhenar', 'Comment': ""One issue that I encountered is there's no direct replacement for IP filter.\n\nhttps://stackoverflow.com/questions/72366267/matching-ip-address-with-authorizehttprequests\n\nThankfully one developer was kind enough to provide code snippet, but I still think that they should implement all important old features first before deprecating current API. IP filtering is important enough to warrant first-class API.""}, {'Subreddit': 'Java', 'Reddit_Title': 'WebSecurityConfigurerAdapter is going away and traditional programming', 'CommentAuthor': 'Worth_Trust_3825', 'Comment': 'You can still put a breakpoint there.'}, {'Subreddit': 'Java', 'Reddit_Title': 'WebSecurityConfigurerAdapter is going away and traditional programming', 'CommentAuthor': 'SpringShepHerd', 'Comment': ""Ughhh... I mean thankfully most of our apps have moved to using the SecurityFilter but I completely understand the anxiety about what's been happening to the Java and Spring ecosystem. Think that might be a little unrelated though and you might have jumped the gun a bit. I still check all PRs in projects and as a principal engineer I make sure things like WebFlux don't make it in to our codebases. (Nor will they ever as long as I live).""}, {'Subreddit': 'Java', 'Reddit_Title': 'WebSecurityConfigurerAdapter is going away and traditional programming', 'CommentAuthor': 'Ruin-Capable', 'Comment': ""Is there a significant difference between declaring a SecurityFilterChain and extending WebSecurityConfigurerAdapter?  I recently upgraded a project to a newer version of Spring Boot and it didn't seem like a big deal to me.  What is the use case where you're encountering issues?""}, {'Subreddit': 'Java', 'Reddit_Title': 'WebSecurityConfigurerAdapter is going away and traditional programming', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Java', 'Reddit_Title': 'WebSecurityConfigurerAdapter is going away and traditional programming', 'CommentAuthor': 'RockingGoodNight', 'Comment': 'In the article I was reading before the linked one, webflux was specifically highlighted which started making me feel like it was the direction they were heading in. I agree, lambdas are not implicitly async.'}, {'Subreddit': 'Java', 'Reddit_Title': 'WebSecurityConfigurerAdapter is going away and traditional programming', 'CommentAuthor': 'RockingGoodNight', 'Comment': ""That's interesting, I seem to recall working on a contract somewhere and that approach would become useful, thank you.""}, {'Subreddit': 'Java', 'Reddit_Title': 'WebSecurityConfigurerAdapter is going away and traditional programming', 'CommentAuthor': 'RockingGoodNight', 'Comment': 'Agreed, I read through several related docs and started worrying where Pivotal might be headed. Seems like it was a false alarm looking back now.'}, {'Subreddit': 'Java', 'Reddit_Title': 'WebSecurityConfigurerAdapter is going away and traditional programming', 'CommentAuthor': 'RockingGoodNight', 'Comment': ""I think I was too hasty in the leaps I made to reach the original conclusion. It shouldn't be an issue after all.""}]"
Java,Thoughts on Micronaut vs. Quarkus?,https://www.reddit.com/r/java/comments/wtauxe/thoughts_on_micronaut_vs_quarkus/,76,82,Financial-Touch-5171,1661011996.0,"Hello! I recently discovered Micronaut and have been quite happy with it in one of my personal projects. I was very impressed at how easy it was to add JWT authentication to my back-end. All the guides I see to do the same with Spring look like a ton more code.

I've also heard a lot of things about Quarkus. What are your thoughts on both? Are they gaining more traction in industry? Unfortunately we use PHP at work, but maybe one day I'll convince them to switch. Thanks!","[{'Subreddit': 'Java', 'Reddit_Title': 'Thoughts on Micronaut vs. Quarkus?', 'CommentAuthor': 'ruffles-o', 'Comment': 'I am using Quarkus professionally and doing a lot of custom JWT stuff. I love it but I come from an EE background and work for Red Hat so it‚Äôs natural for me.\n\nIt has its own challenges though.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Thoughts on Micronaut vs. Quarkus?', 'CommentAuthor': 'csharp', 'Comment': 'At one point we were entirely a spring boot shop. We wrote a lot of micro services and didn‚Äôt think twice about 700mb containers running on 4gb memory and 3gb xmx settings.  I used to author a lot of grails plugins but would never use grails for any enterprise stuff given that spring boot existed.    However, this kept me close to the team building micronaut. \n\nWe did an evaluation of micronaut when it was released.  At the time we did not have exposure to quarkus.  But it wasn‚Äôt ready for enterprise adoption as we needed support for metrics and Kafka. Micronaut didn‚Äôt include this out of the gate. So I wrote a lot of the code to kick off micrometer integrations and wiring up Kafka and Kstreams. In doing so, we switched a lot of our runtimes to micronaut and reduced our containers to 250mb and 2gb ram with 1.5gb xmx.  This was probably even overkill. We saved a ton of money on cloud footprint for all new assets. \n\nElsewhere in the company people started using quarkus the following year and saw similar benefits. Either would offer several advantages over spring boot, but I highly recommend micronaut because I have more experience and history with it.  I think you would be happy with either but Micronaut examples, docs and code quality are quite amazing.  When making pull requests, for example, Graeme would often ask for more terse code because it was faster and /or had reduced memory footprint or potential GC issue.  But at the end of the day this provides a better framework for everyone. \n\nLet us know what you pick and how it goes!  ü•≥\n\nDisclaimer: Micronaut contributor'}, {'Subreddit': 'Java', 'Reddit_Title': 'Thoughts on Micronaut vs. Quarkus?', 'CommentAuthor': 'syberman01', 'Comment': 'I started with Micronaut 2 years back but then opted for Quarkus. \n\nMicronaut at that time, had some jdbc/r2dbc driver glitch if I recall. Quarkus did not have those at that time. \n\nMicronaut at that time, did not have big backers -- later I hear Oracle become one of the backers.  Quarkus had redhat as backing. \n\nI ultimately went with Quarkus. Quarks+Jib does most of the heavy lifting for me.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Thoughts on Micronaut vs. Quarkus?', 'CommentAuthor': 'forresthopkinsa', 'Comment': 'I looked pretty deeply into both options and decided on Micronaut. I like their docs better, they have better cloud-native support, and Quarkus does a lot more ""magic"", which means you need to use their custom toolchain from top to bottom. I\'ve been really happy with Micronaut.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Thoughts on Micronaut vs. Quarkus?', 'CommentAuthor': 'yaffeman', 'Comment': ""I can't speak for Micronaut; but we use Quarkus+GraalVM AOT compilation for our new projects and we're thrilled with it! We also heavily use Graal isolates.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Thoughts on Micronaut vs. Quarkus?', 'CommentAuthor': 'Enough-Ad-5528', 'Comment': 'Do folks use it for mostly function as a service code (AWS Lambda etc) or do you also use it for long running services/applications on traditional VMs or containers. I am wondering what the benefits over regular Spring boot are if I don‚Äôt care about fast startup and low start to peak time performance.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Thoughts on Micronaut vs. Quarkus?', 'CommentAuthor': 'patoessy', 'Comment': 'Quarkus combines Jakarta EE libraries while micronaunt is like spring where most things are opinionated like use of getmapping instead of simple @path and @get annotations.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Thoughts on Micronaut vs. Quarkus?', 'CommentAuthor': 'pointy_pirate', 'Comment': 'I prefer micronaut mostly because I found the dev cycle super easy and fast compared with quarkus'}, {'Subreddit': 'Java', 'Reddit_Title': 'Thoughts on Micronaut vs. Quarkus?', 'CommentAuthor': 'UtilFunction', 'Comment': ""Both are nice but I often use Quarkus because sometimes I'm bit lazy and use Hibernate with Panache :)\n\nJooby is also a nice framework.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Thoughts on Micronaut vs. Quarkus?', 'CommentAuthor': 'micr0ben', 'Comment': "">What are your thoughts on both? Are they gaining more traction in industry?\n\nIf you have a look at e.g. Google Trends, yes, they both are gaining more traction over the last years.\n\nI'd argue that quarkus is gaining even more traction than micronaut. Quarkus is the newer framework and despite that, it is trending higher on google and it has about double the amount of stars and contributors on github.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Thoughts on Micronaut vs. Quarkus?', 'CommentAuthor': 'avertex', 'Comment': 'https://avaje.io/inject/#why\n\nThis is third option that discusses why it exists in the light of Micronaut and Quarkus, worth a read.'}]"
Java,Is it weird for a job to start new projects in Java 8?,https://www.reddit.com/r/java/comments/wlg4vz/is_it_weird_for_a_job_to_start_new_projects_in/,111,175,RiceKrispyPooHead,1660185512.0,"My first job was at a large, non-tech company. We used Java 13, Spring Boot 2.6.5, and had a ticket to look into upgrading to Java 17 right when I left.

I'm at a new place which is a SaaS company with about 150 employees. All of the projects are in Java 8. The frameworks are kind of old too. Most of the Spring Boot projects are on 2.0.X. Today I was having trouble doing something in one repo, then I noticed it was on Spring Boot 1.0.X.

Is this more common than I thought? My sample size is only 2, so I don't really know. I thought it was usually places like banks that did things like this.","[{'Subreddit': 'Java', 'Reddit_Title': 'Is it weird for a job to start new projects in Java 8?', 'CommentAuthor': 'DahDitDit-DitDah', 'Comment': 'Java 8 remains relevant, for those that buy long term support, [through 2030](https://www.java.com/releases/matrix/)'}, {'Subreddit': 'Java', 'Reddit_Title': 'Is it weird for a job to start new projects in Java 8?', 'CommentAuthor': 'sfroberg38', 'Comment': 'Java 8 is still used in a lot of places but more and more projects and companies are moving to jdk11 and some moving to jdk17.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Is it weird for a job to start new projects in Java 8?', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Java', 'Reddit_Title': 'Is it weird for a job to start new projects in Java 8?', 'CommentAuthor': 'BobbleheadGuardian', 'Comment': ""Both of my jobs thus far have been using Java 8. My current company's code is a mess and a couple of repos still use 7.\n\nThey're in the process of updating to 11.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Is it weird for a job to start new projects in Java 8?', 'CommentAuthor': 'pron98', 'Comment': 'There can be very good reasons to leave *existing* projects on 8 (or any old version, for that matter) -- few people maintain them and know them, and so it\'s cheaper to just buy support -- but *starting* a new project on an old version is just bad decision-making. You increase risk and cost for very little gain. Usually the justification is along the lines of, ""it\'s easier to just have all our projects use the same JDK."" I\'m not saying there\'s absolutely no value in that, but that value is not worth the risk.\n\nSometimes it\'s just fear: ""we know Java 8 well, and we heard newer versions are this whole new thing."" I think most of that fear stems from stories about difficulties migrating existing codebases to 9+, especially at the beginning. People who have this fear should be told that those difficulties, while very real, were a result of old libraries written in a non-portable way (they hacked JDK internals, bypassing the spec and its backward compatibility) and are irrelevant for new projects. There\'s very little you *must* learn if all you know is Java 8 and you want to use, say, JDK 18.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Is it weird for a job to start new projects in Java 8?', 'CommentAuthor': 'alazyreader', 'Comment': 'It entirely depends on where a company invests its energy. Some small places see value in putting energy into the upgrade churn, but the downside is you have to test and validate that across all your projects way more often as releases happen. Other teams take LTS at its word and standardize on a specific major version for years and years. This grants a high level of stability and lets your developers concentrate on ""feature work"" (in theory), but makes the eventual EOL that much harder.\n\nIt\'s not necessarily a company-size thing.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Is it weird for a job to start new projects in Java 8?', 'CommentAuthor': '8igg7e5', 'Comment': ""If they have to share components, sure. If not, I'd very much like to hear their justification.\n\nIn several surveys now, the majority of respondents have projects in production in Java 11+ (for some surveys, in 2021, they had >10% with Java 15) - Yes a lot of those same respondents have some Java 8 projects too, but given the number using newer editions of Java, I doubt they're starting new Java 8 projects.\n\n&nbsp;\n\nThere _will_ be people with hard reasons for not moving. It happens. Sometimes you have hard dependencies.\n\nThere _will_ be even more for which the life-stage of the project prohibits the risk and cost (because the benefits won't get to be realised).\n\nThere is a far greater proportion that just haven't used the new library features, language features, tooling, GC, JIT and monitoring improvements in anger and are hand-waving away the benefits of the updated versions through a usually over-estimated belief in the difficulty of migration.\n\nMigrating was hard around the Java 11 release time-frame because the path was not yet well-trodden. That is much less painful than it was.\n\n&nbsp;\n\nIf a job professed an intention to remain on Java 8 it would be likely be a hard no for me (but then I'm in a position to have options - I get that some people are just trying to get on the experience ladder).""}, {'Subreddit': 'Java', 'Reddit_Title': 'Is it weird for a job to start new projects in Java 8?', 'CommentAuthor': 'ConstructedNewt', 'Comment': ""what's holding the upgrade back?""}, {'Subreddit': 'Java', 'Reddit_Title': 'Is it weird for a job to start new projects in Java 8?', 'CommentAuthor': 'DrFriendless', 'Comment': 'I managed to get my software onto Java 8 in June. To fix or plan for all the migration problems, as well as to do the daily work, was a 2 year project. My next big project will be to get to Java 11, but that requires major Spring and Hibernate upgrades. Maybe that will only take a year.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Is it weird for a job to start new projects in Java 8?', 'CommentAuthor': '_predator_', 'Comment': 'I‚Äòm a security person, and from that angle what bothers me the most is not the version of Java itself, but that of the frameworks and libraries.\n\nSure you can buy enterprise support for Java 8. For frameworks and libraries it‚Äòs a different story. You don‚Äòt want to be in a situation where there‚Äòs a critical vuln in your framework, but you can‚Äòt ‚Äûjust update‚Äú to a fixed version, because the framework has long moved to a higher Java version for its baseline. \n\nOr even with Spring Boot: If you‚Äòre on 1.5.x right now, good look with upgrading to 2.7.x on a friday evening when shit hits the fan.\n\nAnd while you can always fork and backport fixes yourself, in practice barely any company does that.\n\nTechnical debit is a silent killer.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Is it weird for a job to start new projects in Java 8?', 'CommentAuthor': 'buzzsawddog', 'Comment': ""I have only just this year moved some of our applications from 8 to 17 and I can guarantee if I had not moved it no one would have.\n\nLast job 8 was 6 months out and they were in the process of upgrading some things from 5 to 7.  It's not always as straight forward as moving a version.""}]"
Java,Framework upgrade,https://www.reddit.com/r/java/comments/17g6tpx/framework_upgrade/,20,37,curious_scourge,1698246155.0,"I joined a greenfields Java/C# company 10 years ago as the Java guy, and based our ESB architecture on Maven/Fuse/Karaf/Camel/AMQ inside dockers, behind a load balancer, snapshotted nightly in VMWare (On-prem data centre beats cloud based, by millions of dollars, for us, so not interested in AWS/GCP/Azure/etc.).  Kubernetes never really worked out, because of obscure VM issues.

It works great, meets SLA, and I am very if-it-ain't-broke-don't-fix-it, especially since they've never hired another Java guy, to make trouble for me. Only issue these days is Java heap space runs out, like once a year, and the load balancer fails over, so it's not a major problem. We're up to 27 services, not quite micro either. Big requests will take a second or two.

 So I'm a bit curious, after seeing some post about the latest Java micro service frameworks, what people are using (open source) in my situation. I seem to be in a pretty small minority of Java people who use my particular stack. Maybe I should start thinking about moving on from Java 8, one of these years.","[{'Subreddit': 'Java', 'Reddit_Title': 'Framework upgrade', 'CommentAuthor': 'AutoModerator', 'Comment': ""On July 1st, a [change to Reddit's API pricing](https://www.reddit.com/r/reddit/comments/12qwagm/an_update_regarding_reddits_api/) will come into effect. [Several developers](https://www.reddit.com/r/redditisfun/comments/144gmfq/rif_will_shut_down_on_june_30_2023_in_response_to/) of commercial third-party apps have announced that this change will compel them to shut down their apps. At least [one accessibility-focused non-commercial third party app](https://www.reddit.com/r/DystopiaForReddit/comments/145e9sk/update_dystopia_will_continue_operating_for_free/) will continue to be available free of charge.\n\nIf you want to express your strong disagreement with the API pricing change or with Reddit's response to the backlash, you may want to consider the following options:\n\n1. Limiting your involvement with Reddit, or\n2. Temporarily refraining from using Reddit\n3. Cancelling your subscription of Reddit Premium\n\nas a way to voice your protest.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*""}, {'Subreddit': 'Java', 'Reddit_Title': 'Framework upgrade', 'CommentAuthor': 'Deep_Age4643', 'Comment': ""Seems like you got a solid stack. As stability seems core to you and your company, you can always do a step-to-step upgrade. Keep on track with the LTS versions (11,17,21). A framework that suits both Camel and low memory requirement would be Quarkus. So that maybe something to take a look at.\n\nI am actually in a similar situation. Two years ago, I started working for a company with the following ESB backend stack:  \n\n\n1. Java 8\n2. AMQ\n3. Karaf (4.2.x)\n4. Camel (2.23)\n5. Maven\n\nCurrently, I finished the migration to the following stack:\n\n1. Java 11  \n2. AMQ Classic / AMQ Artemis  \n3. Spring (2.7.x)  \n4. Camel (3.20.x)  \n5. Maven/Gradle  \n\n\nIn case you're interested, I open sourced the work. It basically has two parts:  \n\n\n1. Runtime (AMQ / Camel): [https://github.com/assimbly/runtime](https://github.com/assimbly/runtime)\n2. Gateway (Spring + Runtime): [https://github.com/assimbly/gateway](https://github.com/assimbly/gateway)\n\nThese are also available as Docker images on DockerHub. On the wiki page of the Gateway repo, there is more info.  \nI separated the Runtime from the Gateway, so that it will become easier to change the web framework in the future. Currently working on the following stack:\n\n1. Java 21  \n2. AMQ Classic (6.x) / AMQ Artemis (2.32)  \n3. Spring (3.2.x) / Quarkus  \n4. Camel (4.2.x)  \n5. Maven/Gradle\n\nThis is still a bit experimental. For generating (experimenting) web applications I use JHipster and for upgrading I use OpenRewrite.  Hopefully this gave you a bit insight in a similar situation.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Framework upgrade', 'CommentAuthor': 'mmongecr', 'Comment': 'I would recommend leaving behind Fuse and Karaf; there is no need if you are using Docker. Better use Camel with Spring Boot or Quarkus as microservices. Avoid saving PDF files in the Queue; use a NAS storage.\n\nI did use AMQ for files a time ago and had to change the config files and the GC config to avoid problems, and then the NAS solved all. (AMQ was receiving thousands of files by the minute.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Framework upgrade', 'CommentAuthor': 'troru', 'Comment': 'Given that your app blows heap up once a year, sounds like you have a ""sorta-broke-might-wanna-fix-it"" opportunity?  IMHO, some kind of framework shift won\'t make sense for you unless: some part of your existing stack is going away (deprecation, too pricey to license,  regression, etc) or if your codebase is becoming difficult to reason (i.e. tracking down your heap leak).   For just language ergonomics, I\'d encourage rolling along with LTS releases of the JDK.  Yes I know most think JDK 8 will exist past the heat-death of the universe, but there are some niceties as far as language features go in 17 and 21 :)'}, {'Subreddit': 'Java', 'Reddit_Title': 'Framework upgrade', 'CommentAuthor': 'marcvsHR', 'Comment': 'You should definitely consider moving from java8 to java17, that alone might help.\n\nAws dude held a pretty good talk at devoxx about it.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Framework upgrade', 'CommentAuthor': 'dmigowski', 'Comment': ""Microservices provide a management hell of it's own. If you have a bunch of teams all providing services you have to orchestrate, this might be a feasable approach, but in your situation be happy you have you have you stable and much less ressource consuming monolith that does it all. \n\nI am in nearly the same boat, my Java app is far above one million lines now and a big fat monster that does a lot but also runs on cheap VMs serving hundreds.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Framework upgrade', 'CommentAuthor': 'None', 'Comment': ""I've worked with your stack years ago. Recommend avoiding boutique, clique'ish teks and move to the standard, Spring Boot. Go to [https://start.spring.io/](https://start.spring.io/) and checkout the power you can get started with. Recommend Maven over Gradle and Eclipse over IntelliJ. Congrats on keeping the on prem flame burning.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Framework upgrade', 'CommentAuthor': 'wildjokers', 'Comment': '> On-prem data centre beats cloud based, by millions of dollars\n\nThat‚Äôs true for most companies. Not sure why hosting on a cloud service is so popular.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Framework upgrade', 'CommentAuthor': 'Key_Bad8144', 'Comment': 'I would leave it alone if it‚Äôs not causing problems'}, {'Subreddit': 'Java', 'Reddit_Title': 'Framework upgrade', 'CommentAuthor': 'Oclay1st', 'Comment': 'You should seriously consider Java 17. Also, do a lot of monitoring and try to optimize everything before introducing any new technology at that level.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Framework upgrade', 'CommentAuthor': 'Rotilho', 'Comment': ""I haven't heard about ESB for at least 12 years. Your tech stack sounds obsolete, 10+ years. Being the only 'Java' developer for so long has put you in a very delicate position where you lack feedback and fresh ideas.""}]"
Java,how much java is used server side on AWS/GCP cloud... versus Android?,https://www.reddit.com/r/java/comments/x89sp1/how_much_java_is_used_server_side_on_awsgcp_cloud/,0,68,sandys1,1662568631.0,"There are all these developer surveys about how java is still the most popular language.

Here's something I'm wondering (and I need to justify this to my boss) - is Java primarily used on Android? And most server side code is python/nodejs/go/whatever?

Does anyone have any survey results or any metrics around how much java workloads run on AWS/GCP vs other languages.

AWS/GCP is a good proxy for the amount of server side workloads around the world. Yes, I realise that there are large metal-hosted Java codebases, but given the popularity of the cloud...it should also mean that Java is well represented there

EDIT: at no point, am I comparing total lines of server side Java in the world today. Java will always win there. And yes several large cos (Google, Twitter, etc) use Java.
But I'm asking from POV of developer surveys - Java is super popular. Where is that popularity coming from ? android or server side? Cos the data that was told to me was that - very less of AWS workloads are on Java.
And I would like to disprove this. Any data would be much helpful.
If u feel insulted by the question...well, I apologise","[{'Subreddit': 'Java', 'Reddit_Title': 'how much java is used server side on AWS/GCP cloud... versus Android?', 'CommentAuthor': 'Willem1976', 'Comment': 'I work for a large consultancy firm in Europe (> 200k employees) and we do backend exclusively in Java and .NET. Except for some niche applications, no other platform qualifies for serious backend development imo.'}, {'Subreddit': 'Java', 'Reddit_Title': 'how much java is used server side on AWS/GCP cloud... versus Android?', 'CommentAuthor': 'None', 'Comment': ""I don't have hard metrics, but dude... Java and C# are currently the go to languages and platforms for big enterprises server side. Period. It's one of the reasons Java and c# always are near or at the top of the list of languages with available jobs. It is not only used by android, not even close.\n\nLike seriously, please don't be offended here but this question is so far from reality as to be laughable. While I certainly cannot predict the future, Java is 100% used very heavily in the enterprise space.\n\nMyself I've spent my career working with Java and for the past 5 or so years for companies using Java and modern cloud platforms. It is huge.""}, {'Subreddit': 'Java', 'Reddit_Title': 'how much java is used server side on AWS/GCP cloud... versus Android?', 'CommentAuthor': 'elatllat', 'Comment': 'Twitter is using java server side.'}, {'Subreddit': 'Java', 'Reddit_Title': 'how much java is used server side on AWS/GCP cloud... versus Android?', 'CommentAuthor': 'alehel', 'Comment': ""This is purely based on what I've seen and heard at work as a consultant in Oslo, Norway. Almost every backend of any meaningful size/use/importance that I've come across uses Java/kotlin or .net. I've seen a couple of startups use node and only once have I seen python get used for something that wasn't scripts. That python code also got rewritten in Java because it was garbage (not Pythons fault, it was just really badly written and not really worth salvaging).""}, {'Subreddit': 'Java', 'Reddit_Title': 'how much java is used server side on AWS/GCP cloud... versus Android?', 'CommentAuthor': 'DrunkensteinsMonster', 'Comment': 'Java is used primarily server side. AWS is literally written in Java primarily.'}, {'Subreddit': 'Java', 'Reddit_Title': 'how much java is used server side on AWS/GCP cloud... versus Android?', 'CommentAuthor': 'sloth_process', 'Comment': 'I think a lot of applications on AWS/Azure/GCP run Java. I have seen more go micro services replacing Java applications in the last few years. So while Java is still run on these cloud platforms it may be becoming less frequently selected for new development.'}, {'Subreddit': 'Java', 'Reddit_Title': 'how much java is used server side on AWS/GCP cloud... versus Android?', 'CommentAuthor': 'Trailsey', 'Comment': 'I would guess most newer android apps are in kotlin these days.'}, {'Subreddit': 'Java', 'Reddit_Title': 'how much java is used server side on AWS/GCP cloud... versus Android?', 'CommentAuthor': 'zminyty', 'Comment': 'At my prev job we had like 2000 of microservices, most in java, private dc.'}, {'Subreddit': 'Java', 'Reddit_Title': 'how much java is used server side on AWS/GCP cloud... versus Android?', 'CommentAuthor': 'stefanos-ak', 'Comment': 'surveys mean shit... it\'s stupid to make any business or technical decision based on them... \n\nmy opinion anyway ü§∑\u200d‚ôÇÔ∏è \n\nAlso, these days it\'s more popular to write android apps in Kotlin instead of Java.\n\nUnless you meant all JVM languages when saying ""Java"", in which case the whole thing is even more pointless üòÅ'}, {'Subreddit': 'Java', 'Reddit_Title': 'how much java is used server side on AWS/GCP cloud... versus Android?', 'CommentAuthor': 'Spiritual-Day-thing', 'Comment': 'What is insulting is your attitude.'}, {'Subreddit': 'Java', 'Reddit_Title': 'how much java is used server side on AWS/GCP cloud... versus Android?', 'CommentAuthor': 'bendem', 'Comment': ""Everything enterprise is java. It's everywhere, POS, HR, sales, monitoring, log management, identity...\nCustom devs are also mostly Java (or C# for microsoft shops). Sure a small part does webdev with more recent things. But established enterprise run on old, stable code, migrating to something shinier is stupid from a profit perspective (Java is more stable, code already exist and has years and years of fixes)""}]"
Java,Using GCP event driven Java microservices,https://www.reddit.com/r/java/comments/qhp46d/using_gcp_event_driven_java_microservices/,62,13,markduce,1635433655.0,"I wrote a piece about how we used PubSub, Kubernetes, Firestore and GCS to do something pretty neat recently: [https://tech.loveholidays.com/how-loveholidays-used-cloud-native-event-driven-system-to-cut-hotel-content-publishing-time-from-5-690f690d1b5](https://tech.loveholidays.com/how-loveholidays-used-cloud-native-event-driven-system-to-cut-hotel-content-publishing-time-from-5-690f690d1b5)  


It's my first blog post, so would love any feedback about what you find interesting or what I could improve!","[{'Subreddit': 'Java', 'Reddit_Title': 'Using GCP event driven Java microservices', 'CommentAuthor': 'r_jet', 'Comment': ""I think in such articles it's more interesting to see any significant alternatives you considered, and _why_ you rejected them, which constraints you had, etc.; not just the previous and the end state of the system (e.g., why Cloud Functions were or were not a good solution for you).\n\nSpeaking of constraints, I think it‚Äôd be curious to learn about the actual scale this particular part of your system faces, because it‚Äôs one of the important inputs in the design process (if your lawyers allow). With both internal writers and external APIs as major sources, readers could imagine a very wide range from 0.001 QPS to, depending on how dynamic the external content is, hundreds of QPS.\n\nAlso, it‚Äôs a bit unclear why incremental updates weren‚Äôt supported in the previous pipeline, and if you had to make any non-trivial changes to enable them (is it a SQL > objects in Google Cloud Storage transition?).""}, {'Subreddit': 'Java', 'Reddit_Title': 'Using GCP event driven Java microservices', 'CommentAuthor': 'insulind', 'Comment': 'Great read!'}, {'Subreddit': 'Java', 'Reddit_Title': 'Using GCP event driven Java microservices', 'CommentAuthor': 'Hioneqpls', 'Comment': 'Sounds really cool'}, {'Subreddit': 'Java', 'Reddit_Title': 'Using GCP event driven Java microservices', 'CommentAuthor': 'None', 'Comment': 'Did you need kubernetes and google cloud or just went with the trends?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Using GCP event driven Java microservices', 'CommentAuthor': 'None', 'Comment': 'Saving it, maybe I will be a pro in java in future n use stuff like this :('}, {'Subreddit': 'Java', 'Reddit_Title': 'Using GCP event driven Java microservices', 'CommentAuthor': 'markduce', 'Comment': ""Thank you for the feedback, much appreciated and I'll definitely think about it when I write something next.\n\nCloud functions definitely feel like the next evolution for us. We are using them for some simple things but haven't yet got as far as doing it for something a little bit more complex. In terms of constraints the main constraint was that it had to be GCP based, not much else really.\n\nScale of this is not massive compared to some of our other apps which are handling 1000s of QPS. This system is dealing with about 10k changes a week. But it's established patterns that we are adopting elsewhere.\n\nIncremental updates I'm previous pipeline were mostly hampered by lack of dev env, the long time it took for the pipeline to run and it had to start from scratch each time""}, {'Subreddit': 'Java', 'Reddit_Title': 'Using GCP event driven Java microservices', 'CommentAuthor': 'markduce', 'Comment': 'Cheers!'}, {'Subreddit': 'Java', 'Reddit_Title': 'Using GCP event driven Java microservices', 'CommentAuthor': 'markduce', 'Comment': 'We use a lot of GCP and have migrated everything from on prem VMs over the last few years to kubernetes so they were natural things for us to use. \n\nI find them pretty awesome!'}, {'Subreddit': 'Java', 'Reddit_Title': 'Using GCP event driven Java microservices', 'CommentAuthor': 'ihsw', 'Comment': 'Do you host databases (eg: Postgres) on Kubernetes clusters or are you sticking to managed services (eg: CloudSQL)?'}, {'Subreddit': 'Java', 'Reddit_Title': 'Using GCP event driven Java microservices', 'CommentAuthor': 'markduce', 'Comment': 'At the moment our database (mariadb) is running on a Google compute engine vm but we plan to migrate to managed cloud sql'}, {'Subreddit': 'Java', 'Reddit_Title': 'Using GCP event driven Java microservices', 'CommentAuthor': 'nutrecht', 'Comment': ""Kubernetes is most suitable for applications where you don't really care what machine they run on and databases don't really fit that mold.""}]"
Java,Ask Java: Hi I want to know how you guys are deploying your Java applications (local/production).,https://www.reddit.com/r/java/comments/74iqk2/ask_java_hi_i_want_to_know_how_you_guys_are/,33,52,pighive,1507235460.0,"We were using CloudFoundry as our orchestration platform for our SpringBoot apps until now. There is a change in leadership and we were told to move towards AWS, it's a new space for all our team. I came across ECS on AWS, but want to know how you all are using AWS,GCP or Azure. What will be the efficient approach? Containerizing our boot apps and deploying on ECS or spinup our own Kubernetes/Mesos or other orchestration platforms and host on them. I am just trying to learn best practices for deploying Java apps on cloud.
EDIT 1: And also if you can share your CI/CD pipeline, that would be great. ","[{'Subreddit': 'Java', 'Reddit_Title': 'Ask Java: Hi I want to know how you guys are deploying your Java applications (local/production).', 'CommentAuthor': 'InfoSec812', 'Comment': ""Full disclosure: I work for Red Hat. I would suggest having a look at OpenShift on AWS or GCE. The reason being is that you can integrate a complete DevOps CI/CD environment and take advantage of it's features which extend Kubernetes (e. g. Source-2-Image). There are publicly available Ansible playbooks/inventories to help install/provision OpenShift. Also, you get a really nice and simple set of tools for management.\n\nhttps://aws.amazon.com/about-aws/whats-new/2017/09/red-hat-openshift-container-platform-on-the-aws-cloud-quick-start-reference-deployment/""}, {'Subreddit': 'Java', 'Reddit_Title': 'Ask Java: Hi I want to know how you guys are deploying your Java applications (local/production).', 'CommentAuthor': 'dpash', 'Comment': ""I've become a fan of deploying apps by docker. Mostly because they're a self contained block that knows how to execute itself, and the requirements are easily explained, and many tools know how to work with them. Plus they can be versioned well, and assuming you keep tags unique, you know that what you're running is what you tested etc.\n\nI've used Google's kubernetes service and AWS's ECS and I much prefer Google's. Mostly because load balancing and service discovery are integrated in the service (and block devices follow containers around)""}, {'Subreddit': 'Java', 'Reddit_Title': 'Ask Java: Hi I want to know how you guys are deploying your Java applications (local/production).', 'CommentAuthor': 'butcanyoufuckit', 'Comment': 'Exploding zip file. Ftp zip. Unzip. Run .sh.   Usually done by Jenkins. But you can also grab a copy and do it manually'}, {'Subreddit': 'Java', 'Reddit_Title': 'Ask Java: Hi I want to know how you guys are deploying your Java applications (local/production).', 'CommentAuthor': 'shuisonfire', 'Comment': ""I run a vm with jenkins on it which among other things perform releases and builds rpms. The same vm runs a yum server that these rpms are pushed to. \nAll production VMs are configured to talk to that yum server so you can do yum upgrade from them. For auto-scale and such, you just need to include yum install (your app) in the startup script.\nI've been deploying java servers like this more or less for 10 years, across bare metal, public cloud and hybrid cloud. Never felt the need to change it up much.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Ask Java: Hi I want to know how you guys are deploying your Java applications (local/production).', 'CommentAuthor': 'vokiel', 'Comment': ""I just ship wars & jars, whoever is packaging does whatever he needs to be done.\n\nOn AWS you can just drop a war on ELB and that's it. If you're not working on hosted systems but a SAAS solution, you don't really need more than this kind of simplicity imho.""}, {'Subreddit': 'Java', 'Reddit_Title': 'Ask Java: Hi I want to know how you guys are deploying your Java applications (local/production).', 'CommentAuthor': 'ericzhill', 'Comment': 'I just finished standing up a small 3 node cluster. Ubuntu, Consul, and Nomad serve as the foundation, and services deployed with Nomad are automatically registered with Consul where Traefik picks them up and proxies requests to the services via DNS name. No single point of failure and all free software. I love OSS.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Ask Java: Hi I want to know how you guys are deploying your Java applications (local/production).', 'CommentAuthor': 'unreal_robbo', 'Comment': ""Currently working on a big project where we're using GCP's Container Engine, which operates using kubernetes. The code is structured as maven modules and it gets built into a number of docker containers. GCP cloud tools are actually quite nice and the project simply requires a couple of maven commands to build and deploy. Its a really nice setup. Essentially when we merge branches back into master our CI server runs the maven commands and everything gets tested and deployed.\n\nI've previously built projects using GCP AppEngine which I really don't like. AppEngine is comparable to AWS Elastic Beanstalk, you upload your packaged code directly to the service. AppEngine handles the lifecycle of the running application, auto-scales and does some other neat stuff. But you lose full control of ur App and have a number of restrictions on stuff like max response time (60 seconds).     ""}, {'Subreddit': 'Java', 'Reddit_Title': 'Ask Java: Hi I want to know how you guys are deploying your Java applications (local/production).', 'CommentAuthor': 'cptmauli', 'Comment': 'We package everything as a debian (with jdeb) or RPM (with https://ctron.github.io/rpm-builder/) file.\n\nIts easy, reproducible and also painless to remove again.'}, {'Subreddit': 'Java', 'Reddit_Title': 'Ask Java: Hi I want to know how you guys are deploying your Java applications (local/production).', 'CommentAuthor': 'DeadSpawner', 'Comment': 'EAR -> Docker -> AWS'}, {'Subreddit': 'Java', 'Reddit_Title': 'Ask Java: Hi I want to know how you guys are deploying your Java applications (local/production).', 'CommentAuthor': 'uniqualykerd', 'Comment': ""My employer hosts all their application servers in AWS. My development environment lives there, too, in the same subnet. \n  \nI spin up a new server, run a configuration script for application user settings, load it up with required libraries, have Gradle generate application runnables specific to the target server, copy the files manually, set up any cron jobs, and boom, I'm in business. \n  \nSpinning up a new server takes about an hour with all the prerequisites. We do that only for a separate suite of applications, or to scale up our ability for simultaneous processing.\n  \nRegenerating the application distributables takes seconds. Yay for Gradle! \n  \nWe use near-continuous integration. We don't use AWS' code pipeline, because I haven't gotten it to work yet.\n  \nI deliberately avoid overwriting the currently-known good version by loading the new application version into a versioned folder, so I can run a full integration test independently of the production application, inside the production server (rather than a copy). \n  \nAfter the new version is proven to work correctly, the old version is removed from the server. A copy is retained in our version control system. \n  \n""}, {'Subreddit': 'Java', 'Reddit_Title': 'Ask Java: Hi I want to know how you guys are deploying your Java applications (local/production).', 'CommentAuthor': 'Gilgamesjh', 'Comment': ""What's efficient depends on your size, but for larger sized deployments on AWS I would choose something like Terraform for scripting the environment, and either build my own Kubernetes setup, or use something like Tectonic.\n\nTerraform gives you platform independence, and is open source, and I would choose that instead of CloudFormation Templates. Keeps your environment nice and scriptable and reproducable.\n\nIf you don't deploy micro services, or you have a smaller amount of apps, just use Terraform with EC2 managed Tomcat instances.\n\n\n""}]"
Javascript,Squeezing Last Bit Of JavaScript Performance For My Automation Game,https://ruoyusun.com/2024/01/23/cividle-optimization,63,43,fagnerbrack,1707577582.0,,"[{'Subreddit': 'Javascript', 'Reddit_Title': 'Squeezing Last Bit Of JavaScript Performance For My Automation Game', 'CommentAuthor': 'josh-ig', 'Comment': 'Great article. Props for actually testing optimizations and measuring speed differences, one step far too many people skip. Thanks'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Squeezing Last Bit Of JavaScript Performance For My Automation Game', 'CommentAuthor': 'fagnerbrack', 'Comment': ""**Key points:**\n\nThis post delves into the optimization journey for CivIdle, an automation game that succeeds Industry Idle, focusing on enhancing JavaScript performance. The author explores the transition from using TypeScript/JavaScript to potentially using WebAssembly or C++ for better performance, ultimately sticking with TypeScript for UI and WebGL for rendering due to its efficiency with web platforms. By adopting Pixi.JS for faster WebGL rendering and optimizing code to reduce computation time and resource allocation, significant performance improvements were achieved. Techniques such as object pooling, texture optimization, and code refactoring for efficient memory use were employed. The post highlights challenges and solutions in optimizing game simulation and rendering processes, illustrating the impact of various optimization strategies on game performance.\n\nIf you don't like the summary, just downvote and I'll try to delete the comment eventually üëç""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Squeezing Last Bit Of JavaScript Performance For My Automation Game', 'CommentAuthor': 'mediumdeviation', 'Comment': '> although the fact that iterating an object with numeric keys is that much slower is a bit puzzling\n\nIt\'s probably because JS objects always has string keys. When you try to set an object with non-string keys it gets coerced into string, so `1000,1000` is a ""better"" key than `(1000 << 16) | 1000 = 65537000`. \n\nEdit: Actually both are about the same length, so I don\'t think that explains things. \n\nWhile in theory integers should be able to be stored compactly, JS numbers are always floating point numbers so I imagine JS engines don\'t necessarily always use that optimization. \n\n\n    > o = {}\n    > o[10e4] = 1\n    > o[10e20] = 2\n    > o[Math.PI] = 3\n    > o[0.1 + 0.2] = 4\n    > o\n    {\n      \'100000\': 1,\n      \'1e+21\': 2,\n      \'3.141592653589793\': 3,\n      \'0.30000000000000004\': 4\n    }\n    \n\nBy the way if you have integer keys, have you considered using a pre-allocated array?'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Squeezing Last Bit Of JavaScript Performance For My Automation Game', 'CommentAuthor': 'dark-phobia', 'Comment': ""It was a nice read :) You should take a look at [WebGPU](https://www.youtube.com/watch?v=m6T-Mq1BPXg), I've been using it for a while and I was able to notice considerable performance gains compared to WebGL.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Squeezing Last Bit Of JavaScript Performance For My Automation Game', 'CommentAuthor': '-jz-', 'Comment': 'Nice writeup!'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Squeezing Last Bit Of JavaScript Performance For My Automation Game', 'CommentAuthor': 'anonymous_sentinelae', 'Comment': 'The first thing to consider when performance is appreciated is to NEVER USE TypeScript. TypeScript is extremely slow, bloated and inefficient compared to JavaScript.\nMostly like every hyped tool around, like UI frameworks (React, Angular, etc) or anything requiring some form of transpilation is just horrible.\nVanilla JavaScript is the only one powerful enough to give you full speed and let you squeeze every bit of performance out of it.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Squeezing Last Bit Of JavaScript Performance For My Automation Game', 'CommentAuthor': 'PickledPokute', 'Comment': 'Excellent article. I\'m surprised that you went for `""x,y""` string manipulation and comparisons considering your early attentiveness on performance.\n\nFor this, I would\'ve been interested if simple twicely nested map would be sufficiently fast for saving all the tiles. Also whether the format would matter: a tuple of \\[x, y\\], an object of {x, y} or just two parameters of x and y when passing coordinates of a tile.\n\n>We\xa0also use enum flags in TypeScript instead of an object of boolean flags.\n\nDid you measure whether this affected performance?'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Squeezing Last Bit Of JavaScript Performance For My Automation Game', 'CommentAuthor': 'Mandus_Therion', 'Comment': 'i want to play, been looking for a chill relaxing game.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Squeezing Last Bit Of JavaScript Performance For My Automation Game', 'CommentAuthor': 'Applesaucesome', 'Comment': ""But doesn't typescript transpile to javascript?""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Squeezing Last Bit Of JavaScript Performance For My Automation Game', 'CommentAuthor': 'joombar', 'Comment': 'Typescript uses type vanishing. This means that by the time it is delivered to the browser, there is zero typing left in the code and zero overhead. This post is completely wrong.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Squeezing Last Bit Of JavaScript Performance For My Automation Game', 'CommentAuthor': 'hyrumwhite', 'Comment': 'TS just means you add a build step to your project.\xa0 It‚Äôs transpiled to JS and runs as js in the client.\xa0\n\n\xa0If we‚Äôre talking extreme optimization, JS functions are actually slightly more efficient if they always return the same (JS) type. While you can return multiple types in TS, it‚Äôs easier to not'}]"
Javascript,[AskJS] I encountered a very strange behavior with this custom DOM element. Anyone seen this before?,https://www.reddit.com/r/javascript/comments/18rhx12/askjs_i_encountered_a_very_strange_behavior_with/,10,14,daverave1212,1703623834.0,"Hello!

I was trying to inject a script into a website for some automation and I ran into something I haven't seen before.

Essentially, this is the code of the website part (what I see in the Chrome inspector):

```

<div>  
  <slot>  
    <div>....</div>  
    <div>....</div>  
    <div>....</div>  
  </slot>  
</div>  
```

However, when I get the base div in a variable and do div.innerHTML, it returns just `<slot></slot>`, which is strange, since <slot> clearly has components (and quite a few of them nested around).

Slot is a custom element; its prototype is something like SlotElement.

The thing is, on this SlotElement object, `.children` returns an empty collection. Everything tied to it returns either null or empty. `firstChild`, `childNodes`, `children`, `innerHTML`, `querySelector`, etc.

FYI if I go in the inspector, I can right click and put the children of this <slot> in a global variable and use it as a normal element. I just can't find a way to get these children directly from code in any way.

Has anyone seen this behavior before and has any idea why it happens and how to bypass it? Ultimately, I need to get a child of this slot element, but it seems nothing works to do so.

Thanks!

PS: For security reasons, I unfortunately can't disclose which website this is as it is for work, or share any exact code.

Edit: formatting","[{'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] I encountered a very strange behavior with this custom DOM element. Anyone seen this before?', 'CommentAuthor': 'sparrownestno', 'Comment': 'Provided it isn‚Äôt just Vue failing to render properly,  it actual custom elements, then I‚Äôd suggest giving this a read for details and methods: [https://developer.mozilla.org/en-US/docs/Web/API/Web\\_components/Using\\_templates\\_and\\_slots](https://developer.mozilla.org/en-us/docs/web/api/web_components/using_templates_and_slots)'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] I encountered a very strange behavior with this custom DOM element. Anyone seen this before?', 'CommentAuthor': 'stefanpearson', 'Comment': 'SlotElement is not a custom element, it‚Äôs a standard element used _within_ custom elements to project something into the shadow root‚Äôs slot. Try slotElement.assignedElements() ‚Äì https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements and read up on the Shadow DOM.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] I encountered a very strange behavior with this custom DOM element. Anyone seen this before?', 'CommentAuthor': 'gladrock', 'Comment': ""I think you're looking for .shadowRoot on the slot element?""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] I encountered a very strange behavior with this custom DOM element. Anyone seen this before?', 'CommentAuthor': 'voobsheniche', 'Comment': 'Perhaps at the moment when you want to get the ""slot"" child elements, they don\'t exist yet. They are rendered asynchronously. Set a delay for the execution of your script, for example 5 or 10 seconds and check again.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] I encountered a very strange behavior with this custom DOM element. Anyone seen this before?', 'CommentAuthor': 'TheRNGuy', 'Comment': ""Doesn't matter how tag is named.\n\nYou can even create your own tags in web site instead of div or span (they wont have default styles though so just using div or span is better)\n\nI never do that because I prefer just use class instead.\n\nI've seen many unfamiliar tags in browser code, like `menuitem`. I didn't see any advantage, I didn't felt like it makes code more readable. They could just use divs instead. They all have unique ids (some have non-unique classes)\n\nI also hated tags that have dashes in google sites (they using Angular or something?) Becuase double click only selects half of it.""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] I encountered a very strange behavior with this custom DOM element. Anyone seen this before?', 'CommentAuthor': 'Dapper-Warning-6695', 'Comment': 'Why would you use innerHTML anyways?'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] I encountered a very strange behavior with this custom DOM element. Anyone seen this before?', 'CommentAuthor': 'daverave1212', 'Comment': 'Thanks, I\'ll take a look at that!\n\nI don\'t have much experience with Vue, not sure what the website is rendered in but I see an ""SomethingNG"" import which makes me think of Angular.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] I encountered a very strange behavior with this custom DOM element. Anyone seen this before?', 'CommentAuthor': 'daverave1212', 'Comment': ""Interesting method, I'll give it a try and see if it works.\nI read about the shadow dom yesterday but there doesn't seem to be a way around getting it's children if it is not open.""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] I encountered a very strange behavior with this custom DOM element. Anyone seen this before?', 'CommentAuthor': 'daverave1212', 'Comment': 'shadowRoot is null on the slot element as well'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] I encountered a very strange behavior with this custom DOM element. Anyone seen this before?', 'CommentAuthor': 'daverave1212', 'Comment': ""I tried that.\n\nI believe I'm dealing with closed shadow dom which would make sense not to work. I'm trying to find workarounds.""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] I encountered a very strange behavior with this custom DOM element. Anyone seen this before?', 'CommentAuthor': 'daverave1212', 'Comment': ""Yeah my point was to illustrate that it's a custom element, and maybe someone recognized the slot element from some framework and could shed some light.\n\nI don't like hyphens in tags either ;)""}]"
Javascript,"[AskJS] Do you think we need an Automatic Code Documentation Generator, especially after Github Co-pilot?",https://www.reddit.com/r/javascript/comments/18bi1p1/askjs_do_you_think_we_need_an_automatic_code/,0,18,snorkell_,1701799386.0,"With tools like GitHub Copilot, we've seen how automation can aid in coding, but documentation still lags behind - you have to manually generate documentation for each Function and Class. I believe documentation should be as automated, seamlessly updating in the background without manual intervention.

Leveraging LLMs(GPT-3.5), I've developed Snorkell.ai, a GitHub App that embodies this principle. It quietly works in the background, automatically generating and updating comprehensive documentation for every class and function with each repo update.

The result? For every code change, Snorkell.ai creates a PR with the latest documentation, ensuring your project's documentation is always up-to-date and accurate with minimal effort.

I want to know if it could be a useful tool in the long run, any thought is much appreciated.

Reference Link: [https://github.com/apps/snorkell-ai](https://github.com/apps/snorkell-ai)  


Sample Example - [https://github.com/sumansnorkell/Fastapi-template/pull/18/files](https://github.com/sumansnorkell/Fastapi-template/pull/18/files)

&#x200B;","[{'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] Do you think we need an Automatic Code Documentation Generator, especially after Github Co-pilot?', 'CommentAuthor': 'kherven', 'Comment': ""I could see this being useful for highly boilerplatey documentation-for-the-sake-of-documentation style things. \n\nKinda like man pages or technical documentation for classes in JVM land. Helpful to someone, maybe, but personally makes my eyes go cross. \n\nSo if you're in that kind of land where you need really bureaucratic documentation this could be a time saver. \n\nBut, if this is actually documentation for humans to help humans, I think you really need the human touch. When I'm reading a PR I don't want a technical manual or an enumeration of every code change. I want you, a human, to tell me what this PR does in simple terms, a tl;dr (not a wall of text)\n\nFor that reason, I wouldn't be a big fan of this. But I could see it being helpful for things like OpenAPI documentation, technical documentation, etc, where the documentation is highly technical and factual.\n\nAlso for the video: I get AI voice for AI tool might be fitting, but it really drops my trust of whatever you're pitching instantly. I'd rather hear the creator explain to me its value instead of TTS.""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] Do you think we need an Automatic Code Documentation Generator, especially after Github Co-pilot?', 'CommentAuthor': 'ManyFails1Win', 'Comment': 'Maybe for reviewing code and writing summaries of its functions, but I find the in code comments that these AI make to be mostly useless and overly wordy.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] Do you think we need an Automatic Code Documentation Generator, especially after Github Co-pilot?', 'CommentAuthor': 'Yord13', 'Comment': 'I am sceptical tbh. The documentation I would like my team to write is about the ‚Äúwhy‚Äù and ‚Äúwhy not‚Äù. The business function something has, the business case something solves, the reason why a hack is in the code but what we would rather should have if some other condition is met.\n\nAll of these things are impossible to be written by having exclusively the context of the code. The documentation I do read is basically translating code to natural language, by a model that is known to make up things rather than admitting that it does not completely understand.\n\nThis is an interesting technical challenge, but I am struggling to see the use case where this would be useful btw.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] Do you think we need an Automatic Code Documentation Generator, especially after Github Co-pilot?', 'CommentAuthor': 'guest271314', 'Comment': 'What\'s amazing about GitHub and Copilot is GitHub asked users to provide feedback for a recent UI update. The feedback was resoundingly negative. Why didn\'t GitHub management use it\'s own ""AI"" to read the language of the developer feedback and revert the changes? The reply from GitHub was ""broader platform goals"" was the reason for the change. \n\nI had to write code to get rid of GitHub Copilot advertising claiming I could write code ""55% faster"" with Copilot in the code editing and preview panels in the repositories I have published on GitHub.\n\nGitHub places a Copilot ad in the user menu as well. So, GitHub is pushing it\'s ""AI"" yet turned off the program when it came to analyzing negative user feedback. That\'s one problem with automation. It can be turned off when management doesn\'t want to see the objective results.\n\nAs to ""Automatic Code Documentation Generator"", that probably won\'t work for the code I generally write. I stay in the lab experimenting, testing, and breaking other peoples\' claims and gear, and my own gear. So there\'s no way for any program to document what I might be doing at any given time.\n\nTake for example https://github.com/guest271314/WebCodecsOpusRecorder. There was no roadmap anywhere in the wild for how to write Opus encoded packets produced by WebCodecs `AudioEncoder` to a single file, including the capability to include media metadata such as artist, album, artwork in the file, for use with Media Session API - without a media container - and play back the file in the browser. So how would the documentation be automatically generated?'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] Do you think we need an Automatic Code Documentation Generator, especially after Github Co-pilot?', 'CommentAuthor': 'Fine_Ad_6226', 'Comment': 'I like it I can see it being really useful for libraries and such. My only observation would be that the workflow seems a bit disconnected. \n\nNormally I‚Äôll paste into ChatGPT or whatever and ask it to js doc and then have a dialog like add examples update xyz to have the context of abc. Not sure how I would do that with this. But either way good stuff!'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] Do you think we need an Automatic Code Documentation Generator, especially after Github Co-pilot?', 'CommentAuthor': 'snorkell_', 'Comment': ""I have Finetuned GPT-3.5 so that it will generate documentation in proper format and the documentation is very contextual and factul. It knows what it it's documenting.\n\nHere is a sample example - [https://github.com/sumansnorkell/Fastapi-template/pull/18/files](https://github.com/sumansnorkell/Fastapi-template/pull/18/files)  \n\n\nCurrently, the generated documentation is easily parsable by Swagger.""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] Do you think we need an Automatic Code Documentation Generator, especially after Github Co-pilot?', 'CommentAuthor': 'snorkell_', 'Comment': 'I have Finetuned GPT-3.5 so that it will generate contextual documentation in proper format. \n\nHere is a sample example - [https://github.com/sumansnorkell/Fastapi-template/pull/18/files](https://github.com/sumansnorkell/Fastapi-template/pull/18/files)  \n\n\nAdditionally, the generated documentation is easily parsable by Swagger.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] Do you think we need an Automatic Code Documentation Generator, especially after Github Co-pilot?', 'CommentAuthor': 'snorkell_', 'Comment': 'I appreciate your skepticism and understand your concerns. You\'re right that the ""why"" and ""why not"" aspects of documentation, which often include business logic and context-specific decisions, are crucial and challenging for any automated system to grasp fully. These elements typically require human insight and cannot be inferred from code alone.  \nSnorkell, primarily aims to automate the more straightforward aspects of documentation‚Äîlike describing functions, classes, and code changes. It\'s designed to handle the repetitive and time-consuming part of documentation, allowing developers more time to focus on the nuanced aspects you mentioned.  \n\n\nYou can check this example on what Snorkell can do - [https://github.com/sumansnorkell/Fastapi-template/pull/18/files](https://github.com/sumansnorkell/Fastapi-template/pull/18/files)  \n\n\nor this - [https://github.com/sumansnorkell/Fastapi-template/pulls?q=is%3Apr+is%3Aclosed](https://github.com/sumansnorkell/Fastapi-template/pulls?q=is%3Apr+is%3Aclosed) check for all the PR titled - ""Please review the generated documentation for commit""  \n\n\nHowever, I believe that with advancements in LLMs and further integration with development ecosystems, these tools might eventually be able to assist in capturing some of the contextual and business-logic-related documentation by pulling information from commit messages, issue trackers, and other contextual sources. It\'s still a work in progress, and feedback like yours is invaluable in guiding its development.  \n\n\nYou can give it a try - [https://github.com/apps/snorkell-ai](https://github.com/apps/snorkell-ai)'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] Do you think we need an Automatic Code Documentation Generator, especially after Github Co-pilot?', 'CommentAuthor': 'snorkell_', 'Comment': ""Forgive me, but when I say documentation, I don't mean a PDF or .md file containing details of the code; I mean every function's/class' docstring, which briefly explains what that function/class does. \n\nThe docstring is a standard concept in all programming languages.In this case, when Snorkell is integrated into your repository, it will generate a docstring for all the functions present in the repository, and it will also update the docstring if the functions get modified.\n\nSorry if it's not explicit with my post, but here is 40 second demo that can explain it to you - [https://youtu.be/s32GS0glydA](https://youtu.be/s32GS0glydA)\n\nAlso, here is the app link - [https://github.com/apps/snorkell-ai](https://github.com/apps/snorkell-ai), if you want to try out""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] Do you think we need an Automatic Code Documentation Generator, especially after Github Co-pilot?', 'CommentAuthor': 'snorkell_', 'Comment': ""Thanks for your feedback I appreciate your point about the workflow seeming a bit disconnected compared to directly using ChatGPT, but that's the purpose of Snorkell.   \n\n\nThe major question is why do you want to paste your code to ChatGPT to generate documentation. Stuff like documentation should happen in background.  \n\n\nHow it works is you need to install Github App - [https://github.com/apps/snorkell-ai](https://github.com/apps/snorkell-ai) to your repository and it will automatically generate documentaion of all the functions and will raise a pull request with the generated documentation  \n\n\nHere's why this approach was chosen:\n\n**Automation & Integration:** Snorkell.ai is designed to work automatically in the background. Unlike directly pasting code into ChatGPT, it requires no manual intervention. This means documentation gets generated and updated without you needing to constantly manage the process.\n\n**Contextual Understanding:** While using ChatGPT directly offers more immediate control, it lacks the integrated context of your entire codebase. Snorkell.ai, on the other hand, understands the broader structure and relationships within your code, leading to more comprehensive and contextually accurate documentation.\n\n**Streamlined Workflow:** By creating PRs for each update, Snorkell.ai integrates smoothly with typical development workflows. This process ensures that documentation updates are tracked and reviewed just like code changes, maintaining quality and consistency.\n\n**Efficiency in Long-term Maintenance:** For ongoing projects, especially large ones, Snorkell.ai's automated approach saves significant time and effort in maintaining documentation, which can be a bottleneck if done manually through ChatGPT.That being said, I'm continuously looking to improve Snorkell.ai.   \n\n\nYou can watch this video to have better understanding [https://youtu.be/s32GS0glydA](https://youtu.be/s32GS0glydA)""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] Do you think we need an Automatic Code Documentation Generator, especially after Github Co-pilot?', 'CommentAuthor': 'guest271314', 'Comment': ""I don't see how the application could possibly document what the code is doing in the case above?""}]"
Javascript,The Full Guide to Web Scraping & Automation with JavaScript and NodeJS,https://www.browserless.io/blog/2022/09/30/javascript-nodejs-web-scraping/,297,13,IlyaAzovtsev,1665578402.0,,"[{'Subreddit': 'Javascript', 'Reddit_Title': 'The Full Guide to Web Scraping & Automation with JavaScript and NodeJS', 'CommentAuthor': 'tanaciousp', 'Comment': 'Interesting that puppeteer isn‚Äôt mentioned. I guess it‚Äôs chrome specific but still a good API for browser automation that requires less dependencies than selenium.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'The Full Guide to Web Scraping & Automation with JavaScript and NodeJS', 'CommentAuthor': 'AngryFace4', 'Comment': 'There‚Äôs a lot of great information in this write up‚Ä¶\n\nBut what kind of masochist ‚Äúchooses‚Äù selenium in a world where playwright exists?\n\nFeels like Stockholm syndrome.\n\nJokes aside though I haven‚Äôt used selenium in like 5 years. I‚Äôve heard they‚Äôve made major improvements. Can anyone make the pro selenium pitch?'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'The Full Guide to Web Scraping & Automation with JavaScript and NodeJS', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'The Full Guide to Web Scraping & Automation with JavaScript and NodeJS', 'CommentAuthor': 'kwazy_kupcake_69', 'Comment': 'Somewhat unrelated to this article but I have already struggled to work with css selectors and X-path. I wonder whether others also struggled like me when they first started web-scraping'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'The Full Guide to Web Scraping & Automation with JavaScript and NodeJS', 'CommentAuthor': 'trevorsg', 'Comment': '[Playwright](https://playwright.dev/) works with all modern browsers with a similar or identical API to Puppeteer.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'The Full Guide to Web Scraping & Automation with JavaScript and NodeJS', 'CommentAuthor': 'boneskull', 'Comment': 'it‚Äôs not _that_ interesting; this company is selling a platform which uses selenium'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'The Full Guide to Web Scraping & Automation with JavaScript and NodeJS', 'CommentAuthor': 'IlyaAzovtsev', 'Comment': 'We wrote a lot of articles about Puppeteer, like:\n\nHow to scrape Google Shopping using Puppeteer and Browserless - [https://www.browserless.io/blog/2022/06/28/google-shopping-scraper/](https://www.browserless.io/blog/2022/06/28/google-shopping-scraper/) \n\nor \n\nZillow scraper guide | How to build your own Zillow web scraping tool - [https://www.browserless.io/blog/2022/08/26/zillow-scraper/](https://www.browserless.io/blog/2022/08/26/zillow-scraper/)\n\n&#x200B;\n\nBut this time decided to showcase Selenium'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'The Full Guide to Web Scraping & Automation with JavaScript and NodeJS', 'CommentAuthor': 'Vanquished_Hope', 'Comment': ""I'm also curious...""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'The Full Guide to Web Scraping & Automation with JavaScript and NodeJS', 'CommentAuthor': 'aashu321', 'Comment': 'Commenting to get notified, if someone decides to make a pitch ;)'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'The Full Guide to Web Scraping & Automation with JavaScript and NodeJS', 'CommentAuthor': 'SukaYebana', 'Comment': 'is playwright generally faster than selenium?'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'The Full Guide to Web Scraping & Automation with JavaScript and NodeJS', 'CommentAuthor': 'Medivh158', 'Comment': 'But it‚Äôs the FULL guide'}]"
Javascript,I Turned My Linkedin Automation Startup Into An Open-Source,https://github.com/linvo-io/linvo-scraper,88,15,Alternative-Rich-578,1665160689.0,,"[{'Subreddit': 'Javascript', 'Reddit_Title': 'I Turned My Linkedin Automation Startup Into An Open-Source', 'CommentAuthor': 'therealrandy01', 'Comment': 'Fantastic! Now I can more easily spam recruiters.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I Turned My Linkedin Automation Startup Into An Open-Source', 'CommentAuthor': 'scut_07', 'Comment': 'Wow the code quality is just amazing. Well done.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I Turned My Linkedin Automation Startup Into An Open-Source', 'CommentAuthor': 'g1yk', 'Comment': 'If only it could auto apply to jobs'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I Turned My Linkedin Automation Startup Into An Open-Source', 'CommentAuthor': '1darkwizard', 'Comment': 'nice, something to look for in weekend :)'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I Turned My Linkedin Automation Startup Into An Open-Source', 'CommentAuthor': 'Alternative-Rich-578', 'Comment': 'This is my story :)\n\nhttps://dev.to/nevodavid/i-turned-my-startup-into-open-source-4efh'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I Turned My Linkedin Automation Startup Into An Open-Source', 'CommentAuthor': 'Camilab-fr', 'Comment': 'Great! Why do you open-source the code which powers your startup ? Is it sort of pivot ? Do you shut your company down and move to something else ?'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I Turned My Linkedin Automation Startup Into An Open-Source', 'CommentAuthor': 'Alternative-Rich-578', 'Comment': 'Or they can spam you! :)'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I Turned My Linkedin Automation Startup Into An Open-Source', 'CommentAuthor': 'Alternative-Rich-578', 'Comment': ""Thank you! :)\n\nIt's not that good, it was a closed code before :(""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I Turned My Linkedin Automation Startup Into An Open-Source', 'CommentAuthor': 'Koervege', 'Comment': 'And send your cv while simultaneously filling out the form where they ask for the exact contents of your cv'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I Turned My Linkedin Automation Startup Into An Open-Source', 'CommentAuthor': 'Alternative-Rich-578', 'Comment': 'üéâ'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I Turned My Linkedin Automation Startup Into An Open-Source', 'CommentAuthor': 'Alternative-Rich-578', 'Comment': ""Hi u/Camilab-fr, I am selling the startup :)\n\nIt's not all the startup code, just the scraping part! (which is huge).""}]"
Javascript,[AskJS] How do you build email automations for events?,https://www.reddit.com/r/javascript/comments/xpw1b5/askjs_how_do_you_build_email_automations_for/,14,17,dangtony98,1664320880.0,"Hi y'all!

I'd like to implement an email automation for my app so that, for instance, new users get a ""welcome"" email and those that don't finish making an account get an ""almost there"" email ‚Äî in the future, I'd like to send out different emails based on possibly more complex user events (e.g. if a user hasn't been active for x time, etc.).

My app runs on Node.js which is why I'm posting here and currently I'm sending out emails manually based on new users I'm getting on my platform.

A quick search shows Braze, CleverTap, and Emarsys do this type of data-driven communications stuff but it's clearly for the enterprise-level since there's no sign-up and you have to talk to sales.

I wanted to ask how you guys have done this and/or how you'd go about doing this?","[{'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] How do you build email automations for events?', 'CommentAuthor': 'unreal_rider', 'Comment': 'If you have a better server setup , you can use queues easily to trigger such events. For e.g. with every action push one message into SQS  from your server and consume it with lambda or own server to fire mails for given event. \nEach event will have some mail template ID attached to it. \nYou can set up local queues also.\n\nDB can also be used for such events, a cron can be scheduled which fethes the data and processes then Evey 10 minutes or so. This fetching process can be based on a column entry to what stage the user is in right now. \n\nFor anything to work in your system user flow has to be very well defined and tracked too.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] How do you build email automations for events?', 'CommentAuthor': 'therealkevinard', 'Comment': ""https://github.com/mautic/mautic is one open source entry. It's pretty robust (full disclosure, I haven't used it in 3+ years). It's a php app that runs independently of your application and has an embeddable js that makes the connection (a lot like google analytics, etc).""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] How do you build email automations for events?', 'CommentAuthor': 'niklasschr', 'Comment': 'Just a hint regarding sending mail with JS, I‚Äôve recently come across https://github.com/sofn-xyz/mailing. I am yet to use it, but it looks wonderful. Might help you develop, if you know React.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] How do you build email automations for events?', 'CommentAuthor': 'ShortFuse', 'Comment': 'Sounds like a basic service that collects a list of users from the DB with certain `WHERE` conditions. You schedule a setTimeout timer for each of them or until just one set to when the next candidate is available. When it fires, send the emails. (Maybe even ""lock"" the DB records, though you\'re not supposed to use the DB as a queue system.)\n\nI do something similar for a reservation system in NodeJS:\n\n    if (checkReservationsTimer) {\n      clearTimeout(checkReservationsTimer);\n      checkReservationsTimer = null;\n    }\n    if (nextWatch) {\n      let timeUntilNextWatch = nextWatch.getTime() - now.getTime();\n      if (timeUntilNextWatch > 0x7F_FF_FF_FF) {\n        timeUntilNextWatch = 0x7F_FF_FF_FF;\n      }\n      checkReservationsTimer = setTimeout(checkReservations, timeUntilNextWatch);\n      console.log(\'Checking reservations in\', timeUntilNextWatch, \'ms\');\n    }\n\nOnly caveat is you can\'t setTimeout for more than `0x7F_FF_FF_FF`, so I set it to that and let it loop. My use cases are more ""to the millisecond"", which doesn\'t sound so critical as email, but you remove any timer based DB polling and stay all in JS.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] How do you build email automations for events?', 'CommentAuthor': 'hyperactivebeing', 'Comment': 'Track the status with columns in the database and run cron job to send email if data found.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] How do you build email automations for events?', 'CommentAuthor': 'hankanini', 'Comment': 'You should check out node-schedule. It can do cron-like scheduling and use simple recurrence rules.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] How do you build email automations for events?', 'CommentAuthor': 'Wrong_Independent833', 'Comment': 'I speak German.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] How do you build email automations for events?', 'CommentAuthor': 'Don_Kino', 'Comment': ""Queues are the way.\nIf you want it reactive and live queues are great. With node you can use RabbitMQ, or something lighter with redis (I use the bull package).\n\nYour main app push events (messages) in the queue, and you can have a dedicated app that just listen to the queue and consume the messages.\n\nThe tricky part is the email building/sending, do you want to build and send them in house, or do you use a dedicated service (mailjet, mailgun, whatever)?\n\nEmail html can be tricky, email rules as well..\n\nI manage a project sending millions of email per week, and it's the stuff nightmares are made of. (with dates and timezones)""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] How do you build email automations for events?', 'CommentAuthor': 'dangtony98', 'Comment': ""Cool!\n\nI'll give it a look and try; thanks so much for this ‚Äî sounds like a gameplan!""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] How do you build email automations for events?', 'CommentAuthor': 'dangtony98', 'Comment': 'Thank you! Just took a look at it ‚Äî Will check it out.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] How do you build email automations for events?', 'CommentAuthor': 'dangtony98', 'Comment': 'Looks like an interesting project to me! ‚Äî Will check it out.'}]"
Javascript,I Made An Open Source Blockchain Automation Platform (99.6% Typescript),https://github.com/chainjet/platform,35,129,manar4,1661955057.0,,"[{'Subreddit': 'Javascript', 'Reddit_Title': 'I Made An Open Source Blockchain Automation Platform (99.6% Typescript)', 'CommentAuthor': '-domi-', 'Comment': 'Wow, real tough crowd today.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I Made An Open Source Blockchain Automation Platform (99.6% Typescript)', 'CommentAuthor': 'RiverOfSand', 'Comment': 'Yikes'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I Made An Open Source Blockchain Automation Platform (99.6% Typescript)', 'CommentAuthor': 'cedricvanhaverbeke', 'Comment': 'This is just another automation platform, right?'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I Made An Open Source Blockchain Automation Platform (99.6% Typescript)', 'CommentAuthor': 'manar4', 'Comment': 'Hi, js community!\n\nI have been working on this project for some time and decided to open-source it. I would love to hear some feedback and, if you are interested, to have more early adopters.\n\nChainJet is a workflow automation platform similar to Zapier but for blockchain and crypto services. The objective is to connect web2 and web3 services.\n\nIf you have any questions on how to use it or how to automate something you need, feel free to ask.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I Made An Open Source Blockchain Automation Platform (99.6% Typescript)', 'CommentAuthor': 'None', 'Comment': 'Good work OP but that‚Äôd be amazing if you would put all this effort in technology that are actually useful.\n\nWeb3 won‚Äôt happen, and we‚Äôve still found no good use for blockchain (and we won‚Äôt)'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I Made An Open Source Blockchain Automation Platform (99.6% Typescript)', 'CommentAuthor': 'mybed54', 'Comment': 'Fuck the haters here OP. Amazing work!'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I Made An Open Source Blockchain Automation Platform (99.6% Typescript)', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I Made An Open Source Blockchain Automation Platform (99.6% Typescript)', 'CommentAuthor': 'Big_Test_6126', 'Comment': 'this is really impressive, thanks for sharing.  will try setting up an instance and creating discord commands.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I Made An Open Source Blockchain Automation Platform (99.6% Typescript)', 'CommentAuthor': 'prb01dev', 'Comment': ""Hey, haven't gotten round to testing the app itself, but wanted to let you know one thing I noticed on your website in mobile version. If you go to one of the integration pages, there's whitespace you can scroll to on the right. https://ibb.co/T89H3NB""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I Made An Open Source Blockchain Automation Platform (99.6% Typescript)', 'CommentAuthor': 'None', 'Comment': ""Yay more stupid pointless Blockchain crap. I'll give a shit about this when I see Blockchain solve a problem of value. I don't mean the hypothetical promises of its backers, I mean a real implementation that really does something better than existing, centralized systems do. Because Blockchain trades everything for decentralization, other than that it tends to be worse than any other solution.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I Made An Open Source Blockchain Automation Platform (99.6% Typescript)', 'CommentAuthor': 'PersimmonMaximum9784', 'Comment': 'Great work OP, I was thinking on building something similar haha your product is amazing already. \n\nDon‚Äôt bother with those people that don‚Äôt get web3 and it‚Äôs advantages for some solutions, keep the good work!'}]"
Javascript,"Hey guys, here‚Äôs an article on Front-end testing: principles, levels, libraries, and automation. Please indulge yourselves.",https://blog.openreplay.com/front-end-testing-principles-levels-libraries-and-automation,108,12,Nessii_,1649521743.0,,"[{'Subreddit': 'Javascript', 'Reddit_Title': 'Hey guys, here‚Äôs an article on Front-end testing: principles, levels, libraries, and automation. Please indulge yourselves.', 'CommentAuthor': 'lifeeraser', 'Comment': ""> There should be at least 85% coverage.\n\nCoverage should not be the goal of testing. High coverage provides a false sense of security while failing to guarantee the quality of a test suite. In fact, it encourages writing sloppy tests that only exist to reach coverage milestones. Numbers aren't important here--the same problem arises whether you pick 90%, 80%, or even 50%.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Hey guys, here‚Äôs an article on Front-end testing: principles, levels, libraries, and automation. Please indulge yourselves.', 'CommentAuthor': 'wardrox', 'Comment': ""The article doesn't actually explain how is best to do FE testing though?\n\nMy experience: Puppeteer + mocha for acceptance tests, keep the front end light, have plenty of API test coverage, and you'll go far.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Hey guys, here‚Äôs an article on Front-end testing: principles, levels, libraries, and automation. Please indulge yourselves.', 'CommentAuthor': 'Keet_', 'Comment': 'Seo tip, kee your blog on your main site.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Hey guys, here‚Äôs an article on Front-end testing: principles, levels, libraries, and automation. Please indulge yourselves.', 'CommentAuthor': 'cbung', 'Comment': 'Can you give some examples of good tests offhand?'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Hey guys, here‚Äôs an article on Front-end testing: principles, levels, libraries, and automation. Please indulge yourselves.', 'CommentAuthor': 'Razvedka', 'Comment': ""Don't forget Cypress.io. Absolutely amazing for E2E.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Hey guys, here‚Äôs an article on Front-end testing: principles, levels, libraries, and automation. Please indulge yourselves.', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Hey guys, here‚Äôs an article on Front-end testing: principles, levels, libraries, and automation. Please indulge yourselves.', 'CommentAuthor': 'Nessii_', 'Comment': 'For the in-depth explanation, links were provided, thanks for actually checking it out. Appreciate:)'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Hey guys, here‚Äôs an article on Front-end testing: principles, levels, libraries, and automation. Please indulge yourselves.', 'CommentAuthor': 'horrbort', 'Comment': 'This only tests chrome tho'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Hey guys, here‚Äôs an article on Front-end testing: principles, levels, libraries, and automation. Please indulge yourselves.', 'CommentAuthor': 'cbung', 'Comment': 'What about those extensions that help ""record"" tests for you, do you use those for generating puppeteer tests?'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Hey guys, here‚Äôs an article on Front-end testing: principles, levels, libraries, and automation. Please indulge yourselves.', 'CommentAuthor': 'Merry-Lane', 'Comment': 'Instead of aiming a number, the quality and the focus should be the goal.\n\nSince it depends from project to project, there are no clear cut goals.\n\nSome projects may want to center it around some UI/UX goal (user retention), some about monetary incentives (anything that touches sales), some want to have solid grounds to start with then future features might be more lax,‚Ä¶ \n\nIt depends.\n\nBut by saying ‚Äúaim 90%‚Äù, the tests on your ‚Äúcore goals‚Äù may be impacted negatively.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Hey guys, here‚Äôs an article on Front-end testing: principles, levels, libraries, and automation. Please indulge yourselves.', 'CommentAuthor': 'wardrox', 'Comment': 'The fact it has auto-wait is all I need to be converted, ha ha. Thanks for the suggestion.'}]"
Javascript,[AskJS] WebdriverIO vs. Cypress - which tool to pick?,https://www.reddit.com/r/javascript/comments/o69l3l/askjs_webdriverio_vs_cypress_which_tool_to_pick/,5,14,hans_claasen,1624441602.0,We are currently trying to decide whether to pick [WebdriverIO](https://github.com/webdriverio/webdriverio) or Cypress as automation tool. Which one would you pick and why?,"[{'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] WebdriverIO vs. Cypress - which tool to pick?', 'CommentAuthor': 'mmcdermid', 'Comment': 'https://2020.stateofjs.com/en-US/technologies/testing/\n\nShould give you a good idea of what testing tools people enjoy using more'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] WebdriverIO vs. Cypress - which tool to pick?', 'CommentAuthor': 'nonamecommenter', 'Comment': 'In our company, we started moving away from Webdriver & CodeceptJS. It was great and fancy, but Cypress from 7.0 outperforms both in DX and easiness to set up in a CI. My personsl opinion is to use Cypress. :)'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] WebdriverIO vs. Cypress - which tool to pick?', 'CommentAuthor': 'ndobie', 'Comment': ""Having used a wide variety I recommend Cypress. The hardest part of E2E testing is debugging what went wrong. Cypress's development tools are top notch at helping you create tests and that they are working accurately.""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] WebdriverIO vs. Cypress - which tool to pick?', 'CommentAuthor': 'nightman', 'Comment': 'Definitely Testcafe - seems so much better than Cypress:\n\n\\- wider range of browsers than Cypress - Safari, iPhone, Internet Explorer (11+)  \n\\- no jQuery selectors like in Cypress  \n\\- headless support is the same - headless Chrome and Firefox testsing (e.g. on CI)  \n\\- easy remote browser - same as Cypress (e.g. for BrowserStack or SouceLabs testing)  \n\\- Typescript based tests, the newest JS features support  \n\\- Multi-window support  \n\\- Better iframe support   \n\\- Drag&Drop support'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] WebdriverIO vs. Cypress - which tool to pick?', 'CommentAuthor': 'download13', 'Comment': 'I just started using codeceptjs and its been pretty great so far.\n\nPluggable backend so you can use puppeteer/playwright/webdriver/whatever but it smooths over a lot of the finicky parts of using those libraries directly.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] WebdriverIO vs. Cypress - which tool to pick?', 'CommentAuthor': 'rArithmetics', 'Comment': 'Love cypress it‚Äôs so slick.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] WebdriverIO vs. Cypress - which tool to pick?', 'CommentAuthor': 'dth1999', 'Comment': 'I feel like its easier to add tests with Cypress.  It allows me to add good coverage with little time.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] WebdriverIO vs. Cypress - which tool to pick?', 'CommentAuthor': 'hans_claasen', 'Comment': '>https://2020.stateofjs.com/en-US/technologies/testing/\n\nA lot of people in our org say that Cypress is not really open source. While you can use Cypress for free, you need to purchase their plans to really run it at big scale. Maybe something I need to mention is that we probably will write a lot of tests for our UI project.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] WebdriverIO vs. Cypress - which tool to pick?', 'CommentAuthor': 'hans_claasen', 'Comment': 'What do you like the most about it?'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] WebdriverIO vs. Cypress - which tool to pick?', 'CommentAuthor': 'hans_claasen', 'Comment': 'These features are also supported in WebdriverIO, any opinion on Testcafe vs. WebdriverIO?'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] WebdriverIO vs. Cypress - which tool to pick?', 'CommentAuthor': 'None', 'Comment': 'You might be interested in this then: https://sorry-cypress.dev/'}]"
Javascript,Microsoft launches a Node-based browser automation project called Playwright,https://css-tricks.com/playwright/,308,80,nightman,1579991936.0,,"[{'Subreddit': 'Javascript', 'Reddit_Title': 'Microsoft launches a Node-based browser automation project called Playwright', 'CommentAuthor': 'None', 'Comment': 'TLDR: cross-browser version of  [puppeteer](https://github.com/puppeteer/puppeteer). Microsoft hired the Google employees working on puppeteer and made a competing cross-browser version.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Microsoft launches a Node-based browser automation project called Playwright', 'CommentAuthor': 'SrineshNisala', 'Comment': ""What's the difference between this and selenium?""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Microsoft launches a Node-based browser automation project called Playwright', 'CommentAuthor': 'highres90', 'Comment': ""I've been using testcafe for a number of years and haven't had a reason to switch yet, supports all major browsers including...*shudder* ie11 which some of my clients need""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Microsoft launches a Node-based browser automation project called Playwright', 'CommentAuthor': 'WroteBCPL', 'Comment': ""Every day in every way I pray for sensibly named software projects. One day I'll be rewarded.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Microsoft launches a Node-based browser automation project called Playwright', 'CommentAuthor': 'ciaran036', 'Comment': ""After not touching UI test automation for many many years I recently gave Selenium a brief try and I really wasn't impressed. Test automation still seems to be just as fidgety as it was nearly a decade go. Recording and playing back a test was still not as simple as just recording the test and leaving it at that. To me it looked like much of the tests would still have to be hand-coded. \n\nWhat are your experiences with browser automation testing?""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Microsoft launches a Node-based browser automation project called Playwright', 'CommentAuthor': 'ciaran036', 'Comment': ""Google can fuck off, they've been using anti-competitive practices for years. Google cannot claim a moral high ground.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Microsoft launches a Node-based browser automation project called Playwright', 'CommentAuthor': 'maximumdownvote', 'Comment': ""meh. i played with it. you have to await 80% of the api. it's distracting and creates the await version of callback hell code.\n\nperhaps more a criticism of await async but still ....""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Microsoft launches a Node-based browser automation project called Playwright', 'CommentAuthor': 'None', 'Comment': 'So, basically puppeteer from a company that is not evil.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Microsoft launches a Node-based browser automation project called Playwright', 'CommentAuthor': 'yerrabam', 'Comment': ""Puppeteer ***is*** cross-browser.   It can run Firefox and I guess with some small amendments, it will also be able to run any other Chrome-based browsers.\n\nIt's not exactly competing - it's a fork of puppeteer.  They are almost 1:1 compatible and hot-swappable.\n\nI imagine the attention will be focused on Playwright going forward unless Google throws other developers at their version.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Microsoft launches a Node-based browser automation project called Playwright', 'CommentAuthor': 'halkeye', 'Comment': ""I have heard the new stuff is bidirectional. Which means actual events instead of constant polling.\n\nSo should be way faster.\n\nI haven't looked into it but cypress seems way faster/responsive than  selenium.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Microsoft launches a Node-based browser automation project called Playwright', 'CommentAuthor': 'None', 'Comment': '[deleted]'}]"
Javascript,[AskJS] What are different things in your day-to-day that you‚Äôve automated with bash scripting or automated with tools in the js ecosystem. I hear a lot of people posting about how they‚Äôve e hacked their workflow with automation. Where should I start?,https://www.reddit.com/r/javascript/comments/copfnl/askjs_what_are_different_things_in_your_daytoday/,50,12,dj1041,1565480239.0,,"[{'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What are different things in your day-to-day that you‚Äôve automated with bash scripting or automated with tools in the js ecosystem. I hear a lot of people posting about how they‚Äôve e hacked their workflow with automation. Where should I start?', 'CommentAuthor': 'NishkalKashyap', 'Comment': ""Let me just share a few things I use on a day-to-day basis:\n\n**1. Continuous integration**\n\nContinuous integration is a gem!. I don't know why people reserve CI/CD only for production/large projects. I use CI all the time even with my small and personal projects which saves me a lot of time.\n\nAn example would be my [personal notes website](https://notes.nishkal.in/). All I do is: write some notes in markdown, push code to GitHub repo and within 3 minutes of build on [Travis](https://travis-ci.org/) my notes website is automatically deployed.\n\n**2. Cron Jobs with cloud functions/lambda**\n\nThese days you don't really need to have a dedicated server to schedule cron jobs. I strongly recommend automating day to day small tasks with cron jobs. My stack includes google cloud scheduler and cloud functions.\n\nI personally use cron jobs to schedule my *daily personal breif*  :P, which includes my billing cost of the previous day on google cloud, analytics data and usage report of my websites from google analytics and a few more things so that i **do not** personally have to go to 10 different websites to see the metrics every damn day. This is a huge time saver.!!\n\n&#x200B;\n\n**3. Personal Slack work-space**\n\nI suggest to build a personal slack work-space and use slack integrations to automate stuff like receiving the build status, receive notifications from functions e.t.c.\n\nAnother very cool feature of slack is slack's **slash commands.** You can trigger random http endpoints with slash commands, which in my case are http functions on google cloud. I personally use it to turn on/off my VPN virtual machine as and when required.\n\n&#x200B;\n\nOf-course, all of this is done with typescript/javascript and node. It may seem overwhelming at first to write all of this, but once you've setup an initial project structure, it becomes very easy to build up on that.\n\n&#x200B;\n\nHope at-least someone finds this useful :P""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What are different things in your day-to-day that you‚Äôve automated with bash scripting or automated with tools in the js ecosystem. I hear a lot of people posting about how they‚Äôve e hacked their workflow with automation. Where should I start?', 'CommentAuthor': 'lhorie', 'Comment': 'Shell learning topics:\n\n- basics (loops, conditionals, functions, piping)\n- commands (cat, curl, xargs, etc)\n- aliases and .bashrc\n\nTools:\n\n- emmet (write css selectors, press shortcut to expand to html)\n- fzf (fuzzy finder)\n- prettier + vscode format-on-save\n- hub (github cli)\n- applescript + chrome, or puppeteer (for web scraping)\n- ag/rg (fast grep)\n- jq (json manipulation cli util)\n- git commit hooks\n- .editorconfig + vscode plugin\n- kdiff3'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What are different things in your day-to-day that you‚Äôve automated with bash scripting or automated with tools in the js ecosystem. I hear a lot of people posting about how they‚Äôve e hacked their workflow with automation. Where should I start?', 'CommentAuthor': 'wijsguy', 'Comment': 'Most of our tooling now is node based and doesn‚Äôt require us to do really any scripting. The most I do now is shorten standard commands using aliases.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What are different things in your day-to-day that you‚Äôve automated with bash scripting or automated with tools in the js ecosystem. I hear a lot of people posting about how they‚Äôve e hacked their workflow with automation. Where should I start?', 'CommentAuthor': 'Shaper_pmp', 'Comment': ""1. Find anything you do regularly that's a relatively dumb, mechanical set of steps that can easily be turned into a (perhaps parameterised) shell script or Jenkins job\n2. Turn it into a shell script or Jenkins job.\n3. Rinse and repeat""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What are different things in your day-to-day that you‚Äôve automated with bash scripting or automated with tools in the js ecosystem. I hear a lot of people posting about how they‚Äôve e hacked their workflow with automation. Where should I start?', 'CommentAuthor': 'dwilbank', 'Comment': ""Web scraping with node & puppeteer is the most common use I can think of.\n\nI use a node script to rename my daily downloads. The script compares the downloaded file names with a massive JSON file I scraped elsewhere, then renames/organizes the newest files accordingly.\n\nEven cooler would be a script that calls an API, then renames your files based on that info -- but I haven't had need to code that yet...""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What are different things in your day-to-day that you‚Äôve automated with bash scripting or automated with tools in the js ecosystem. I hear a lot of people posting about how they‚Äôve e hacked their workflow with automation. Where should I start?', 'CommentAuthor': 'our_best_friend', 'Comment': 'Sounds like the wrong question. You can automate _anything_. You should be asking ""This is what I do day to day with my workflow... is there anyway to make this or that part faster?"" \n\nAlso worth keeping this in mind: https://xkcd.com/1205/'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What are different things in your day-to-day that you‚Äôve automated with bash scripting or automated with tools in the js ecosystem. I hear a lot of people posting about how they‚Äôve e hacked their workflow with automation. Where should I start?', 'CommentAuthor': 'None', 'Comment': 'Idk if this counts exactly but I have two cli scripts that delete my git branches. I accumulate a crap ton. One deleted them locally and the other remote branches'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What are different things in your day-to-day that you‚Äôve automated with bash scripting or automated with tools in the js ecosystem. I hear a lot of people posting about how they‚Äôve e hacked their workflow with automation. Where should I start?', 'CommentAuthor': 'examinedliving', 'Comment': 'Man...i wish I had time to answer this.   You should see my wallpaper changing electrified gulp error throwing time setting appointment canceller.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What are different things in your day-to-day that you‚Äôve automated with bash scripting or automated with tools in the js ecosystem. I hear a lot of people posting about how they‚Äôve e hacked their workflow with automation. Where should I start?', 'CommentAuthor': 'jabsin_', 'Comment': 'Had no idea about the Slack stuff. Thanks for sharing.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What are different things in your day-to-day that you‚Äôve automated with bash scripting or automated with tools in the js ecosystem. I hear a lot of people posting about how they‚Äôve e hacked their workflow with automation. Where should I start?', 'CommentAuthor': 'g0liadkin', 'Comment': ""Would you mind showing a bit of the cron jobs for analytics? I'd love to have something like that""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What are different things in your day-to-day that you‚Äôve automated with bash scripting or automated with tools in the js ecosystem. I hear a lot of people posting about how they‚Äôve e hacked their workflow with automation. Where should I start?', 'CommentAuthor': 'our_best_friend', 'Comment': '> ag/rg (fast grep)\n\nFYI: pt is even faster, and its options are better documented...'}]"
Javascript,Which sites have you scraped? Any Legal implications of scraping that you are worried about or faced?,https://www.reddit.com/r/javascript/comments/8d82ep/which_sites_have_you_scraped_any_legal/,3,11,deadcoder0904,1524077076.0,"Basically I want to scrape. And I did this multiple times but its always done locally by running a script. This time I want to do it with automation for an app. So in the background, it will scrape data every week & I'll use it in my app new data every time its fetched. I am just worried about legal implications.","[{'Subreddit': 'Javascript', 'Reddit_Title': 'Which sites have you scraped? Any Legal implications of scraping that you are worried about or faced?', 'CommentAuthor': 'BenjiSponge', 'Comment': ""This depends 100% on the site you're scraping and the content.\n\nTake JS out of the equation. If you manually copied and pasted this stuff from the website, would it be legal? That answer is identical. ""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Which sites have you scraped? Any Legal implications of scraping that you are worried about or faced?', 'CommentAuthor': 'TwoMovies', 'Comment': ""Well, if you are going to use stolen content - yes it's not legal.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Which sites have you scraped? Any Legal implications of scraping that you are worried about or faced?', 'CommentAuthor': 'TwoMovies', 'Comment': 'Wikipedia - Web scraping - Legal issues\nhttps://en.wikipedia.org/wiki/Web_scraping#Legal_issues'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Which sites have you scraped? Any Legal implications of scraping that you are worried about or faced?', 'CommentAuthor': 'deadcoder0904', 'Comment': ""No not manually copy-paste the same thing. I don't like 2 websites with same content either even if the design or CSS is different.\n\nBut I don't understand there are many websites out there that are made on Scraped Content from other sites. For example, https://hackernewsbooks.com & https://redditreads.com. What about them?""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Which sites have you scraped? Any Legal implications of scraping that you are worried about or faced?', 'CommentAuthor': 'stilloriginal', 'Comment': 'Why?  Assuming its publicly available information?  '}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Which sites have you scraped? Any Legal implications of scraping that you are worried about or faced?', 'CommentAuthor': 'BenjiSponge', 'Comment': 'Copying and pasting from hacker news and Reddit is (mostly?) fair game, so scraping from them is as well. My point stands. '}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Which sites have you scraped? Any Legal implications of scraping that you are worried about or faced?', 'CommentAuthor': 'ccb621', 'Comment': 'Content being publicly available is not a license to re-publish said content.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Which sites have you scraped? Any Legal implications of scraping that you are worried about or faced?', 'CommentAuthor': 'TwoMovies', 'Comment': 'Well it depends. It is difficult to give an overall assessment. Some sites do not prohibit the use of their content, for example through api. It depends on licensing, TOS, robots.txt etc.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Which sites have you scraped? Any Legal implications of scraping that you are worried about or faced?', 'CommentAuthor': 'deadcoder0904', 'Comment': ""If you may, how to know if its legal/illegal bcz I have seen many sites scrape all data from sites & make their own site. For example, https://hackernewsbooks.com & https://redditreads.com & these are just few of many examples. Told you about HN & Reddit bcz they are pretty big sites. That's why I want to ask how to know if I can scrape a website?""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Which sites have you scraped? Any Legal implications of scraping that you are worried about or faced?', 'CommentAuthor': 'ccb621', 'Comment': 'They aren‚Äôt scraping content and using it as their own. They are taking links to Amazon, which isn‚Äôt illegal. They are also linking to original content threads. \n\nThe best way to know if you‚Äôre free to use content is to ask the content owners, if they don‚Äôt have a defined terms of service/license. '}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Which sites have you scraped? Any Legal implications of scraping that you are worried about or faced?', 'CommentAuthor': 'deadcoder0904', 'Comment': ""They already scraped HN & Reddit for the top list of books. Then they use links to Amazon & then they provide links to it. So that's definitely scraping it, isn't it?""}]"
Javascript,"What to do when you've only used ""legacy JavaScript"" on the job and no company will give you a chance to hire you for modern stuff, despite learning it?",https://www.reddit.com/r/javascript/comments/6z4zqs/what_to_do_when_youve_only_used_legacy_javascript/,0,14,_oooohhhhh_,1504999718.0,"Here's the scoop: I have worked in a few places before for web dev, but they usually have tended to have outdated practices that I can't control. And I am trying to learn but that's not even enough for companies anyore it seems.

Even at a 10-person startup which I left (got laid off) I didn't have much say on how to architect the frontend. Their lead developer lives and works from an Eastern European country and there isn't a lot of real-time communication between us. He designed the whole codebase and doesn't sound interested in overhauling it. The codebase used ""legacy JavaScript"". No front-end frameworks, no modules, no automation tools and the only thing it has going for it is some custom made SPA based framework with jQuery calls sprinkled all throughout.

*What I am familiar with*

* Node 
* React 
* Vue 
* Grunt

*What have I actually used on the job*

* PHP
* MySQL 
* jQuery 
* jsTree 
* D3

*Willingness to learn on the job?*

Yes. I say that a lot in the interviews. I present my main strength as being adaptable to the unknown. But time and time again, I get the rejection letter that they moved on to candidates that are a closer fit.

I like modern JS. I want to modernize my skill set. So I practice modernizing my skill set. But the employers always pick the ones that have real work experience in the modern skill sets (because I was behind the curve). I only have personal projects on Github to display my newer skills. And even if I did talk about, I still get passed up.

Am I getting too old for this? Are bootcamp grads running circles 'round me? Can this older dog still learn new tricks (and get paid for doing them)?

I don't know what else to do. I go to meetups for developers, collect emails and business cards, they email me back once about their jobs and then stop replying. What am I missing? What else can I do to get the competitive edge?
","[{'Subreddit': 'Javascript', 'Reddit_Title': 'What to do when you\'ve only used ""legacy JavaScript"" on the job and no company will give you a chance to hire you for modern stuff, despite learning it?', 'CommentAuthor': 'kenman', 'Comment': ""First, are you _positive_ that you're getting passed over for those reasons? Most interviewers won't tell you why you weren't picked (which sucks), and so I'd like to throw it out there that there could be other factors at play -- maybe you're not a strong interviewee, or don't appear to communicate effectively in person, or you come across with some personality flaw (arrogant, pedantic, etc.).\n\nIf I take your word for it that it's not your soft-skills, then how advanced are your github projects? We can critique them if you wish.\n\nWhen I interview, if all they've done is make a todo app or something else equally as trivial, then it's just slightly better than not having a github. However, one candidate that comes to mind had made a multiplayer game utilizing websockets; that was pretty impressive! And it was impressive because they had to do quite a bit outside the normal framework -- it's really not hard at all to take the latest framework, and make it do things that it was designed for (todo, blog, movie ratings, etc).\n\nAlso, it's possible the code in your projects is lackluster; it doesn't matter if you make a multiplayer game w/websockets if it's a [Big Ball of Mud](https://en.wikipedia.org/wiki/Big_ball_of_mud). Again, a code review/critique might help here.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'What to do when you\'ve only used ""legacy JavaScript"" on the job and no company will give you a chance to hire you for modern stuff, despite learning it?', 'CommentAuthor': 'None', 'Comment': ""I completely agree with the comment from u/kenman.  I am going to take this a step further and just immediately blame you for a failure in soft skills.\n\nHere's the deal.  Nobody really cares if you have practiced a couple minutes using *new* or *legacy* approaches.  You would do yourself a huge service by simply forgetting this.  Most of what you are talking about as far as *new* code is just build process and tooling.  If you were to come into an interview and focus the majority of your energy on this I would think you are just spinning your wheels with bullshit.\n\nWhat is most important is whether or not your code sucks and how immediately you can address a given problem.  If you want to be successful in an interview you will articulate this very clearly and calmly.  No bullshit.  No back-peddling stories.  No tooling nonsense.  Just provide a solution as directly as possible.\n\nTooling and build processes aren't a solution to a code problem.  They are conveniences and dependencies, which are nice ways of saying tech debt.  A bad ass rock star developer will take the existing code bad, no matter how old and horrid, and work with it as necessary to get the job done while providing (in code) a superior approach on your own time.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'What to do when you\'ve only used ""legacy JavaScript"" on the job and no company will give you a chance to hire you for modern stuff, despite learning it?', 'CommentAuthor': 'None', 'Comment': 'You may want to study up on your fundamentals like data structures, common design patterns, and so on. Frontend is getting quite sophisticated.\n\nAnd play around with Angular, Ember, and Relay. Understand where the frameworks are converging/diverging and what their strengths and weaknesses are.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'What to do when you\'ve only used ""legacy JavaScript"" on the job and no company will give you a chance to hire you for modern stuff, despite learning it?', 'CommentAuthor': 'kecupochren', 'Comment': ""Hey there internet stranger. If you're struggling with switching jobs, reading these two articles will help you a ton. \n\nhttp://www.kalzumeus.com/2011/10/28/dont-call-yourself-a-programmer/\n\nhttp://www.kalzumeus.com/2012/01/23/salary-negotiation/\n\n""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'What to do when you\'ve only used ""legacy JavaScript"" on the job and no company will give you a chance to hire you for modern stuff, despite learning it?', 'CommentAuthor': 'doctorlongghost', 'Comment': ""I was in the same boat as you until my most recent job. It sounds like you're already doing a good job selling yourself so just keep at it and don't get discouraged. \n\nNo matter how good you are, getting No's after an interview is inevitable and no reflection on you or your abilities. Remember that the more you apply, the less likely it is that you won't get an offer. Don't slow down and don't give up. ""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'What to do when you\'ve only used ""legacy JavaScript"" on the job and no company will give you a chance to hire you for modern stuff, despite learning it?', 'CommentAuthor': 'jones1618', 'Comment': 'Be careful about introducing ""new skills"" into your interview. If done wrong it can come across as ""I dabble in this and that..."" Nobody wants to hire a dabbler. They want someone to dive deep and solve their current problems now. \n\nSo, that leads to two scenarios: 1) A traditional PHP/plain-JavaScript shop interviews you because you have those buzzwords on your resume or 2) A ""modern"" shop interviews you because you said you knew Node.js (for instance).\n\nAt #1, (perhaps) you are coming across bored with the ""old stack"" and are talking up the new stuff. This simultaneously makes them feel outdated and that you won\'t roll up your sleeves and help them with the current environment.\n\nAt #2, you come across as wanna-be ""dabbler"" in the new stuff, so (again) won\'t be able to contribute to their current problems.\n\nSo, tailor your approach to the job you want. If you really don\'t want the old PHP/JavaScript type of job, leave that off your resume or create a functional resume that emphasizes the new stuff. Make sure your ""personal"" projects aren\'t toys (as others have said). The easiest way to do that is to contribute to substantial GitHub projects using the new stuff you want to work with.\n\nWorse case: You might still have to go after jobs that use ""old stack"" technologies but are potentially ripe for modernizing at some point where you could play a key role in that.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'What to do when you\'ve only used ""legacy JavaScript"" on the job and no company will give you a chance to hire you for modern stuff, despite learning it?', 'CommentAuthor': 'well-now', 'Comment': ""> Most interviewers won't tell you why you weren't picked.\n\nYou can also ask for feedback on the interview you've just done.  I think I tend to interview well but I recall one instance where I didn't think I came across as strong as I should of so I asked the interviewer for feedback.\n\nThey were pretty open about it and I'm pretty sure me asking that question helped me go on to the next round.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'What to do when you\'ve only used ""legacy JavaScript"" on the job and no company will give you a chance to hire you for modern stuff, despite learning it?', 'CommentAuthor': '_oooohhhhh_', 'Comment': 'Haha, yeah the legacy codebase I talked about in the OP was like a big ball of mud in many places. In a way, it\'s a good learning experience getting to work with obfuscated code as a way to push your limits, but I don\'t see why that usually gets spun as bad. I would spin it as, ""if I can put up with ball of mud code, imagine how fast I would fly working with very clean, organized code"".\n\nBut anyways I do have a public portfolio of code projects. It\'s not all JavaScript but there\'s some there. [Github link here.](https://github.com/ccajas?tab=repositories) Some projects are less trivial than others.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'What to do when you\'ve only used ""legacy JavaScript"" on the job and no company will give you a chance to hire you for modern stuff, despite learning it?', 'CommentAuthor': 'Should_have_listened', 'Comment': '> should of \n\n Did you mean should have? \n\n-------------------------------------- \nThis is a bot account.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'What to do when you\'ve only used ""legacy JavaScript"" on the job and no company will give you a chance to hire you for modern stuff, despite learning it?', 'CommentAuthor': 'kenman', 'Comment': 'Out of those projects, which single one do you think is the best example of your skills?'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'What to do when you\'ve only used ""legacy JavaScript"" on the job and no company will give you a chance to hire you for modern stuff, despite learning it?', 'CommentAuthor': 'could-of-bot', 'Comment': ""It's either should **HAVE** or should**'VE**, but never should **OF**. \n\n See [Grammar Errors](http://www.grammarerrors.com/grammar/could-of-would-of-should-of/) for more information.""}]"
Javascript,"I automated my home with NodeJS, React Native and Raspberry Pi!",https://www.reddit.com/r/javascript/comments/6k9ho4/i_automated_my_home_with_nodejs_react_native_and/,156,16,deepsyx,1498753835.0,"Hey guys! I just rewrote my article about the home automation I made with React Native, NodeJS and Raspberry PI :)

Any feedback is appreciated!

https://viktorkirilov.me/post/home-automation-raspberry-pi/","[{'Subreddit': 'Javascript', 'Reddit_Title': 'I automated my home with NodeJS, React Native and Raspberry Pi!', 'CommentAuthor': 'None', 'Comment': 'He (I am assuming from the domain name) must be single.... the house is too clean.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I automated my home with NodeJS, React Native and Raspberry Pi!', 'CommentAuthor': 'None', 'Comment': 'Really like this. Is this fully decentralised or reliant upon any third parties? Thought about some sort of Alexa/Home/similar integration?'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I automated my home with NodeJS, React Native and Raspberry Pi!', 'CommentAuthor': 'deepsyx', 'Comment': ""Hey guys, thanks for the good feedback! I really appreciate it. I just startes my blog and I'm trying to gain some traction, so if you would like to see more similar content, you can subscribe and I'll try to send you a newsletter once a month. I won't spam, I promise :)""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I automated my home with NodeJS, React Native and Raspberry Pi!', 'CommentAuthor': 'kenman', 'Comment': 'Hi /u/deepsyx, in the future, please submit links using ""Submit a new link"". Thank you.\n\nedit: for those downvoting, this is how we track spam (our tools can\'t see links that are submitted as self-posts). Thanks for downvoting me anyways, though. I could have just removed the post, which I\'ll be more inclined to do in the future.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I automated my home with NodeJS, React Native and Raspberry Pi!', 'CommentAuthor': 'icantthinkofone', 'Comment': 'As one who has developed embedded systems since forever, I cannot fathom using any of those software tools to do this. Simply ridiculous. And he needed a whole Raspberry Pi to accomplish it?! Jeez.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I automated my home with NodeJS, React Native and Raspberry Pi!', 'CommentAuthor': 'SandalsMan', 'Comment': 'I dunno about that‚Ä¶ only reason my house stays clean is because of my SO lmao'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I automated my home with NodeJS, React Native and Raspberry Pi!', 'CommentAuthor': 'deepsyx', 'Comment': ""It's decentralized. It only relies on my ISP to not kill my internet :D""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I automated my home with NodeJS, React Native and Raspberry Pi!', 'CommentAuthor': 'Voidsheep', 'Comment': ""Raspberry Pi costs next to nothing and uses very little power. You get more than enough performance and access to PC tooling that is very convenient to use and likely familiar to OP already.\n\nCould you do it thousand times more efficiently with an embedded system? Sure, but why would OP bother with that when there's likely no benefit to him in practice. If anything, he'd likely spend way longer to get the project working at all.\n\nIf he was going to mass produce this, I'd understand calling it a ridiculous solution, but for personal use it's absolutely fine. I'd probably go with a Raspberry Pi running Node as well.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I automated my home with NodeJS, React Native and Raspberry Pi!', 'CommentAuthor': 'n8bit', 'Comment': 'Not everyone has developed embedded systems since forever.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I automated my home with NodeJS, React Native and Raspberry Pi!', 'CommentAuthor': 'JDeltaN', 'Comment': 'It does the job requested up to spec. Everything else is secondary.\n\nYou can stay in your caves for now embedded system developers, well call on your services when we need real embedded software.\n\nAlternatively, maybe you should not read content from /r/javascript.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I automated my home with NodeJS, React Native and Raspberry Pi!', 'CommentAuthor': 'deepsyx', 'Comment': 'Hahahahhaha, my SO just cleaned the house before I filmed the video :D'}]"
Javascript,Need some help with JS and API.,https://www.reddit.com/r/javascript/comments/51sry6/need_some_help_with_js_and_api/,14,20,eirik226,1473359184.0,"Hello,

I have my own website that I use to control a few home automation stuff - like turning on and off the TV, lights, heating, you get the picture. This is just some stuff I threw together with help of trail and error.

But I want to link the website to another program I have running, called Sabnzb, this program has it's own API and I've figured out what api-command (if that's the right word for it) I am going to use for this.

But I don't understand how I can display this information on my webpage. I've tried to google, but didn't get much wiser.

Here is the API I am using:

    http://localhost:port/sabnzbd/api=myapikey?mode=history&start=START&limit=5

What this does is display the history of downloaded stuff.

How would I get this on my webpage? I've figured out that I need to use JS and someone said Ajax aswell.

Any help or link to help will be appreciated! Thanks in advance.","[{'Subreddit': 'Javascript', 'Reddit_Title': 'Need some help with JS and API.', 'CommentAuthor': 'None', 'Comment': '> How would I get this on my webpage?\n\nYou need to create a service on your web server to receive connections, probably just a HTTP POST, at a specific address.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Need some help with JS and API.', 'CommentAuthor': 'nickwebdev', 'Comment': ""How did you put that API on your server? Basically all you'll want to do is write some JS that calls that API and then puts the data onto your page. For example, using the axios library:  \n   \n     <script>\n         axios.get('http://localhost:port/sabnzbd/api=myapikey?mode=history&start=START&limit=5').then(function(response) {\n     console.log(response.data) //Write it to the page here, however you want.     \n    }\n     </script>  \n   \nTwo more things, you'll have to include axios on your page which is easy with a script tag, and also this example is REALLY bad security wise because you shouldn't put your API key on the site like that.  \n  \nIdeally what you'd do instead is store the API key on your server, and have your server hit the sabnzbd API when you call the endpoint on your server, and just return the data to you.  \n   \nBetter/more scaleable ways depending on what architecture you're using, but that would be the most straightforward way to make a REST request from the browser to an API.\n\n""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Need some help with JS and API.', 'CommentAuthor': 'meisteronimo', 'Comment': ""localhost is only available on that one machine, the one running sabnzbd, I assume this is inside your house.\n\nIf you need to make it accessible from another computer, there are 2 options.\n\n1) Inside of your network: \n\nFind the Network IP address of that one box, on ubuntu its `ifconfig`. There you'll see how other machines within your network identify your machine. It will likely be something like `192.168.1.xxx`. Then to access the service from within your house, another machine will `192.168.1.xxx:port/sabnzbd/....`\n\n2) Outside of your network.\n\nYou need to find the IP address above and open your home router & modem to outside traffic and route incoming traffic to that box. This is more tricky and will vary greatly depending on your setup.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Need some help with JS and API.', 'CommentAuthor': 'eirik226', 'Comment': 'Yes, thank you :) '}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Need some help with JS and API.', 'CommentAuthor': 'eirik226', 'Comment': 'Thanks, this helps a lot! I\'ll look into it, seems just like what I am after! :) Do have one question tho, ""to include axios on your page which is easy with a script tag"".\n\nIs that just like you did there? <script></script>? Don\'t I need to add this axios somehow? '}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Need some help with JS and API.', 'CommentAuthor': 'eirik226', 'Comment': 'Thanks, but I already knew this, just wrote localhost as a filler! Sorry for the confusion.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Need some help with JS and API.', 'CommentAuthor': 'nickwebdev', 'Comment': 'Checkout here:\n\nhttps://github.com/mzabriskie/axios\n\nAnd under install just copy and paste the CDN part onto your page in the <head> tag :).'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Need some help with JS and API.', 'CommentAuthor': 'meisteronimo', 'Comment': ""Cool well if you've already done step 2 and opened all the firewalls/ports. You can go:\nhttp://homePublicIPAddress:port/sabnzbd/....\ndirectly. Or if you've mapped a domain name with a dynamic DNS service, its even easier.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Need some help with JS and API.', 'CommentAuthor': 'jasan-s', 'Comment': ""Why do you need to complicate things with axios? What's wrong with the native fetch? especially as this app will have limited users so unlikely to need a polyfill?""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Need some help with JS and API.', 'CommentAuthor': 'eirik226', 'Comment': 'ah, now I think I know what you are talking about.\n\nI got it running (I think).\n\n    <script src=""https://npmcdn.com/axios/dist/axios.min.js""></script>\n\nThen:\n\n     <script>\n    \t\t\t\t\taxios.get(\'http://11.0.0.30:8085/sabnzbd/api=myapikey?mode=history&start=START&limit=5\').then(function(response) {\n    \t\t\t\t\t\tconsole.log(response.data) //Write it to the page here, however you want.     \n    })\n     </script>\n\n\nWhen I press f12 in my browser I get this error: ""No \'Access-Control-Allow-Origin\' header is present on the requested resource""\n\nSo, if I understand correctly, this is because the webpage (server) is on my home-computer and the sabnzb program is running on my NAS (With a different IP). Is that correct? So it won\'t work this way?'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Need some help with JS and API.', 'CommentAuthor': 'chreestopher2', 'Comment': 'its 2016!!! you have to use a library just to console.log these days, all the cool kids are doing it!'}]"
Javascript,"""Of course Vanilla JS developers get no love."" Wait what?",https://www.reddit.com/r/javascript/comments/45h8ta/of_course_vanilla_js_developers_get_no_love_wait/,17,33,somecsthrw1294,1455315945.0,"I posted a semi rant a while ago (this is a throwaway I hardly use though) in another programming-related sub saying that I'm having a hard time putting myself in someone's shoes as for what is good tangible experience for web development. And then someone says, of course vanilla JS developers get no love, who really is asking for JS developers without expecting them to know a framework or two? I would hate it if that's the reality. 

And as someone who has been using JavaScript with no big or popular third parties at the last job (not by choice, the CTO was pushing for a very custom JavaScript solution for the problem) I have a hard time selling my skill set.

I have a few years professional experience with the language, but we do not use Node, JS-based automation tools, nor do we use any of the popular front end ones like Ember or Angular. The company rolled almost everything on their own, aside for some functions like interactive trees. 

So I got a ton of experience getting more comfortable with the language, starting from a point where I considered JS to be one of my weak spots. While not a big expert on it yet, I started to learn more about the prototypal model and  implementing functions in a way that is more JS-friendly. Well, almost other companies seem to say, tough nails, you either know a framework well or we don't want you. So even though I have JS experience, JS on its own seems to be viewed as arcane but somehow adding a framework to the mix makes you so welcomed by companies. Is this why people get so crazy about learning every JS framework that comes out? Are vanilla JS devs in a job conundrum?","[{'Subreddit': 'Javascript', 'Reddit_Title': '""Of course Vanilla JS developers get no love."" Wait what?', 'CommentAuthor': 'e82', 'Comment': 'I give lots of interviews. Personally, I view deep knowledge of a given framework an asset, but not a must have. \n\n* Do you have strong programming skills in general?\n* Do you know JavaScript well\n* Are you smart?\n* Do you have a willingness to learn?\n* Are you a quick learner?\n\nIf you are a reasonably competent developer - you should be able to pickup a new framework/library/tool pretty quickly. Generally, I\'d rather invest in a good dev - and give them some ramp-up time to learn X or Y framework for whatever project they get assigned to, then hiring a sub-par dev that only knows X framework really well.\n\nThe problem I find, tends to fall onto recruiters and the \'first line\' of people that review resumes/etc before passing them along to other people. They are pretty much playing buzzword bingo. \n\nI remember talking with a recruiter on if a guy would be a good fit for me or not - had excellent JS experience but didn\'t know Angular (and this was quite a few years ago when no one knew Angular), and ""Oh, how about this guy? He\'s been doing node for yonks - but doesn\'t know Angular?"" - and trying to reinforce the point that I don\'t care if they know the framework or not, but have strong JavaScript skills. \n\n'}, {'Subreddit': 'Javascript', 'Reddit_Title': '""Of course Vanilla JS developers get no love."" Wait what?', 'CommentAuthor': 'whompalicious', 'Comment': 'I mean if you are a good enough ""Vanilla JS developer"" and architect to accomplish the same things that the Angular and Ember frameworks do for you, then more power to you, you\'re probably quite competent and will get an outstanding job.\n\nThe problem is that most people aren\'t and aren\'t even aware of a lot of the structure and concepts that the frameworks enforce.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '""Of course Vanilla JS developers get no love."" Wait what?', 'CommentAuthor': 'Randolpho', 'Comment': ""If you're a vanilla.js developer, you know that truly robust XMLHttpRequest calls are chatty.\n\nSo if you're a vanilla.js developer, you inevitably develop quite a bit of code to make your XMLHttpRequest calls handle the various ready states and other edge cases in a consistent manner.\n\nIf you *don't* do this, and just call XMLHttpRequst and only check for state 4, you're not a particularly *good* vanilla.js developer. I don't fault people for being young and green, though, so if I'm looking to hire a green developer and mentor them, I wouldn't ding them for this. But if they argued with me that it was unnecessary to write some good library to wrap XMLHttpRequest and still claimed to be a senior developer, I'd send them on their way.\n\nIf you're a *good* vanilla.js developer, you know what a better API for REST calls buys you. And if you've done more than one project as a good vanilla.js developer, you know that you're not going to be keeping that great REST wrapper framework you wrote in some magic tool chest that you bring with you to every project, because clients tend to hate stuff like that. \n\nAnd that's just one example; there are many others, because, frankly, the web platform is one of the worst/best out there.\n\nThe point is: if you're a *good* vanilla.js developer... you actually *want* to use libraries. \n\nBecause you know why they're useful. Now, maybe you have a strong opinion about why JQuery sucks or rocks, or why Angular is better than React or vice versa, but no matter what your opinion is on those frameworks, it's good that you have one (provided you've done more than a cursory glance at each), because that means you're investigating pros and cons -- because if you're a *good* vanilla.js developer, you already know that libraries and frameworks make your life easier by reducing the amount of code that you have to write and/or forcing you down a path toward a more extensible and maintainable application. ""}, {'Subreddit': 'Javascript', 'Reddit_Title': '""Of course Vanilla JS developers get no love."" Wait what?', 'CommentAuthor': 'senocular', 'Comment': ""Stop worrying. Stop ranting. Pick yourself up a side project you can work on in your free time that will help get some exposure to a framework or two, even if its just your standard TODO app.  Don't feel pressured to learn all the ins and outs, but at least get yourself familiar with how things work and be comfortable enough to talk about what one of these frameworks is like if anyone asks you.  A little effort can go a long way.""}, {'Subreddit': 'Javascript', 'Reddit_Title': '""Of course Vanilla JS developers get no love."" Wait what?', 'CommentAuthor': 'None', 'Comment': ""* Employers generally are looking to hire someone with experience. Most do not want to have to teach you.\n* There aren't many JS programmers out there who have been working for 5+ years who haven't used or at least been exposed to a library or framework.\n* A JS programmer with a reasonable amount of experience should be able to talk about a couple of libraries and why they used them. This demonstrates you are fairly current, can learn new ways of approaching problems and can act as a technology adviser when it comes to evaluating new technologies. You shouldn't be building stuff that already exists in some form, you should be able to research solutions - and only if they don't exist should you be building them from scratch.""}, {'Subreddit': 'Javascript', 'Reddit_Title': '""Of course Vanilla JS developers get no love."" Wait what?', 'CommentAuthor': 'mishugashu', 'Comment': 'You\'re definitely going to encounter a framework sooner or later. But, if you\'re really good with ""vanilla JS,"" it shouldn\'t really matter you don\'t know a framework. You\'ll learn it quickly. Being a good developer will get your further than knowing a bunch of frameworks. Already knowing the framework just gives you a better shot; not knowing it doesn\'t disqualify you.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '""Of course Vanilla JS developers get no love."" Wait what?', 'CommentAuthor': 'neb636', 'Comment': 'Think like a programmer. This problem is you want a new job and most employers want a person with some experience with a framework. Pretty easy problem to solve. Choose a small project and use a framework for it. Put that project up on github. During the interview say you know a framework and also have deep understanding of the language that framework was written in. Win Win!'}, {'Subreddit': 'Javascript', 'Reddit_Title': '""Of course Vanilla JS developers get no love."" Wait what?', 'CommentAuthor': 'pkstn', 'Comment': ""I believe almost every JS framework exists because people want to make JavaScript look/work more like language x.\n\nFor example I just read the other day that Facebook developers made JSX because they wanted JS to be more like PHP. I don't know Ruby, but I think express.js is based on Sinatra, which is related to Ruby somehow. For Java people there's Scala.js. I'm sure there's a lot of other examples as well.\n\nSo when a company is choosing which framework to use (or whether not to use), it depends on the developers' backgrounds. For example I have a strong Flash background, so I love writing as plain EcmaScript as possible. PHP backgrounded people might choose React instead, etc etc..""}, {'Subreddit': 'Javascript', 'Reddit_Title': '""Of course Vanilla JS developers get no love."" Wait what?', 'CommentAuthor': 'Cody_Chaos', 'Comment': '> And then someone says, of course vanilla JS developers get no love, who really is asking for JS developers without expecting them to know a framework or two? I would hate it if that\'s the reality.\n\nI could care less about a developer knowing the frameworks we use.  But a developer who doesn\'t know **any** frameworks raises some serious red flags, because, well...\n\n...why not?  There aren\'t a lot of good reasons why someone wouldn\'t know a single framework.\n\n> nor do we use any of the popular front end ones like Ember or Angular. The company rolled almost everything on their own\n\nGreat, so you know your companies own internal framework?  No problem, but be expected to be asked a couple questions about how it compares to some of the popular frameworks like Ember or Angular.  And I would absolutely expect you to have enough experience with one of those to answer that question intelligently (but come on, that\'s going to take maybe one weekend playing around with it, tops).\n\nWhen I got hired for my most recent job, I had a lot of experience with Knockout, and the company had a lot of Backbone and jQuery soup, and the position was to start development on some new React code.  Nobody at the table actually knew React, but we talked a lot about issues I\'d had with Knockout, and some of the issues they\'d had with Backbone, and we excitedly talked about some of the benefits we expected with the new React code.  The fact that I had zero React experience, and almost zero Backbone experience meant nothing, because I had a lot of JS experience, and enough knowledge of React and Backbone to hold an intelligent conversation.\n\n> Well, almost other companies seem to say, tough nails, you either know a framework well or we don\'t want you. \n\nNo, it\'s more like ""you need to be a skilled JS coder and *capable* of learning whatever frameworks we use internally"".  Saying ""yeah, I have 3 years experience writing Ember apps"" is one way of showing that you can learn whatever stack the new company might use, but it\'s not the only way.\n\nOn the other hand saying ""no, I don\'t believe in frameworks; jQuery soup is all you need!"" is a great way to not get any callbacks, ever.  But there\'s a big difference between the two.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '""Of course Vanilla JS developers get no love."" Wait what?', 'CommentAuthor': 'ridicalis', 'Comment': ""If framework experience was the only thing that counted, I would never have picked up my current job (frontend developer using a mixture of Backbone and React with a whole panoply of other technologies in between).  I came in with none of that framework experience (I did know Angular, which is all but blacklisted at my current workplace).\n\nWhat I did come in with, however, was competent knowledge of vanilla JS and programming in general, as well as foundational knowledge of HTML/CSS and strong devops capabilities.  Thankfully, this is a company that sees opportunity as worth more than compartmentalized knowledge.  Woe be to the company who passes on a talented developer for a long-term position simply because they want short-term gains.\n\nUnfortunately, it does seem like you have to be a seasoned Framework X developer these days to impress the hiring folks.  The worst part is, these frameworks come and go, and you're left holding a dead or dying technology in your resume a few years later that won't help you land the next such job.""}, {'Subreddit': 'Javascript', 'Reddit_Title': '""Of course Vanilla JS developers get no love."" Wait what?', 'CommentAuthor': 'dkbot', 'Comment': ""I think that learning JS to start with, rather than jumping straight into a framework is the right choice. Frameworks come and go but at the end of the day they are always built ontop of JS. You also can never get away from JS within frameworks usually. That being said, as you have noticed there is a big demand for frameworks, I tend to monitor the job market and up skill myself to the most popular roles available. It's funny to see how Angular was requested in a huge percentage of jobs but even that is changing now to a fairly even split between angular and react.""}]"
Javascript,Discovered a unpublicized API -- question about security in a line of code I found,https://www.reddit.com/r/javascript/comments/3akyh7/discovered_a_unpublicized_api_question_about/,13,20,webdevbrian,1434864843.0,"Pretty sure I found a few security holes in a major provider's home automation hub but just want clarification. I'm extremely excited about it because if I can get this working / build a node module out of it, I just might cry with excitement.

(I'm trying to write documentation on their API that they apparently didn't broadcast to the public yet and I just stumbled on it and want to document the hell out of it, they have a web app and it's built in angular) -- ran across this and thought that base64 by itself is still clear text ...

    e.open(d.getBaseUrl() + ""/nest/oauth/connect?ac="" + encodeURIComponent(a.authCode) + ""&br="" + h.CUSTOMER_ID)

They do the same thing with account passwords -- is this secure?

Also related -- any one have a few good tips on capturing / sniffing API requests? E.g. finding out every event from a web app you're using. Haven't gone about doing that as of yet and figured I'd ask the question.

Thanks!","[{'Subreddit': 'Javascript', 'Reddit_Title': 'Discovered a unpublicized API -- question about security in a line of code I found', 'CommentAuthor': 'huntsvillian', 'Comment': ""If you're only looking for requests that go across the wire you've got the standard developer tools Network tab (which is ok). I tend to go with Fiddler2 however. If you want to get all crazy, wireshark is probably the top o' the line.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Discovered a unpublicized API -- question about security in a line of code I found', 'CommentAuthor': 'dirtiethirtie', 'Comment': ""As long as the request is made over HTTPS, then yes it's still secure.\n\nHere's a link explaining more: http://answers.google.com/answers/threadview/id/758002.html#answer""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Discovered a unpublicized API -- question about security in a line of code I found', 'CommentAuthor': 'jonnyburger', 'Comment': 'You say base64, but there is none in your code. Do you maybe confuse d.getBaseUrl() with base64?'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Discovered a unpublicized API -- question about security in a line of code I found', 'CommentAuthor': 'Allstark', 'Comment': ""If we're talking about HTTP/HTTPS requests, take a look at Charles, it's basically a proxy that can intercept any HTTP based requests. You can even set breakpoints and manipulate data to play around with certain values, which can be useful for reverse engineering an API.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Discovered a unpublicized API -- question about security in a line of code I found', 'CommentAuthor': 'ondreian', 'Comment': ""If they are sending plaintext account passwords then it is not secure, doesn't matter if your using SSL or TLS.\n\nOne would also hope that the authCode is a single use token, which you can probably verify with a bit of sniffing.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Discovered a unpublicized API -- question about security in a line of code I found', 'CommentAuthor': 'AOEIU', 'Comment': ""It's not fully secure. URLs are stored in websever logs, which means that here the passwords are getting stored in plain text on the server. The fix for this problem is to use POST parameters.\n\nhttp://blog.httpwatch.com/2009/02/20/how-secure-are-query-strings-over-https/""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Discovered a unpublicized API -- question about security in a line of code I found', 'CommentAuthor': 'xumx', 'Comment': 'Looks secure to me. '}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Discovered a unpublicized API -- question about security in a line of code I found', 'CommentAuthor': 'frambot', 'Comment': ""I also recommend Charles Proxy. It's a little easier to figure out than Wireshark.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Discovered a unpublicized API -- question about security in a line of code I found', 'CommentAuthor': 'a-t-k', 'Comment': 'Minor correction: as long as the request is made over a secure SSL connection... that means sufficient key length, incorruptible CAs and no man in the middle attack.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Discovered a unpublicized API -- question about security in a line of code I found', 'CommentAuthor': 'wittnl', 'Comment': ""Even with HTTPS, applications shouldn't be passing secure data on the URL https://blog.httpwatch.com/2009/02/20/how-secure-are-query-strings-over-https/""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Discovered a unpublicized API -- question about security in a line of code I found', 'CommentAuthor': 'webdevbrian', 'Comment': 'Totally did - sorry. It was 2:15AM.'}]"
Javascript,[AskJS] What React UI library would you use while building an MVP?,https://www.reddit.com/r/javascript/comments/il982g/askjs_what_react_ui_library_would_you_use_while/,13,17,OneMinutePastOne,1599061478.0,"What UI library would you say would work best when creating a React web app for a startup MVP? 

In terms of speed of development, ease of use, collaboration and overall features....","[{'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What React UI library would you use while building an MVP?', 'CommentAuthor': 'TheCommentAppraiser', 'Comment': 'Chakra-UI has been fantastic! If you have more pointed questions, I‚Äôd be happy to answer.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What React UI library would you use while building an MVP?', 'CommentAuthor': 'Ok_Secretary_9659', 'Comment': 'Material UI'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What React UI library would you use while building an MVP?', 'CommentAuthor': 'michaelpb', 'Comment': 'What are you trying to build? I think that\'s a very important question, since not every app has the same UI requirements.\n\nPersonally I wouldn\'t first search for out-of-the-box ""React widgets"", instead I\'d search for CSS frameworks in general and then just make my own widgets, since most widgets are like 90% CSS and very little or no application logic.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What React UI library would you use while building an MVP?', 'CommentAuthor': 'kijour', 'Comment': ""I like a few of them, BootStrap, Material and lately FluentUI. Most offer the same components (buttons, tabs, forms, etc...) I'd go with what you prefer aesthetically?""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What React UI library would you use while building an MVP?', 'CommentAuthor': 'ddavid22', 'Comment': 'Orbit: [https://orbit.kiwi](https://orbit.kiwi/)\n\nStorybook page to demo all available components: [https://kiwicom.github.io/orbit](https://kiwicom.github.io/orbit)'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What React UI library would you use while building an MVP?', 'CommentAuthor': 'phailhaus', 'Comment': ""Check out Blueprintjs! I've had a lot of success using it to quickly build effective UIs. It also supports some really useful UI patterns like `NonIdealState` that I now include in any interface I build.""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What React UI library would you use while building an MVP?', 'CommentAuthor': 'None', 'Comment': 'What is MVP?'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What React UI library would you use while building an MVP?', 'CommentAuthor': '____marcell', 'Comment': 'Do you means components ? or do you mean css styling, I would probably not used made components, Just my own components and tailwind'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What React UI library would you use while building an MVP?', 'CommentAuthor': 'Bogus_dogus', 'Comment': ""Personally, I wouldn't. I'm definitely guilty of a rebuilding the wheel kind of mindset but I can't tell you how much time I've wasted trying to bend a component to my needs when I suddenly need it to do something slightly different that its API is not set up to accommodate.\n\nThat may come down to experience though; i know how to build every basic flexibly and good design will follow a consistent contract with a few variants so for me, I get better mileage out of building my own.\n\nThings like windowing, animated grids, that kind of thing, I'll reach for a library because they're complicated and require a lot of specialized effort to pull off in a performant manner. But yeah generally, I'm gonna build my own components and skip the hassle of rounding off the corners in a square peg round hole type of situation 90% of the time.""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What React UI library would you use while building an MVP?', 'CommentAuthor': 'OneMinutePastOne', 'Comment': 'Thanks! I‚Äôve never heard of Chakra UI. How does it compare to Material UI? And does it have a grid system that would be easy to use like in bootstrap?'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What React UI library would you use while building an MVP?', 'CommentAuthor': 'cerlestes', 'Comment': ""Upvote for using a pure CSS framework for clickthrough dummies, but also later in the finished product. At work we tend to build our own custom library of components for every project. It's not much to type out the few basic components (like Buttons, Modals, ...) and I find it much better for longer lived projects. Using an external UI components library means you give up control over a big part of your frontend code base, and in my experience that tends to be a big negative point for bigger projects because at some point this will force you to implement workarounds or copies of some components. Managing just one purely own component library elliminates this problem completely as you can just change the code directly, but of course comes with other problems (getting some UI stuff like accessibility right can be really hard).""}]"
Javascript,Do you want to make an impact to improve the way App development works? The opensource neomjs UI framework project is looking for more contributors.,https://github.com/neomjs/neo,104,38,TobiasUhlig,1593857382.0,,"[{'Subreddit': 'Javascript', 'Reddit_Title': 'Do you want to make an impact to improve the way App development works? The opensource neomjs UI framework project is looking for more contributors.', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Do you want to make an impact to improve the way App development works? The opensource neomjs UI framework project is looking for more contributors.', 'CommentAuthor': 'None', 'Comment': ""Tbh something that would actually improve app development would be a bundler that doesn't take minutes to compile my code.\nIt's pathetic how slow our tools are and how okay we are with it.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Do you want to make an impact to improve the way App development works? The opensource neomjs UI framework project is looking for more contributors.', 'CommentAuthor': 'None', 'Comment': '[removed]'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Do you want to make an impact to improve the way App development works? The opensource neomjs UI framework project is looking for more contributors.', 'CommentAuthor': 'TobiasUhlig', 'Comment': 'There are a lot more items on the todo list and it might take a while until I finish them all as a one man show.\n\nTo name a few:\n\n1. Finishing the new project website (my current focus to improve the project visibility => adding support for mobile devices)\n2. Enhancing the webpack based build processes to support SharedWorkers in Firefox\n3. Adding support for touch events (similar to hammer js)\n4. Enhancing the data package => support for buffered stores\n5. Creating a buffered grid\n6. Adding support for drag & drop\n7. Once DD is ready, adding support for in App dialogs\n8. Enhancing the workers setup so that threads can optionally run inside nodejs\n9. more components\n10. more themes\n\nSince I assume that most of you have not used or taken a deeper look into the neo code base: getting up to speed is fairly easy. There are 2 tutorials in place to re-create the multithreading Covid Dashboard App. Finishing both will take around 4-6h, including complex components like the Helix and 3d gallery.\n\nAfter finishing them both, you should be able to create blazing fast Apps on your own and you could start working on the framework code base as well, in case you like to. I would definitely recommend to start with something easy (e.g. creating a new Component). Feel free to jump into the Slack Channel.\n\nBest regards,  \nTobias'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Do you want to make an impact to improve the way App development works? The opensource neomjs UI framework project is looking for more contributors.', 'CommentAuthor': 'None', 'Comment': 'Great Work there !   \nSo, here we go :D'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Do you want to make an impact to improve the way App development works? The opensource neomjs UI framework project is looking for more contributors.', 'CommentAuthor': 'AffectionateWork8', 'Comment': ""I've seen this on here before, looks interesting, I have a couple questions\n\n1. What performance benefit is there in VDOM and store in separate thread? It seems like the actual work performed by the main thread would be the same as if someone were using Solid or lit-html, but with the added latency from message passing. Likewise with data store- I can see why one would want to shift expensive tasks to a worker, but I can't imagine why one would want the store (which by definition, needs to be in sync with UI to update) on a separate thread. \n2. Any benchmarks comparing to React, Polymer in different scenarios? There are lots of libs out there, but this might help people consider whether or not neo is something they would like to evaluate.\n3. Assuming you don't know 100% whether a browser supports workers (or maybe it supports workers but not shared workers)- what approach do you take when building and consuming a module that might potentially have to work in different contexts?""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Do you want to make an impact to improve the way App development works? The opensource neomjs UI framework project is looking for more contributors.', 'CommentAuthor': 'TobiasUhlig', 'Comment': 'Getting closer with the first responsive neo app:\n\n[https://www.youtube.com/watch?v=aVHvvbsMQGA](https://www.youtube.com/watch?v=aVHvvbsMQGA)'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Do you want to make an impact to improve the way App development works? The opensource neomjs UI framework project is looking for more contributors.', 'CommentAuthor': 'OlivaJohn', 'Comment': 'Yes creating an impact is the ultimate goal. Your user journey is the most concerning point'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Do you want to make an impact to improve the way App development works? The opensource neomjs UI framework project is looking for more contributors.', 'CommentAuthor': 'Nizam18', 'Comment': 'Mobile application development companies are still utilized by top brands. As a full-stack [app development company](https://www.hakunamatatatech.com/our-services/mobile-app-development/), Hakuna Matata Solutions offer unique enterprise mobile app development services to all brands. we will ensure the app is delivered on-time and ensure the app contributes towards your enterprise‚Äôs process efficiency, productivity, and growth.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Do you want to make an impact to improve the way App development works? The opensource neomjs UI framework project is looking for more contributors.', 'CommentAuthor': 'TobiasUhlig', 'Comment': 'I am open minded. If someone wants to add something like templates on top of it, you are welcome to do so. The only requirement is that it has to be optional.\n\nOne edge case example are SPAs which get expanded into multiple browser windows. Friends link:\n\nhttps://medium.com/swlh/expanding-single-page-apps-into-multiple-browser-windows-e6d9bd155d59?source=friends_link&sk=bbfe1dada95c5674669e463f93360822\n\nyou can move entire component trees around browser windows, while keeping the same JS instances. This is imo the biggest problem with template driven frameworks: you drop a named tag into the xml tree => the lib creates a matching JS instance. You remove the tag => the lib destroys the instance. Re-using JS Component instances is not easy. From my experience working on massive Apps, destroying Components tend to create memory leaks, which are avoidable.\n\nAfter just moving the vdom tree, all dom events will still work out of the box. This is only possible since dom events are de-coupled right from the start. It might be possible to achieve this with other libs / frameworks, but i think it would be extremely complicated.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Do you want to make an impact to improve the way App development works? The opensource neomjs UI framework project is looking for more contributors.', 'CommentAuthor': 'Psyqological', 'Comment': 'Take a look at esbuild.'}]"
Javascript,"[AskJS] What % of you use UI component frameworks like bootstrap, blueprint, material UI vs write your own?",https://www.reddit.com/r/javascript/comments/dirsky/askjs_what_of_you_use_ui_component_frameworks/,2,16,brainhack3r,1571243530.0,"I'm curious what % of you guys use a UI component framework vs write your own.

I'll create comments below for votes and you can upvote accordingly.

I know Superhuman uses their own. Some people use React Native which is sort of its own component framework.

Some companies like Tesla / Palantir write their own and then OSS it ... but that's essentially them writing their own.

I ask because we're a small team but constantly running into UI toolkits that look sweet but once we try to implement them them don't work very well.

It would be SWEET to use one that has tree controls, dark mode, works well on mobile, etc. I just haven't found one yet.","[{'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What % of you use UI component frameworks like bootstrap, blueprint, material UI vs write your own?', 'CommentAuthor': 'brainhack3r', 'Comment': 'Vote.  We do not use a framework.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What % of you use UI component frameworks like bootstrap, blueprint, material UI vs write your own?', 'CommentAuthor': 'ShortFuse', 'Comment': 'The definition of framework is rather loose though. And throwing in React Native into the mix shakes it up a bit.\n\nI worked on the Angular Material (JS) team. The project itself can be considered a framework. But it also runs on Angular JS which is also a framework.\n\nMaterial-UI is another framework that runs on the React framework.\n\nThe new Angular Material framework is based on Angular 2+. That\'s a framework built on the Angular 2 framework.\n\nAnd there\'s the new Material Components framework which is transcompiled from Typescript.\n\nI mention all this because, personally, I used to use Angular Material (JS), and then Ionic, (React-Native), and then finally wrote [my own framework](https://github.com/clshortfuse/materialdesignweb) that\'s pure JS, no dependencies, and a hard focus on accessibility (ARIA, keyboard support, text-scaling). I guess that would fit on a ""We don\'t use a framework?"".'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What % of you use UI component frameworks like bootstrap, blueprint, material UI vs write your own?', 'CommentAuthor': 'brainhack3r', 'Comment': 'Vote.  We use a framework (post the framework you use below).'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What % of you use UI component frameworks like bootstrap, blueprint, material UI vs write your own?', 'CommentAuthor': 'None', 'Comment': 'The problem with component libraries is the APIs suck (because they are painful to write). Anyone else agree?'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What % of you use UI component frameworks like bootstrap, blueprint, material UI vs write your own?', 'CommentAuthor': 'ryan_solid', 'Comment': 'Not clear what classifies as a Framework here. We use JavaScript Libraries/Frameworks like React etc.. but never use things like Material UI or Bootstrap. We use the libraries to make our own CSS, and UI Components.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What % of you use UI component frameworks like bootstrap, blueprint, material UI vs write your own?', 'CommentAuthor': 'sipvellocet', 'Comment': 'It really depends on the type of project. When developing SPA‚Äôs I use BSS and write my own styles, BSS is a small beautiful project that a lot of Mithril.js developers use and leverage. \n\nFor static sites like the ones I build with Jekyll (for example) I‚Äôll most likely leverage Bootstrap Grid but will remove any additional shit I don‚Äôt need which basically renders it down to a few kb - I choose this approach because static site builds are best suited for those local business projects who are coming from Wordpress to JAMstack which makes it easy for future developers or other non-technical folk to maintain.\n\nFor Ruby/PHP/Elixir builds that are server generated projects built with Laravel / Rails / Phoenix etc I will generally call upon Tailwind for them which just feels fitting, I think the syntax approach is fitting.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What % of you use UI component frameworks like bootstrap, blueprint, material UI vs write your own?', 'CommentAuthor': 'rlahoda', 'Comment': ""I try to stay away from frameworks because so much of modern CSS is able to do things that frameworks were built for. CSS Grid, Flexbox, SVG images, all make life a lot easier. Also you don't get stuck into a specific way of organizing your code or styles to make a framework. Whenever I've done work in frameworks, primarily bootstrap, I've ended up writing a lot of overrides and trying to out-specify something so that I can get around !important declarations.""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What % of you use UI component frameworks like bootstrap, blueprint, material UI vs write your own?', 'CommentAuthor': 'dwighthouse', 'Comment': 'Used to use an augmented Bootstrap, but now pretty much do it myself. Making A small number of  robust and generalized css components allows the creation of good higher level components to be very easy.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What % of you use UI component frameworks like bootstrap, blueprint, material UI vs write your own?', 'CommentAuthor': 'None', 'Comment': 'I never really used any framework. I do use Tailwind now though, because I enjoy it much more than writing regular CSS.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What % of you use UI component frameworks like bootstrap, blueprint, material UI vs write your own?', 'CommentAuthor': 'swinaallen', 'Comment': 'I use tailwindcss and i write my own components. Tried different frameworks but when you need to adapt them for customer needs requires more time then write by yourself.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] What % of you use UI component frameworks like bootstrap, blueprint, material UI vs write your own?', 'CommentAuthor': 'None', 'Comment': 'Terrible way to vote, I can both upvote ""no"" and downvote ""yes"", or just do one, or both.  \n\n\nCreate a real poll'}]"
Javascript,"First look at a creative JavaScript studio we're working on. Featuring hot reloading, UI controls for variables, shareable code blocks that link to form programs. Ideal for experiments, data vis/exploration, quick hacks, React component dev. Shown here with ported generative art by beesandbombs.",https://twitter.com/_MattWay/status/1070965320393707520,78,15,GusRuss89,1544227117.0,,"[{'Subreddit': 'Javascript', 'Reddit_Title': ""First look at a creative JavaScript studio we're working on. Featuring hot reloading, UI controls for variables, shareable code blocks that link to form programs. Ideal for experiments, data vis/exploration, quick hacks, React component dev. Shown here with ported generative art by beesandbombs."", 'CommentAuthor': 'shmuusli', 'Comment': 'That looks insane! Great work'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""First look at a creative JavaScript studio we're working on. Featuring hot reloading, UI controls for variables, shareable code blocks that link to form programs. Ideal for experiments, data vis/exploration, quick hacks, React component dev. Shown here with ported generative art by beesandbombs."", 'CommentAuthor': 'icyphx', 'Comment': 'This is really cool'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""First look at a creative JavaScript studio we're working on. Featuring hot reloading, UI controls for variables, shareable code blocks that link to form programs. Ideal for experiments, data vis/exploration, quick hacks, React component dev. Shown here with ported generative art by beesandbombs."", 'CommentAuthor': 'PortablePawnShop', 'Comment': 'u/davebees :D'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""First look at a creative JavaScript studio we're working on. Featuring hot reloading, UI controls for variables, shareable code blocks that link to form programs. Ideal for experiments, data vis/exploration, quick hacks, React component dev. Shown here with ported generative art by beesandbombs."", 'CommentAuthor': 'tchaffee', 'Comment': 'Looks great. How about putting it in front of some beta uses to get feedback? Ship early and often and let your customers guide you, right?'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""First look at a creative JavaScript studio we're working on. Featuring hot reloading, UI controls for variables, shareable code blocks that link to form programs. Ideal for experiments, data vis/exploration, quick hacks, React component dev. Shown here with ported generative art by beesandbombs."", 'CommentAuthor': 'kuenx', 'Comment': 'Reminds me of LightTable'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""First look at a creative JavaScript studio we're working on. Featuring hot reloading, UI controls for variables, shareable code blocks that link to form programs. Ideal for experiments, data vis/exploration, quick hacks, React component dev. Shown here with ported generative art by beesandbombs."", 'CommentAuthor': 'rift95', 'Comment': 'RemindMe! 8 weeks ""Is this out yet?""'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""First look at a creative JavaScript studio we're working on. Featuring hot reloading, UI controls for variables, shareable code blocks that link to form programs. Ideal for experiments, data vis/exploration, quick hacks, React component dev. Shown here with ported generative art by beesandbombs."", 'CommentAuthor': 'wthit56', 'Comment': 'Would it work for hot reloading webaudio type stuff?'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""First look at a creative JavaScript studio we're working on. Featuring hot reloading, UI controls for variables, shareable code blocks that link to form programs. Ideal for experiments, data vis/exploration, quick hacks, React component dev. Shown here with ported generative art by beesandbombs."", 'CommentAuthor': 'deltadeep', 'Comment': ""Looks amazing! Any way to keep us posted outside of Twitter? For mental health reasons, I can't be glued to it.""}, {'Subreddit': 'Javascript', 'Reddit_Title': ""First look at a creative JavaScript studio we're working on. Featuring hot reloading, UI controls for variables, shareable code blocks that link to form programs. Ideal for experiments, data vis/exploration, quick hacks, React component dev. Shown here with ported generative art by beesandbombs."", 'CommentAuthor': 'GusRuss89', 'Comment': ""That's the plan. Would you like to be one of them? Pm me :)""}, {'Subreddit': 'Javascript', 'Reddit_Title': ""First look at a creative JavaScript studio we're working on. Featuring hot reloading, UI controls for variables, shareable code blocks that link to form programs. Ideal for experiments, data vis/exploration, quick hacks, React component dev. Shown here with ported generative art by beesandbombs."", 'CommentAuthor': 'RemindMeBot', 'Comment': ""I will be messaging you on [**2019-02-02 12:32:02 UTC**](http://www.wolframalpha.com/input/?i=2019-02-02 12:32:02 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/javascript/comments/a45n9v/first_look_at_a_creative_javascript_studio_were/)\n\n[**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=[https://www.reddit.com/r/javascript/comments/a45n9v/first_look_at_a_creative_javascript_studio_were/]%0A%0ARemindMe!  8 weeks ) to send a PM to also be reminded and to reduce spam.\n\n^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete Comment&message=Delete! ebcomhx)\n\n_____\n\n|[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&subject=List Of Reminders&message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/)\n|-|-|-|-|-|-|""}, {'Subreddit': 'Javascript', 'Reddit_Title': ""First look at a creative JavaScript studio we're working on. Featuring hot reloading, UI controls for variables, shareable code blocks that link to form programs. Ideal for experiments, data vis/exploration, quick hacks, React component dev. Shown here with ported generative art by beesandbombs."", 'CommentAuthor': 'GusRuss89', 'Comment': ""Yes!\n\nI'm not sure if this is exactly what you mean, but we also have a demo where the webcam is on and all the blocks are filters (like edge detection or hue), and we can play with them, reorder them to manipulate the video output etc all while the video is still running.""}]"
Javascript,What is you favorite UI framework for React?,https://www.reddit.com/r/javascript/comments/7qrcas/what_is_you_favorite_ui_framework_for_react/,196,115,cryptos6,1516097032.0,"There are [lots of UI frameworks for React](https://ourcodeworld.com/articles/read/497/top-10-best-ui-frameworks-for-reactjs) like Material Design, Fabric, Semantic UI and the likes. I wonder which one to choose. It is, of course, partly a matter of taste, but there are still other aspects like completeness of the component library, third-party dependencies (like jQuery in some cases), extensibility, suitability for mobile devices and so on. 

What is your favorite framework and why? What works and what not so much?","[{'Subreddit': 'Javascript', 'Reddit_Title': 'What is you favorite UI framework for React?', 'CommentAuthor': 'so_just', 'Comment': '[Semantic UI.](https://react.semantic-ui.com/introduction) It really is underappreciated.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'What is you favorite UI framework for React?', 'CommentAuthor': 'drcmda', 'Comment': ""[Ant](https://ant.design/docs/react/introduce) is pretty nice. It's made by Aliplay/Alibaba. Used by some big names (Alibaba, Baidu, Tencent, ...), lots of components, modular, small size, and component based. They have a [mobile version](https://mobile.ant.design/docs/react/introduce) as well.\n\nThere are some others that are component based, for instance [Microsofts Fabric](https://developer.microsoft.com/en-us/fabric#/components), [Palantirs Blueprint](http://blueprintjs.com/), [Rebass](http://jxnblk.com/rebass/), [Grommet](http://grommet.io/docs/components). Haven't had a good experience with css wrappers like Semantic and Bootstrap. They're driven by global css rules which conflict with the component model. Like, you can only put A into B, but only at the end, if you put it elsewhere or dare to add C it collapses. These hidden rules made it tiresome to work with.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'What is you favorite UI framework for React?', 'CommentAuthor': 'rodrigocfd', 'Comment': 'I built my last two projects (corporate systems) with [Material UI](http://www.material-ui.com). Not perfect, but the one I liked most. I used [Custom React Scripts](https://github.com/kitze/custom-react-scripts) to CSS Modules support, to have scoped CSS too. Very important.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'What is you favorite UI framework for React?', 'CommentAuthor': 'None', 'Comment': 'I‚Äôve used Semantic UI on a few projects. Compared to other UI frameworks in React, Semantic has a LOT of customizations for its various components\n\nI‚Äôve also used Material in the past. While it looks cool and Googlely, the UI design language itself is actually counter intuitive if you‚Äôre building a larger application that requires more finite controls. Material‚Äôs good if you‚Äôre building a small to medium size app with limited functionality. '}, {'Subreddit': 'Javascript', 'Reddit_Title': 'What is you favorite UI framework for React?', 'CommentAuthor': 'kaizenie', 'Comment': ""I prefer ReactStrap, it's very simple to use, supports Bootstrap 4x and is well maintained""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'What is you favorite UI framework for React?', 'CommentAuthor': 'trifit555', 'Comment': ""I'm confused, I'm new to the react world, are UI frameworks like css frameworks? Like bootstrap but for react?""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'What is you favorite UI framework for React?', 'CommentAuthor': 'jasdeep13', 'Comment': 'BlueprintJS and Antd - Undoubtedly the best ones.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'What is you favorite UI framework for React?', 'CommentAuthor': 'djslakor', 'Comment': ""We use react-bootstrap on a pretty big ERP project at work.  It's simple to use and pretty easy to transfer BS 3.x skills over.  There's another project called react-strap based on BS 4.x, which has been sortof a moving target.  Who knows when they'll ever release BS 4.x non-beta.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'What is you favorite UI framework for React?', 'CommentAuthor': 'deltadeep', 'Comment': ""Please don't forget to consider accessibility support in your decision.\n\nLots of people are suggesting Semantic UI here but I've found that to have very poor support for a11y. We use React Bootstrap, which isn't quite as visually flexible as Semantic UI, but it does include a11y in its core feature set which is otherwise a non-starter IMO.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'What is you favorite UI framework for React?', 'CommentAuthor': 'ayush15', 'Comment': 'Customizing material-ui 0.x was painful and irritating. However working with 1.x is been pleasing while dealing with small-medium size app. It also provides decent look on mobile screens.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'What is you favorite UI framework for React?', 'CommentAuthor': 'Jumballaya', 'Comment': '[Ant Design](https://ant.design/) -- Great look and feel and easy to use components.'}]"
Javascript,English docs for Element - A UI library for VueJS are online now,https://www.reddit.com/r/javascript/comments/5d99m4/english_docs_for_element_a_ui_library_for_vuejs/,113,18,leopoldthecuber,1479304217.0,"We are the FE team of a Chinese company. You may have seen us in [this article](https://medium.com/the-vue-point/vue-2-0-is-here-ef1f26acf4b8#.34gy7lpsa), when Evan You pointed out ‚Äúa complete desktop UI component library with Vue 2.0‚Äù is available.


Yes, we are the team behind that library.


**Introducing Element**


Homepage: http://element.eleme.io/#/en-US
GitHub: https://github.com/ElemeFE/element


Element is a desktop UI library based on Vue.js 2.0. It provides dozens of components for you to build desktop websites.


Some of you may have heard of Element, or even used it in your project. For those who haven't, we made a [video](https://www.youtube.com/watch?v=Ncej30yypXc) about Element over a month ago (back then the English docs are not ready yet), you may learn a thing or two about it. For a comprehensive understanding, please visit our homepage above.


**English Docs**


We started developing Element back in June, and its first public release took place in September. Since then, the community has been asking for English documentations. Well, your voices are heard. Today, together with version 1.0.1, we officially published Element's English documentations.


About 50 days ago, a professional translation team reached out to us and volunteered to help translate all the docs to English. Thanks to their hard work, we are able to present English docs only one week after version 1.0.0.


**We Need You**


However, the English docs are forged by a group of Chinese after all. I believe you guys, as native English speakers, can still help us make the docs better. So feel free to contribute if you find the language we use in the docs any non-native.


And not just the docs. Element is still young and growing. We have plans to add more features and new components to it, and we hope the community can join this journey with us. A piece of advice, a bug report, a pull request, anything is welcome. Element cannot thrive without the community, so please don't hesitate to use it today!


Thank you in advance. We will see you in [element.eleme.io](http://element.eleme.io/#/en-US).
","[{'Subreddit': 'Javascript', 'Reddit_Title': 'English docs for Element - A UI library for VueJS are online now', 'CommentAuthor': 'OogieFrenchieBoogie', 'Comment': 'Vraiment clean, I love it '}, {'Subreddit': 'Javascript', 'Reddit_Title': 'English docs for Element - A UI library for VueJS are online now', 'CommentAuthor': 'nightman', 'Comment': ""I use it and love it. It's probably the best UI library for Vue - very good code quality, look and very active (my issue was solved in hours). \n\nGreat job! ""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'English docs for Element - A UI library for VueJS are online now', 'CommentAuthor': 'AceBacker', 'Comment': ""looks pretty good, I don't understand the layout grid though.  Does it have breakpoints?  Or do the columns just get shrunk no matter the screen size?""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'English docs for Element - A UI library for VueJS are online now', 'CommentAuthor': 'Biodiv', 'Comment': 'The page needs an editor.  I volunteer?  '}, {'Subreddit': 'Javascript', 'Reddit_Title': 'English docs for Element - A UI library for VueJS are online now', 'CommentAuthor': 'propelol', 'Comment': 'How is the browser compatibility? I tried using it on IE9 but some components looked broken. IE10 seemed to be fine. '}, {'Subreddit': 'Javascript', 'Reddit_Title': 'English docs for Element - A UI library for VueJS are online now', 'CommentAuthor': 'daniels0xff', 'Comment': 'Say waaaaat. This looks amazing. Good job.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'English docs for Element - A UI library for VueJS are online now', 'CommentAuthor': 'virophage', 'Comment': ""Thank you. Element looks cool. I'll try it. üòá\n\n// I want to learn Chinese but It isn't easy haha üòÇ ""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'English docs for Element - A UI library for VueJS are online now', 'CommentAuthor': 'aFoolsDuty', 'Comment': 'Looks awesome, guys. \n\nGood job!'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'English docs for Element - A UI library for VueJS are online now', 'CommentAuthor': 'DrakeLeung', 'Comment': 'cool, I really love it :)'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'English docs for Element - A UI library for VueJS are online now', 'CommentAuthor': 'elingeniero', 'Comment': 'Nice. Great job. '}, {'Subreddit': 'Javascript', 'Reddit_Title': 'English docs for Element - A UI library for VueJS are online now', 'CommentAuthor': 'meesloo', 'Comment': 'will keep an eye on this-- happy to review the docs when they are out:)'}]"
Javascript,"I am Masa Tanaka, PhoneGap/Cordova evangelist from Japan. I created Onsen UI & Monaca tools to make hybrid app development possible to anyone with basic HTML5 knowledge. We're just releasing a new version of open-source Onsen UI (2.0), and we think we're starting an app development revolution. AMA!",https://www.reddit.com/r/javascript/comments/52skm6/i_am_masa_tanaka_phonegapcordova_evangelist_from/,12,27,masa_tanaka,1473885244.0,"Hi, I‚Äôm Masa Tanaka, a long-time PhoneGap/Cordova developer and evangelist, CEO and founder of app development tools company.
We're just releasing Onsen UI 2.0, which is framework-agnostic, works well with both Angular 2 and React, supports both material and flat design (Android & iOS) and allows building hybrid apps with native look & feel: https://onsen.io/.
Let's talk beautiful and performant hybrid app development! Ask me anything!

Verification: Company blog profile - https://onsen.io/blog/masa/ PhoneGap Day speaker profile - http://pgday.phonegap.com/eu2016/speaker/masahirotanaka/

[UPDATE]
We've just released a [new Website and made a stable release](https://onsen.io/).","[{'Subreddit': 'Javascript', 'Reddit_Title': ""I am Masa Tanaka, PhoneGap/Cordova evangelist from Japan. I created Onsen UI & Monaca tools to make hybrid app development possible to anyone with basic HTML5 knowledge. We're just releasing a new version of open-source Onsen UI (2.0), and we think we're starting an app development revolution. AMA!"", 'CommentAuthor': 'jcasman', 'Comment': 'Also, how is Onsen different from Ionic?'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I am Masa Tanaka, PhoneGap/Cordova evangelist from Japan. I created Onsen UI & Monaca tools to make hybrid app development possible to anyone with basic HTML5 knowledge. We're just releasing a new version of open-source Onsen UI (2.0), and we think we're starting an app development revolution. AMA!"", 'CommentAuthor': 'jcasman', 'Comment': ""Can you tell me how Monaca and Onsen are related? Monaca's the backend services and Onsen is the front-end UI tools?\n""}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I am Masa Tanaka, PhoneGap/Cordova evangelist from Japan. I created Onsen UI & Monaca tools to make hybrid app development possible to anyone with basic HTML5 knowledge. We're just releasing a new version of open-source Onsen UI (2.0), and we think we're starting an app development revolution. AMA!"", 'CommentAuthor': 'jcasman', 'Comment': 'One last question: In my beginner JavaScript class this spring, I got used to using Sublime as my text editor. (Atom is pretty good, too.) Does Monaca/Onsen replace a text editor completely, or can I upload js files after I build them?'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I am Masa Tanaka, PhoneGap/Cordova evangelist from Japan. I created Onsen UI & Monaca tools to make hybrid app development possible to anyone with basic HTML5 knowledge. We're just releasing a new version of open-source Onsen UI (2.0), and we think we're starting an app development revolution. AMA!"", 'CommentAuthor': 'Rolexx', 'Comment': ""I've just started with cordova + Framework7 and I love it. What is your opinion on the future of hybrid app development?""}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I am Masa Tanaka, PhoneGap/Cordova evangelist from Japan. I created Onsen UI & Monaca tools to make hybrid app development possible to anyone with basic HTML5 knowledge. We're just releasing a new version of open-source Onsen UI (2.0), and we think we're starting an app development revolution. AMA!"", 'CommentAuthor': 'jcasman', 'Comment': 'Can you tell me the top 5 Onsen 2.0 templates in your opinion? (Please don\'t say ""it depends."") '}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I am Masa Tanaka, PhoneGap/Cordova evangelist from Japan. I created Onsen UI & Monaca tools to make hybrid app development possible to anyone with basic HTML5 knowledge. We're just releasing a new version of open-source Onsen UI (2.0), and we think we're starting an app development revolution. AMA!"", 'CommentAuthor': 'crysyx', 'Comment': 'i will like to develop a PWA using onsen ui and pure vanilla javascript, can you recommend some libraries or framework that help me to keep my app as pure vanilla js (es6) as posible, but with modern patterns?'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I am Masa Tanaka, PhoneGap/Cordova evangelist from Japan. I created Onsen UI & Monaca tools to make hybrid app development possible to anyone with basic HTML5 knowledge. We're just releasing a new version of open-source Onsen UI (2.0), and we think we're starting an app development revolution. AMA!"", 'CommentAuthor': 'fpaboim', 'Comment': ""Very nice to see a cordova UI library for react, I've been using angular1 because of ionic, I'll give onsen a try when I have some time. Good luck!""}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I am Masa Tanaka, PhoneGap/Cordova evangelist from Japan. I created Onsen UI & Monaca tools to make hybrid app development possible to anyone with basic HTML5 knowledge. We're just releasing a new version of open-source Onsen UI (2.0), and we think we're starting an app development revolution. AMA!"", 'CommentAuthor': '_don_pablito', 'Comment': 'Dont u think hybrid app development isunder an existential threat from react native and future javascript tools that will compile directly to native, providing better performance and device api access? Dont u think this will make cordova phonegap etc obsolete?'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I am Masa Tanaka, PhoneGap/Cordova evangelist from Japan. I created Onsen UI & Monaca tools to make hybrid app development possible to anyone with basic HTML5 knowledge. We're just releasing a new version of open-source Onsen UI (2.0), and we think we're starting an app development revolution. AMA!"", 'CommentAuthor': 'mx_Seattle', 'Comment': 'Sorry for coming in a bit late on this, but I know at your company you are a big supporter of intern programs for the development of future programmers.  How do you feel this has helped your company grow and how did you get started with this excellent program?\n\nEdit:  Also, where do you see the future growth for Monaca and Onsen?  Any things you can share that are on the roadmap for the next major release?\n'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I am Masa Tanaka, PhoneGap/Cordova evangelist from Japan. I created Onsen UI & Monaca tools to make hybrid app development possible to anyone with basic HTML5 knowledge. We're just releasing a new version of open-source Onsen UI (2.0), and we think we're starting an app development revolution. AMA!"", 'CommentAuthor': 'nightman', 'Comment': 'Hi, what is business model of Onsen UI? I should pay for using it? If I would start using it what product/services are money related?'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I am Masa Tanaka, PhoneGap/Cordova evangelist from Japan. I created Onsen UI & Monaca tools to make hybrid app development possible to anyone with basic HTML5 knowledge. We're just releasing a new version of open-source Onsen UI (2.0), and we think we're starting an app development revolution. AMA!"", 'CommentAuthor': 'masa_tanaka', 'Comment': ""Onsen UI is similar to Ionic since both are UI frameworks and targeting for mobile hybrid and web apps. However, Onsen UI 2 and Ionic are different in the way providing UI components.\n\nWe try to be JS framework agnostic, so Onsen UI is implemented using Web Components (Custom Elements). That makes us room to support many popular JS frameworks, including Angular 1, 2, React, Vue.js, jQuery and many others. Ionic supports Angular 2, which is one of the most popular frameworks for Cordova and the web.\n\nWe've seen many people using Onsen UI and actively contributing to the community these days. That's awesome, but we are not as famous as Ionic. I hope you give Onsen UI a try and see if it does good job for you.""}]"
Javascript,Flex guy looking for JavaScript framework for tying JSON data to a UI to edit it.,https://www.reddit.com/r/javascript/comments/jo0b9/flex_guy_looking_for_javascript_framework_for/,3,17,sharpfork,1313772413.0,"Howdy JavaScript Gurus-

Background:

I'm trying to write a simple browser app to display, reorganize, and edit data in a JSON file.  I am familiar with the Flex/Eclipse SDK but no longer have a licence.  This is for internal users so it doesn't have to be too pretty.  The output will likely be a text field the users can copy/paste unless there is some magic way to save the JSON to the desktop without a back end.  The JSON has a very specific format and structure and users just need to change a few values and add new items that have a very specific structure.

Where I am:

I can load and navigate a JSON template file using jQuery.  I tried messing around with jQuery UI and it seems like a shit ton of work for every little piece of data.

What I want:

Flex gives me some cool tools like data grids and other UI elements that are super easy to tie to the data object.  Is there anything (free) like this for JavaScript/ HTML?

Why:

I'm sick of hand coding JSON and want to give a handful of internal users the ability to do it on their own with a layer of business logic and validation that keeps them from doing dumb things.

Other stuff:

I know enough PHP to be dangerous and can use it if it will make this project easier to develop.

Thanks in advance!","[{'Subreddit': 'Javascript', 'Reddit_Title': 'Flex guy looking for JavaScript framework for tying JSON data to a UI to edit it.', 'CommentAuthor': 'None', 'Comment': 'Look into ExtJS http://www.sencha.com/products/extjs/'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Flex guy looking for JavaScript framework for tying JSON data to a UI to edit it.', 'CommentAuthor': 'shhQuiet', 'Comment': 'Check out backbone.js'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Flex guy looking for JavaScript framework for tying JSON data to a UI to edit it.', 'CommentAuthor': 'lennelpennel', 'Comment': 'maybe instead of coding something use this.\n\nhttp://jsonviewer.stack.hu/\n\n'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Flex guy looking for JavaScript framework for tying JSON data to a UI to edit it.', 'CommentAuthor': 'None', 'Comment': 'howdy there, \n\nfor your ui, something free and quite cool : \nhttp://ukijs.org/\n\nyou should also check out http://dojotoolkit.org/ since they have both cool ui library as well as core library\n\notherwise some good JS tools i would use: \nbackbone.js\nunderscore.js\njquery.js\njson2.js \n'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Flex guy looking for JavaScript framework for tying JSON data to a UI to edit it.', 'CommentAuthor': 'None', 'Comment': ""I assume flex is as3, if so, you'll feel right at home with MooTools. I'd say check it out. I ant the other way (mootools -> as3 with ease)""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Flex guy looking for JavaScript framework for tying JSON data to a UI to edit it.', 'CommentAuthor': 'klotz', 'Comment': 'This is what XForms was designed for.  \nXSLTForms (use the SVN version) includes JSON support, but not bidirectional.\n'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Flex guy looking for JavaScript framework for tying JSON data to a UI to edit it.', 'CommentAuthor': 'hexorx', 'Comment': 'I have been working on a micro framework called [tko.js](http://tkojs.com) that sounds close to what you are looking for. It binds a data layer, stored as JSON or backbone models, to HTML elements and keeps everything in sync. When used with backbone it gives you some nice bindings that make things like sortable lists fairly trivial. The site is in need of some love but the read me should give a good you a good start and I would be happy to answer any questions. It is being used on [shorttermhousing.com](http://shorttermhousing.com) and would l love to see how well it works for other projects and get some feedback.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Flex guy looking for JavaScript framework for tying JSON data to a UI to edit it.', 'CommentAuthor': 'Not_Edward_Bernays', 'Comment': ""See towards the bottom \n\nhttp://weblogs.asp.net/scottgu/archive/2010/05/07/jquery-templates-and-data-linking-and-microsoft-contributing-to-jquery.aspx\n\nAlso  http://dev.michaelrog.com/js/datalink/basic.html\n\nAlso for data grids you might consider slickgrid http://mleibman.github.com/SlickGrid/examples/example1-simple.html\n\nAlso if it doesn't really have to be JSON, there is http://ajaxcrud.com/""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Flex guy looking for JavaScript framework for tying JSON data to a UI to edit it.', 'CommentAuthor': 'davemo', 'Comment': ""Check out [knockoutjs](http://knockoutjs.com), it has a lot of the data binding capability you're talking about being able to support. Using the observables and observable arrays it wouldn't be too hard to rig something up that had an entire UI controlled via a JSON singleton.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Flex guy looking for JavaScript framework for tying JSON data to a UI to edit it.', 'CommentAuthor': 'fubarfubarfubar', 'Comment': ""> I tried messing around with jQuery UI and it seems like a shit ton of work for every little piece of data.\n\nHow exactly are you doing it then?  I'd have thought it'd be pretty straightforward to create text fields, selects, even jQueryUI elements on the page to edit each value.  Are you not using loops or functions???""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Flex guy looking for JavaScript framework for tying JSON data to a UI to edit it.', 'CommentAuthor': 'sharpfork', 'Comment': 'Holy crap, Thanks!  The Ext Designer (Co$t$)  is a lot like flex builder in eclipse.  I can prolly hand code what I need without the paid tool.\n\nI am going to explore using something kinda like this as a starting point:\n\nhttp://dev.sencha.com/deploy/ext-4.0.2a/examples/form/form-grid-access.html'}]"
Javascript,[AskJS] OOP and FP in Vue/frontend projects,https://www.reddit.com/r/javascript/comments/17zmxzi/askjs_oop_and_fp_in_vuefrontend_projects/,0,14,MirasMustimov,1700481561.0,"I have a question related to Javascript and Vue.

Imagine you need to have some ""domain"" logic or rather object specific logic.

In my case I need getters for user avatar (calculated based on user gender) and full name (calculated based on first and last name). So my natural thought process is that these pieces of logic should live as methods of User class. But when working with Vue there are some caveats that complicate using class objects which also have to be reactive. So I decided not to use the class based approach.

Now I have to decide where that logic should live.

These are the options I have considered:

1) create object speicifc helper functions like getUserAvatar(user). But I am really uncomfortable with the idea that functions know user specific logic. Because when methods know that logic it is ok because object and its methods are related. Whereas there is no relation between a helper function and an object.

2) put that logic into vue component. I can create UserAvatar vue component and make avatarUrl a computed property, and I like that idea, but cant do the same for fullName.

3) Ask backend devs to send users with avatar and full name precalculated, but this feels like just escaping a problem rather than finding a solution for it.

So I have a couple questions:

\- Where do you store your object specific logic in your frontend projects?

\- Is it ok in js/vue world to put methods like the ones I described above into functions? Hoping to hear some opinionated answers)","[{'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] OOP and FP in Vue/frontend projects', 'CommentAuthor': 'violetize-', 'Comment': 'Store it in the component if only used in one place. Otherwise, make it into a composable in another file (basically helper functions) so you can import it in multiple places. It is definitely fine to use helper functions as long as it is clear and well organized.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] OOP and FP in Vue/frontend projects', 'CommentAuthor': 'Long-Baseball-7575', 'Comment': '1 - Easily unit testable and it can be reused outside of components.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] OOP and FP in Vue/frontend projects', 'CommentAuthor': 'rk06', 'Comment': 'I would go with first one. \n\nIf I can decompose ""business"" logic, then I am doing it'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] OOP and FP in Vue/frontend projects', 'CommentAuthor': 'angrycat9000', 'Comment': 'Make a user avatar component.  You need a place to centralize the other logic related to displaying the avatar:  rounded corners vs sharp, acceptable sizes, alt text, etc.  Why clutter up the user object with an extra method that is only used by one component.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] OOP and FP in Vue/frontend projects', 'CommentAuthor': '---nom---', 'Comment': ""If it's changeable, put it into the database upon registration.""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] OOP and FP in Vue/frontend projects', 'CommentAuthor': 'dane_brdarski', 'Comment': 'You seem to be coming from a OOP background. Fullname should be a computed function, which you can extract into a helper function. The avatar can be a separate component, again computed property like you suggested. \n\nAdditionally, if you sre using Vue3 you could create a helper that generates states for first name and last name, and computed prop fullname, depending on your use case. That should be more of domain driven spirit of things?'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] OOP and FP in Vue/frontend projects', 'CommentAuthor': 'MirasMustimov', 'Comment': 'Thank you guys for your answers. Helpers seem like a valid option, just needed a little bit of mental shift to accept it. One more question though, would you care putting ""domain"" specific helpers in a separate folder away from your general purpose utils? By utils I mean simple functions like find item by key in array or isBlank kind of helper that checks if value is empty? If so what would you call that folder? Is there a convention for it?'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] OOP and FP in Vue/frontend projects', 'CommentAuthor': 'MirasMustimov', 'Comment': 'Thank you for your reply. I seems that it is more common to use functions over objects and methods in js rather than in some of the backend languages. I guess I should learn more about fp'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] OOP and FP in Vue/frontend projects', 'CommentAuthor': 'MirasMustimov', 'Comment': 'Thank you. That is a valid point. What do you think about the getFullName method? And objects specific methods in general'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] OOP and FP in Vue/frontend projects', 'CommentAuthor': 'MirasMustimov', 'Comment': 'I am using TS and thinking maybe collocating types and associated helepers could be a good idea, like having user related types and helpers live close to each other. But it looks like there is a convention to have ""types"" folder which stores types only.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] OOP and FP in Vue/frontend projects', 'CommentAuthor': 'Long-Baseball-7575', 'Comment': 'Yes. I make a ‚Äúcore‚Äù folder that has its own services, utils, components, etc. \n\nI also make a regular services folder.'}]"
Javascript,"Develop, build, deploy, redeploy, and teardown frontend projects fast, really fast ‚ö°Ô∏è",https://github.com/reblim/fast,44,15,milberferreira,1602222974.0,,"[{'Subreddit': 'Javascript', 'Reddit_Title': 'Develop, build, deploy, redeploy, and teardown frontend projects fast, really fast ‚ö°Ô∏è', 'CommentAuthor': 'careseite', 'Comment': 'So.. Basically a parcel boilerplate like the many other?'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Develop, build, deploy, redeploy, and teardown frontend projects fast, really fast ‚ö°Ô∏è', 'CommentAuthor': 'None', 'Comment': ""Why no mention of the underlying tech stack? This feels like a bait 'n switch for inexperienced developers to learn your preferred tech stack. That stuff needs to be front and center for a project like this.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Develop, build, deploy, redeploy, and teardown frontend projects fast, really fast ‚ö°Ô∏è', 'CommentAuthor': 'DemeGeek', 'Comment': 'I was hoping it was going to be something that could sit in your path, letting you just specify a folder and framework and have it auto deploy the default starter app. Instead it appears to be a JAMstack ad for Surge.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Develop, build, deploy, redeploy, and teardown frontend projects fast, really fast ‚ö°Ô∏è', 'CommentAuthor': 'icjoseph', 'Comment': 'You can literally just tell Vercel to fetch a repo of yours and every single time you push to a branch a preview deploy is made... Full SPA, SSR, lambdas, you name it.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Develop, build, deploy, redeploy, and teardown frontend projects fast, really fast ‚ö°Ô∏è', 'CommentAuthor': 'TinyGuy_32', 'Comment': 'Alert(""im gona check it out!"")'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Develop, build, deploy, redeploy, and teardown frontend projects fast, really fast ‚ö°Ô∏è', 'CommentAuthor': 'milberferreira', 'Comment': ""To those who don't like reading documentation.\n\n‚ö†Ô∏è THIS IS A BOILERPLATE FOR BEGINNERS AND INTERMEDIATE DEVELOPERS WHO WOULD LIKE TO GET STARTED WITH A FRONTEND PROJECT FAST. THE THECH STACK IS PARCEL, SURGE, POSTCSS, SCSS, and BABEL.\n\nSee tech stack in detail https://github.com/reblim/fast#-core-technologies""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Develop, build, deploy, redeploy, and teardown frontend projects fast, really fast ‚ö°Ô∏è', 'CommentAuthor': 'milberferreira', 'Comment': ""That's right, a simple yet powerful boilerplate to get you started with all the tools you need. I'm working on the CLI version to provide more customization and framework integration (React and Vue). Please stay tuned and feel free to contribute if you find it interesting üôå""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Develop, build, deploy, redeploy, and teardown frontend projects fast, really fast ‚ö°Ô∏è', 'CommentAuthor': 'milberferreira', 'Comment': ""Please read the README the entire tech stack is outlined in detail there, it's quite clear!\n\nIf you believe this could be improved, feel free to contribute üòä""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Develop, build, deploy, redeploy, and teardown frontend projects fast, really fast ‚ö°Ô∏è', 'CommentAuthor': 'milberferreira', 'Comment': ""Fast is simply a framework-less boilerplate to get you started. That's all! For many developers, this is all we need to get a project off the ground. No complex configurations, get great browser support, code minifying, javascript parsing, and surge as a free deployment pipeline.\n\n\nI'm also currently working on a CLI version which will allow you to choose Vue or React as a preconfigured framework. If you have any other suggestions fee free to contribute üòä""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Develop, build, deploy, redeploy, and teardown frontend projects fast, really fast ‚ö°Ô∏è', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Develop, build, deploy, redeploy, and teardown frontend projects fast, really fast ‚ö°Ô∏è', 'CommentAuthor': 'Jebble', 'Comment': ""Except it should be in the very first paragraph, so people can walk away as soon as they see the stack isn't for them instead of reading an entire readme.""}]"
Javascript,[AskJS] how to improve and modernize frontend website development?,https://www.reddit.com/r/javascript/comments/fj1rk2/askjs_how_to_improve_and_modernize_frontend/,7,23,madry91,1584281031.0,"I'm starting a new website and I'd like to use this project to learn something new about frontend development. In particular I want to leave jQuery in favor of new library/framework or vanilla JS. I normally develop simple websites with few JS logic, this is a list of things that I mainly use:

carousels/sliders

click events for open menus

ajax to send form email

Library for animations.

So in my case and in a modern FE development has sense to keep using jQuery or is better to switch on others frameworks (reactjs, vuejs, ecc...)? What is your approach for simple website?","[{'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] how to improve and modernize frontend website development?', 'CommentAuthor': 'Code_Machine', 'Comment': ""I recommend that improve your vanilla JS skills and all other frameworks and libraries are piece of cake. That's my opinion and my goal for front-end development.""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] how to improve and modernize frontend website development?', 'CommentAuthor': 'Blazing1', 'Comment': 'Vue.js is easy to transition from jquery to. Its what I did.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] how to improve and modernize frontend website development?', 'CommentAuthor': 'BiscuitOnFire', 'Comment': 'Give Svelte a try its really simple and powerful'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] how to improve and modernize frontend website development?', 'CommentAuthor': 'rorrr', 'Comment': ""Try Node with React or Svelte.\n\nThere are tons of libraries for animation. Most likely, you won't even need it, since you can just use ready-to-use components via NPM. Carousels, sliders, whatever you wish.\n\nUse fetch to send ajax requests to the server.\n\nAnd you can learn to create server side as well with Node + Express, though that's optional.""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] how to improve and modernize frontend website development?', 'CommentAuthor': 'drcmda', 'Comment': ""Both jQuery and vanilla are dead-ends for FE development. Querying nodes and mutating them is the worst possible approach you can take. Layout inflating isn't being used for more than 20 years elsewhere, only on the web. And even there it's practically gone, there are no job postings left that have you create scaleable projects with appendNode and innerHtml.\n\nLearn React. It's simple, allows you to prototype quickly, it's generic knowledge (immutability, functional programming, etc).""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] how to improve and modernize frontend website development?', 'CommentAuthor': 'ghostfacedcoder', 'Comment': ""It really depends on your site/goals.  Is your site small, and jQuery's working just fine?  If so, don't stop using it just because it isn't cool!\n\nBut is your site growing, and you are finding it harder and harder to improve it? In that case, you want to learn about the Single Page Application (SPA) model, and that will mean learning a framework like React or Vue (or Angular, the worst choice of the three IMHO ... not because it's bad, just because it's less good).\n\nAnd if you're looking to get employed doing this professionally, I'd pick React, just because it has the most jobs.""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] how to improve and modernize frontend website development?', 'CommentAuthor': 'madry91', 'Comment': ""Hi u/Code_Machine! thanks for your answer! I need to improve my javascript skills and I'm agree with you that this will help me to understand and learn new frameworks.\n\nI would like to know how do you approach the website (no web application) development. Do you use vanilla javascript or anything else?""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] how to improve and modernize frontend website development?', 'CommentAuthor': 'Heen0k', 'Comment': 'So much this. Once you get good at vanilla JS, you wont really feel the need to use framework for lots of things. This will also lead you to use good design pattern and not bein stuck to a framework.'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] how to improve and modernize frontend website development?', 'CommentAuthor': 'madry91', 'Comment': '>So much this. Once you get good at vanilla JS, you wont really feel the need to use framework for lots of things. This will also lead you to use good design pattern and not bein stuck to a framework.\n\nThank you u/Blazing1!! I used Vuejs in a project and I must admit that I like it! Do you use Vuejs for make websites or only for web apps?'}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] how to improve and modernize frontend website development?', 'CommentAuthor': 'madry91', 'Comment': ""Hi u/rorrr, thank you! Do you suggest me to divide FE from BE? Because for this project I'm thinking to use a monolithic CMSs (Wp or Typo3) and change only jquery with something new like React or Svelte as you said""}, {'Subreddit': 'Javascript', 'Reddit_Title': '[AskJS] how to improve and modernize frontend website development?', 'CommentAuthor': 'madry91', 'Comment': ""Hi u/drcmda! thank you for your answer! I thought about what you said and you're absolutely right! I have to change as soon as possible my FE stacks in favor to a new framework like React.\n\nWhat I still want to ask you is if this approach can also be applied for small web sites,  because when I think of an application in React (or similar frameworks) I imagine a divided frontend and backend, an API layer with which they communicate, but perhaps this is too much for a small website. Surely my reasoning is too newbie, I would be grateful if you could help me reason like you did with the first answer :-)""}]"
Javascript,Logging in Browser: Using a structured logger in your frontend project,https://medium.com/@gajus/logging-in-browser-2f053dbe69df?sk=b8be6e5a00a73aad64132af3394a8e85,62,13,gajus0,1565813427.0,,"[{'Subreddit': 'Javascript', 'Reddit_Title': 'Logging in Browser: Using a structured logger in your frontend project', 'CommentAuthor': 'yen223', 'Comment': 'This article seems to be using a different definition of ‚Äústructured logging‚Äù from the ops community. Structured logging usually refers to adding some structure to your logs, by e.g. writing out key-value pairs instead of unstructured strings.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Logging in Browser: Using a structured logger in your frontend project', 'CommentAuthor': 'ghostfacedcoder', 'Comment': 'Structured logging in the front-end: a solution in search of a problem ;)\n\nTo be perfectly honest, I\'ve never in my life seen multiple log levels, or other forms of ""structured logging"", used well *in practice* on the server-side either.\n\nIt seems like a great idea to separate your levels, but in my experience what winds up happening is that they become meaningless over time and you wind up (effectively) with one logging level anyway.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Logging in Browser: Using a structured logger in your frontend project', 'CommentAuthor': 'benihana', 'Comment': ""has anyone gotten any actual value out of front end logging? every situation i've ever come across using front end logs or every time i've set up front end logs, it was too noisy to provide any value.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Logging in Browser: Using a structured logger in your frontend project', 'CommentAuthor': 'Severe_Traffic', 'Comment': 'Thanks man'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Logging in Browser: Using a structured logger in your frontend project', 'CommentAuthor': 'zim1985', 'Comment': ""The most I've ever needed from logging on the front end is some logs to see what requests go out, but I simply add an interceptor to the http stack to handle that.\n\nI'd argue most logging should live on the backend of things. If you need tons of logging in the front end you probably put way too much logic in your UI""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Logging in Browser: Using a structured logger in your frontend project', 'CommentAuthor': 'gajus0', 'Comment': 'This article started by me writing an intro to the recent Roarr update that adds browser support. The intention was to focus about what to log as opposed to how to log it. However, as we were discussing integration of Roarr into our frontend projects, I was struck by some misconceptions that came out of the conversation. As such, the article took a pivot to how to implement a logger and log accessibility.\n\nI am currently working on a browser extension that categorises Roarr logs and provides feedback when certain type of logs are caught (including auto break points). Will use release of that as an opportunity to discuss the original topic.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Logging in Browser: Using a structured logger in your frontend project', 'CommentAuthor': 'gajus0', 'Comment': 'I found tagging to be more useful than log levels. I would take logs based on the role that they perform, database, http, etc. and filter by those tags. I still use log levels, but as you say, they are rather arbitrary.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Logging in Browser: Using a structured logger in your frontend project', 'CommentAuthor': 'benihana', 'Comment': '>To be perfectly honest, I\'ve never in my life seen multiple log levels, or other forms of ""structured logging"", used well in practice on the server-side either.\n\nyou\'ve never even seen `info` and `error` separated? most places i\'ve worked at can\'t agree on what is debug, what is warn, what is error, what is critical, so we just end up with `info` for non error things and `error` for errors. sometimes error handlers will throw `warnings` when things that are okay, but shouldn\'t happen (like the user enters `¬¶`) as their username.\n\nbut there\'s always two log levels.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Logging in Browser: Using a structured logger in your frontend project', 'CommentAuthor': 'tbranyen', 'Comment': 'For certain complex projects it makes sense. Working with domain specific apis as well. Tracing hardware, network, drm, etc. is challenging if its all flat. Tagging and levels are super nice.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Logging in Browser: Using a structured logger in your frontend project', 'CommentAuthor': 'gajus0', 'Comment': ""Sounds like a logging strategy/ tooling problem, rather than whether logs are useful.\n\nAs someone else mentioned, the most value I got from frontend logging was when working on a trading app. There were quite a few components that depended on a websocket and independently queried other APIs. Observing what triggers state changes wasn't a simple task. Adding logs (with tags for each service) made it helluva easier to understand what is going on.\n\nNowadays I mostly use logs to log unexpected state and variables that describe how we got there (e.g. original query). You could just as well just go into the network tab, but having a log saves time and you can more easily generalize and categorize issues, which is needed when you want to quickly detect the origin of the issue when correlating logs across multiple sources (assuming that you send frontend logs to some backend, of course).""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Logging in Browser: Using a structured logger in your frontend project', 'CommentAuthor': 'OfflerCrocGod', 'Comment': ""Or you're building a very complex application that requires complex business workflows, such as trading applications.""}]"
Javascript,I wrote a HTTP client for micro frontend architecture. Now we started to use it on every Node.js project.,https://www.reddit.com/r/javascript/comments/btdjmm/i_wrote_a_http_client_for_micro_frontend/,122,38,acanguven,1558906353.0,"Hi Redditors, [r/javascript](https://www.reddit.com/r/javascript), I will tell you the story behind the project [Warden](https://github.com/puzzle-js/puzzle-warden).

It all started when we moved our 5k request per second website to micro frontend architecture.  Our website will be rendered by 4 gateways and in front of them, an application called storefront to stream responses coming from gateways to the browser.

[Micro Frontend Architecture](https://preview.redd.it/lpws79bpdm031.png?width=814&format=png&auto=webp&s=c196ea079016b8239af818d7a7342d19f58dc9a4)

Everything was great, we completed this project with [PuzzleJs](https://github.com/puzzle-js/puzzle-js). After experiencing the solution for 6 months, we noticed some problems. Micro frontend architecture is already quite challenging but if you are working on a 5k request per second system, it makes everything harder.

* We were not able to cache anything on pages. This was killing our performance and we were not able to scale our applications anymore.
* Using container orchestration system Kubernetes, we experience some socket problems. Most of the time, we can't get a socket from the host operating system to use.
* Storefront application was using lots of CPU because it was sending requests to 8 different fragments to render a simple page.

&#x200B;

To solve the first problem, we started to add custom caching codes to storefront project. But it was breaking the simplicity of the project.

For the second problem and other timeout issues, we started to use a package that replaces the request module. It was killing performance drastically. We experienced lots of issues using that package.

For the last problem, we decided to use GRPC but our container orchestration system version doesn't support it.

To solve these problems, I wanted to create a solution for almost all problems and missing features of a production class HTTP library. What are these key features?

* It should be reliable
* It should be fast
* It should provide rich and easy caching solutions
* It should be a great fit for microservice architecture

&#x200B;

Then I started on the project Warden. Spent almost 6 months to analyze the requirements. Then started to code and finished in a few months. It was a wrapper around module [request](https://github.com/request/request). But it provides some great features.

&#x200B;

* Smart Caching - Do you remember [Nginx cache keys](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key)? Warden provides almost the same solution for you to create request identifiers.So you can discard irrelevant dynamic values on your HTTP request to cache based on your key.

&#x200B;

* Holder - Our storefront application was sending a request to a gateway to receive the header fragment. Almost all pages were using header fragment. As a result, sometimes it was sending the same request while already another request with same dynamic variables sent and not received a response yet. Holder brings a solution to wait for existing requests.
* Retry - Yes, it may look simple but implementing a great performing retry mechanism is hard. With retry feature, it can resend failed requests.

&#x200B;

* Schema - Performance is the most important thing for us. Do you know that `JSON.stringify` is slow because it calculates the type of the variable on the fly? You can provide a schema to Warden to replace this feature when sending requests with JSON body. For some models, it can result in 3x faster compared `JSON.stringify`

&#x200B;

Benchmarks are showing that Warden puts almost 0 (0.24) overhead on request module. But the features it provides and modules are making it a lot faster from request module.

Now I want to make this project public and get feedback from the Node.js community to improve it.

Thank you!","[{'Subreddit': 'Javascript', 'Reddit_Title': 'I wrote a HTTP client for micro frontend architecture. Now we started to use it on every Node.js project.', 'CommentAuthor': 'rorrr', 'Comment': ""I'm not sure what problem this is solving. The ones you listed are really strange problems. \n\n1) Why couldn't you cache things? That's the most *puzzling* claim.\n\n2) Socket problem with Kubernetes? Doubt it's Kubernetes fault. That sounds like maybe your hosting provider is messing up. Or maybe your server configuration is wrong. \n\n3) Why is your application sending 8 different requests to render 8 different parts of the page? Either pre-render server-side or make one request. Also not clear why you get high CPU usage before, but not after - it's still 8 requests, no?""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I wrote a HTTP client for micro frontend architecture. Now we started to use it on every Node.js project.', 'CommentAuthor': 'soundmanD', 'Comment': 'As with the previous comments it also seems like something like GraphQL would make your life a lot simpler... Instead of all individual components calling for their information, why not have an aggregator where all components just queue up what they need (Promises help here), then when you know the page is fully composed, send 1 call with all the requirements and then on the response simply send the parts back to promises accordingly.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I wrote a HTTP client for micro frontend architecture. Now we started to use it on every Node.js project.', 'CommentAuthor': 'madou9', 'Comment': ""Cool lib. Looks like there's an overlap with the request batching that Facebook's data loader does https://github.com/graphql/dataloader""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I wrote a HTTP client for micro frontend architecture. Now we started to use it on every Node.js project.', 'CommentAuthor': 'klebsiella_pneumonae', 'Comment': ""Looks like you've built your own GraphQL?\n\n5k rps isn't that much. A single EC2 instance should be able to handle it with proper caching.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I wrote a HTTP client for micro frontend architecture. Now we started to use it on every Node.js project.', 'CommentAuthor': 'UglyChihuahua', 'Comment': 'What does ""5k/rps"" mean?'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I wrote a HTTP client for micro frontend architecture. Now we started to use it on every Node.js project.', 'CommentAuthor': 'None', 'Comment': 'This seems like an overengineered clusterfuck band-aiding problems that could be solved more conventional ways.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I wrote a HTTP client for micro frontend architecture. Now we started to use it on every Node.js project.', 'CommentAuthor': 'tobsn', 'Comment': 'you want to use templates and api data and micro caching on the backend.\n\ni‚Äôve handled up to 40k/sec dynamic requests with almost no caching and php and 12 years ago. i doubt that should be a problem these days to handle 5k/sec...'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I wrote a HTTP client for micro frontend architecture. Now we started to use it on every Node.js project.', 'CommentAuthor': 'paul_h', 'Comment': 'I wrote a bunch about cookie cutter scaling - https://paulhammant.com/2011/11/29/cookie-cutter-scaling/ (and others). Later Micro-Frontends started getting written about but **no side calls** wasn‚Äôt emphasized.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I wrote a HTTP client for micro frontend architecture. Now we started to use it on every Node.js project.', 'CommentAuthor': 'BobbaGanush87', 'Comment': ""Excuse my ignorance as i am new to microframeworks but why is there multiple api gateways? Isnt the point of a gateway to point the request to the right microservice endpoint? If that's true wouldnt you need one for the app and not one for each microservice?""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I wrote a HTTP client for micro frontend architecture. Now we started to use it on every Node.js project.', 'CommentAuthor': 'Indelam', 'Comment': ""how does your latency/CPU/memory looks like for requests with and without warden? how much are your gaining with this. \n\n&#x200B;\n\nI agree your point about schema but not able to understand other pain points, correct me if I'm wrong, looks like you are handing off your requests to a API layer generate data which shouldn't block any requests so , and I do not see any memory DB here, how did you try caching the data? were you able to try anything like Redis? it could save lot of memory for your app, and reduce file read/writes from node.js""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'I wrote a HTTP client for micro frontend architecture. Now we started to use it on every Node.js project.', 'CommentAuthor': 'ziyoshams', 'Comment': ""Awesome. I guess, that's what good engineer does. Good work üëç""}]"
Javascript,"Let's talk about Frontend Architecture, code structure.",https://www.reddit.com/r/javascript/comments/9zp1xo/lets_talk_about_frontend_architecture_code/,39,39,kardnumas,1542986119.0,"Recently I gave an interview where they asked me about how you manage your code, architecture where I told them I do mostly like MVC type and in React App I try to separate my components, containers, views though they all are component but I think they were not convinced or were impressed so I want to know from you all that how you guys structure your frontend project. Also, I need some recommendation for books/videos to learn this. Also, I do use design patterns and mostly do it in OOP rather than in a functional way ","[{'Subreddit': 'Javascript', 'Reddit_Title': ""Let's talk about Frontend Architecture, code structure."", 'CommentAuthor': 'narcodis', 'Comment': 'A really good book on this subject is ""Clean Architecture"" by Robert Martin. It\'s dense, but it goes in depth about how a software project should be organized to facilitate minimizing technical debt and making refactoring as painless as possible. Project organization isn\'t an easy thing to get right, and patterns like MVC only go so far.'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""Let's talk about Frontend Architecture, code structure."", 'CommentAuthor': 'i_ate_god', 'Comment': ""I'm not sure what question you're asking. If you're talking how things are organised on the file system, that's different from how your architecture is organised. They aren't related at all.\n\nAs for design patterns, who cares? Honestly. MVVM, MVP, MVC, MVB, it all boils down to the same thing:\n\nA UI is a collection of components that serve two purposes: to represent state, and to forward inputs to things that care about input. This has been the case, maybe forever. I have yet to see a UI framework that presents UI development in a different manner than what I just described. From nCurses to Vue, from React to WPF, from Qt to Swing to Android to just plain HTML. Even at the hardware level it's no different at all. LEDs, potentiometers, faders, buttons, conceptually it's all the same. The keyboard I'm typing this on is a UI with a finite set of available inputs and three little lights to indicate the state of scroll lock, caps lock and num lock.\n\nNow, certain frameworks make UI development easier than others. For the web, React and Vue stand out above the rest because they have clean ways to bind specific chunks of data to specific areas of the UI. For the desktop, WPF is a breeze for Windows and Qt for cross platform isn't bad either. For the console, the de facto standard is nCurses. \n\nSo, what makes a good component? Who knows. Sometimes it makes sense to have a highly specialised reusable component like a button that when clicked replaces its text with a loading gif. Sometimes it makes sense to have a large component that represents an entire form. Your customers and the marketing-driven deadlines you need to meet, don't care about these details mind you, and it's ultimately up to you to balance the desire of beautiful code with the realities of running a business.""}, {'Subreddit': 'Javascript', 'Reddit_Title': ""Let's talk about Frontend Architecture, code structure."", 'CommentAuthor': 'None', 'Comment': 'I\'m fond of a few frontend architectures. TEA (The Elm Architecture) and MVI (model-view-intent) in particular are very nice. Both for a similar reasons.\n\n1. The view is not allowed to maintain any sort of internal state. This affords you some very strong guarantees and makes testing easy.\n2. Events on the document are tagged with some sort of signal of intent and descriptive information. This is a practical thing, but also has the benefit that \\_any change to the state of your application is guaranteed to have some sort of audit trail\\_.\n3. Some sort of ""update"" function continually produces a new model based on the lastest event and the previous model. It is very handy that any change to application state can only occur in a single place. This is my biggest critique of MVVM.\n4. The view receives the latest model and in a deterministic manner renders based on the state of that model.\n\nWhat I love about TEA and MVI is they ensure you can always figure out how somethings happening. There\'s no sort of ""sneaky mutation"" where you find yourself asking ""how did this change?"" or ""why is this happening?"". They\'re also quite strict about how things happen. There\'s just too many ways to interpret MVC and I end up solving the same problem 5 different ways. The point of good architecture is you don\'t have to make a decision about how to go about things every time you add a feature. '}, {'Subreddit': 'Javascript', 'Reddit_Title': ""Let's talk about Frontend Architecture, code structure."", 'CommentAuthor': 'kuenx', 'Comment': ""We basically do more or less what's described in this article:[https://medium.com/@alexmngn/how-to-use-redux-on-highly-scalable-javascript-applications-4e4b8cb5ef38](https://medium.com/@alexmngn/how-to-use-redux-on-highly-scalable-javascript-applications-4e4b8cb5ef38)\n\nWe have a fairly large fontend codebase and this has worked really well for us, especially for a React+Redux+Saga application. The rule is basically that a feature can only `import` direct children or from a parent. It means that when you delete a feature you can safely also delete all its child features because they can't be used elsewhere.\n\nEvery feature has its own actions, reducers, sagas, etc. So when you want to delete something all the things it uses will be in the same directory, easy to find, easy to delete. We also use *babel-plugin-module-resolver* and use absolute paths to `import` from parents and relative paths for children. The state tree has the same structure as your components. It's pretty cool.\n\n&#x200B;\n\n*Edit: More detailed explanation in* [*another comment*](https://www.reddit.com/r/javascript/comments/9zp1xo/lets_talk_about_frontend_architecture_code/eabr8g2)*.*""}, {'Subreddit': 'Javascript', 'Reddit_Title': ""Let's talk about Frontend Architecture, code structure."", 'CommentAuthor': 'iamlage89', 'Comment': 'Someone should write a blog post on this'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""Let's talk about Frontend Architecture, code structure."", 'CommentAuthor': 'MrGirthy', 'Comment': 'Personally I use atomic design and I think it works well with a component based ui\n\nComponents\n\n-Atoms\n\n-Molecules\n\n-Organisms\n\n-Templates\n\n-Pages\n\n\nStore (redux or gql)\n\nCss is all styled components within each component '}, {'Subreddit': 'Javascript', 'Reddit_Title': ""Let's talk about Frontend Architecture, code structure."", 'CommentAuthor': 'hodgef', 'Comment': ""Generally I stick to this structure (not sure if there's a name for it):\n\n./src\n\n* components\n   * css\n      * FooComponent.css\n   * FooComponent.js\n* screens\n   * css\n      * BarScreen.css\n   * BarScreen.js\n* services\n   * Email.js\n   * Utility.js\n   * ServiceName.js\n\nThis structure has worked well so far for small-mid sized projects.\n\nI'd be also curious if there's a more efficient approach.\n\n&#x200B;\n\n&#x200B;""}, {'Subreddit': 'Javascript', 'Reddit_Title': ""Let's talk about Frontend Architecture, code structure."", 'CommentAuthor': 'jaman4dbz', 'Comment': ""The beauty of JavaScript is how flexible it is. The way each app is USED (UX) is different everywhere, hence things are highly dependent on the app.\n\nI specifically switched to frontend from full stack 6 years ago, because I got extremely bored making the same CRUD REST backends. There, the same pattern can be used over and over again.\n\nThe front end usually doesn't need MVC or any crap like that. Just have a single source of truth which is immutable, consume it to provide a user experience. The best pattern to do that changes with every project.\n\nEdit: what I'm saying is I wouldn't start with any pattern, I would just start writing UX, tack on ssot data, then flesh out the architecture as I went along. In short I would never ask a candidate what architecture would they use, I would simply like to see how they organized code. Bonus points if they used a single source of truth, but honestly it's an advanced subject that I find most Seniors miss, so I'd forgive it.""}, {'Subreddit': 'Javascript', 'Reddit_Title': ""Let's talk about Frontend Architecture, code structure."", 'CommentAuthor': 'None', 'Comment': 'Is there a more terse resource? I struggle with dense material, attention span roughly equal to that of my cat.'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""Let's talk about Frontend Architecture, code structure."", 'CommentAuthor': 'vklepov', 'Comment': 'How dare people downvote this'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""Let's talk about Frontend Architecture, code structure."", 'CommentAuthor': 'None', 'Comment': '\\> (Redux or GQL)\n\nThere shouldn\'t be an ""or"" here. These are two different technologies (state management, query language) that solve different problems that are very often used in conjunction with each other.'}]"
Javascript,Do people tend to become bored in frontend and move to backend?,https://www.reddit.com/r/javascript/comments/9azdr3/do_people_tend_to_become_bored_in_frontend_and/,13,39,fistbumpingjunkie,1535466505.0,"
Hi all!! I‚Äôm pretty new to coding but I‚Äôve been learning JS for more than a few months now. I‚Äôve solely been focusing on frontend and have built quite a bit of fun web designs and small games. I wouldn‚Äôt call myself an expert at all but I feel pretty proficient and was able to catch the logic relatively quickly. For the past few weeks I‚Äôve been learning node.js and have played around building a few basic Express apps and learning to connect to a database(MySQL). I love the idea of learning both, but honestly- I‚Äôm so ready for a career switch that I‚Äôm trying to decide which would be better: take a little more time to gain some knowledge of both front and backend or focus on one? Im currently in a Bootcamp at my local tech school and I‚Äôve also been working alongside a few different udemy courses and a few YouTube channels. With being in the bootcamp course, I can‚Äôt really give up learning a bit about backend. But with our last two major projects coming up, I really can pick a focus. Most people really want to have a hand in the backend to add to their portfolio so it would be totally easy for me to only take part in the front end. But is that wise? 

Honestly, learning frontend was so much fun for me. From a young kid, my two main loves in life are writing and any kind of design. So since I love the design aspect and figuring out how the page will be formatted and work, I kind of want to dive into that a little more. But I‚Äôve heard of a few people who, after a few years of developing frontend, they get bored and move to the backend. 

I‚Äôm known to make rash/emotion-filled choices. But, I‚Äôm closing in on 30 and it‚Äôs really too late in life for me to continue doing that, so I want to make the smartest choice for a long future in development. Do you think it would be smart of me to put my focus on just frontend, just backend or learn both as best as I can?


Side Add: if you have any tips for getting hired, goals to aim for, or type of projects employers will be looking for in my portfolio- send them my way! I‚Äôm trying to take as many notes and study tips as possible. I would love to start applying for jobs the moment I feel marketable enough. 
","[{'Subreddit': 'Javascript', 'Reddit_Title': 'Do people tend to become bored in frontend and move to backend?', 'CommentAuthor': 'ejfrodo', 'Comment': ""I get bored of back end, it all feels very similar after awhile. Set up some database, create a few REST routes or GraphQL to query data, maybe a data pipeline for analytics, write some perf tests, rinse and repeat.\n\nI enjoy building user experiences more because it's always very different and building a front end app that scales well to many development teams contributing simultaneously with enforced quality is a challenge. Front end is easy to start, but very difficult to master.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Do people tend to become bored in frontend and move to backend?', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Do people tend to become bored in frontend and move to backend?', 'CommentAuthor': 'so_just', 'Comment': 'It goes both ways'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Do people tend to become bored in frontend and move to backend?', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Do people tend to become bored in frontend and move to backend?', 'CommentAuthor': 'reysabs', 'Comment': 'Frontend is for LGBT'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Do people tend to become bored in frontend and move to backend?', 'CommentAuthor': 'akujinhikari', 'Comment': 'I\'ve been a front-end developer and a full-stack developer, dealing with Java and Node in the back end (on different apps). I actually like front end far more. Writing the same `app.use(\'/api/getdata\', securityFunction, (req, res) => res.send(\'neat\')` function over and over again is much more boring to me. There\'s still plenty to do on the back end, but I like the idea of building the front end more. The ever-changing landscape of front end is what really appeals to me; this isn\'t a job that you can ever say, ""Good. Now I know everything."" Because you can never know everything. I absolutely love that about front end. Back end though . . . it\'s been basically the same for 50 years.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Do people tend to become bored in frontend and move to backend?', 'CommentAuthor': 'None', 'Comment': 'I am a full stack dev and I can tell you that having a solid understanding of both frontend and backend will go a lot further than just specializing in one.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Do people tend to become bored in frontend and move to backend?', 'CommentAuthor': 'None', 'Comment': ""I was 27 when I started a career in front-end development (I'm 37 now, FWIW). For me, it made sense to diversify my efforts and learn both the front-end and the back-end side of things. But I am a one-map shop. I don't like working with a team, and I'm pretty sure most people would tell you that they don't like working with me, either. I am a serial career changeer. So take what I have to say with a grain of salt. \n\nMy resume is all over the place. I went from waiting tables until I was about 24 into a job as a graphic designer, which turned into a web design job, which led to to a career change into front-end development. From there, I started developing web apps on the side, which led to a job in back-end development. Then I took a weird detour into embedded programming, which led to a job developing software for automobile diagnostics hardware, which I left to focus on developing a hardware gadget and the software to power it, which I intend to bring to market some time next year. I will probably move onto something entirely different after that. That's just who I am.\n\nBut I don't care how old you are, you are not obligated to stick with a single career path for the rest of your life, nor are you ever too old to learn something new. Do front-end development for as long as you find it to be fulfilling, then move on if the desire and opportunity arises. It's OK if you're happy doing front-end development work for the rest of your career. It's a constantly moving profession. So long as you stay on top of your skills, you will be marketable, whether you do back-end work or not.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Do people tend to become bored in frontend and move to backend?', 'CommentAuthor': 'DrFriendless', 'Comment': ""I've been coding for 30 years, backend more than frontend, and I find them both very exciting still. Frontend has more colours. Whatever you want to do, it is not too late in life for you to do it.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Do people tend to become bored in frontend and move to backend?', 'CommentAuthor': 'AccountsArePointless', 'Comment': 'There are a lot of things to be said of frontend right now. *Boring* is not one of them.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Do people tend to become bored in frontend and move to backend?', 'CommentAuthor': 'Ironclad_v2', 'Comment': ""Ignoring the body and replying only to the title, in my opinion no. People tend to start the frontend and give up on frontend problems revolving html/css so they move to the backend. Grant it, there are cases where devs discover the back end and truly just like it more, so they dedicate their time to learning everything about the back end. It also probably doesn't help if the things you're building on the front-end aren't designed well. I work at an agency with some fucking awesome designers so i'm not bored with what I'm creating. Always something that looks nice and is a little different.""}]"
Javascript,How important is being an expert in CSS to frontend devs?,https://www.reddit.com/r/javascript/comments/83gpwm/how_important_is_being_an_expert_in_css_to/,0,40,tchaffee,1520704429.0,"I'm hoping to get some feedback on how important it is to frontend devs to be an expert in CSS. The impression I get from years of projects is that most good frontend devs have spent most of their time learning JavaScript, a framework like React, and then the long list of tools like webpack, npm, and even git. When I look at manually written CSS on projects, it is often a mess. And it seems like a lot of devs just use a framework like Bootstrap to avoid having to deal with CSS directly. If you are hiring a frontend dev, do you make sure they are a CSS expert? Or is that just a nice-to-have?","[{'Subreddit': 'Javascript', 'Reddit_Title': 'How important is being an expert in CSS to frontend devs?', 'CommentAuthor': 'dirtytiki', 'Comment': 'You wanna be a real front end guy.  You better know css.   \n\nThat being said, there are lots of predefined libraries and you can get away without fully knowing it for a while.   '}, {'Subreddit': 'Javascript', 'Reddit_Title': 'How important is being an expert in CSS to frontend devs?', 'CommentAuthor': 'flashpunk', 'Comment': ""When I'm interviewing front end engineers I look for at least a base line competency with CSS - you should be able to look at a simple design and at least be able to make it look 75% there. It's an important skill and I think it makes you way more valuable to most org's.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'How important is being an expert in CSS to frontend devs?', 'CommentAuthor': 'sportnak', 'Comment': ""I don't think you need to be an expert, but working on projects that use less/css is common. Building your own projects that use it helps you get better and it will become second nature.\n\nI started 3 years ago and always forgot values and names and whatnot. And I'd say I'm now at the point where I only look up the most infrequently used attributes when I'm trying to do something funky. It's not always fun, but it's relevant.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'How important is being an expert in CSS to frontend devs?', 'CommentAuthor': 'nethoinkz', 'Comment': ""If you're having trouble debugging css you're gonna have trouble debugging bootstrap.\n\ne.g. If you inspect an element in chrome you would still be reading css so you better understand how it works.\n\nBootstrap is just predefined css classes it's not a replacement, it's just something that you can use.\n\nP.S. I personally like writing my own css. I don't like how the source code looks littered with bootstrap classes.\n\nHoping to see cleaner source codes someday. Css grid and react fragment is already a big step towards that. :)""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'How important is being an expert in CSS to frontend devs?', 'CommentAuthor': 'mwcz', 'Comment': 'This varies a lot from company to company based on team size and level of specialization.  I\'ve known some very productive and respected ""engineering type"" front-end developers who couldn\'t write a line of CSS.  I myself am very comfortable with CSS but still write none at work because we\'re so specialized, but I\'ve also worked on smaller teams where I was responsible for everything on the client side.\n\nUltimately, front-end application engineering and design are entirely different skill sets.  Being an expert at either one is worthwhile.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'How important is being an expert in CSS to frontend devs?', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'How important is being an expert in CSS to frontend devs?', 'CommentAuthor': 'MeAsYouKnow', 'Comment': 'I\'m a front-end dev and I would personally not consider anybody that uses Bootstrap or any other CSS framework extensively a good front-end dev by any means.\n\nCSS frameworks are great if you\'re doing a quick project you don\'t really care for that just needs the basics, but if you\'re putting a significant amount of time into a project, the CSS frameworks should be the first to go.\nThey\'re also good for back-end devs, or those without any CSS prowess to get a site up and running without needing to find a CSS guy.\n\nSo I would say being an expert in CSS vital to being a successful front-end developer. Like others have said though- there is no need to ""master"" it. Just have a solid competency level and the ability to figure it out in a meaningful time frame.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'How important is being an expert in CSS to frontend devs?', 'CommentAuthor': 'Kaidawei', 'Comment': 'From my experience a real ‚Äúexpert‚Äù in front end dev is an expert in CSS as well.  But we don‚Äôt need to be an expert front end dev to get hired or ship projects.  There is a scarcity of talent so...'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'How important is being an expert in CSS to frontend devs?', 'CommentAuthor': 'BenjiSponge', 'Comment': ""It totally depends on the application, but I tend to think hardcore CSS knowledge is just wasted brainspace. How much time do you really spend on the nitty gritty CSS? 95% of the CSS problems I've ever encountered are instantly Google-able. Codepen is a fantastic resource, and StackOverflow is a fantastic resource.\n\nHaving a deep understanding of layout in your working memory at all times might be important for some applications, but I honestly haven't seen it for quite a while. I work on frontend all the time (React, mostly), and I just don't need it. I've used flexbox dozens of times but I still don't remember at all how it works. I just look it up when I need to and promptly forget it.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'How important is being an expert in CSS to frontend devs?', 'CommentAuthor': 'reddit_user_20', 'Comment': 'It\'s not hard to learn CSS. You can find some books or videos like ""learn CSS in an hour"" it should be enough for most of the cases, and then you can go deeper as needed and it shouldn\'t take to much time to learn. It is ok to go to stackoverflow to learn something while you coding.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'How important is being an expert in CSS to frontend devs?', 'CommentAuthor': 'tchaffee', 'Comment': ""Thanks for your response. Can you explain why you need to be an expert in it? The reason I ask is I come across a lot of senior frontend devs who don't seem to be experts in CSS. They just get by and lean heavily on a library and if stuck they hit something like Stackoverflow. And looking at style sheets, a lot of devs don't use any standards or best practices. A lot more importance is placed on those things when it comes to JavaScript.""}]"
Javascript,I've been a backend Java developer for the past 1.5 years. I'm starting a new job as a frontend Javascript developer. How should I prepare for this new role?,https://www.reddit.com/r/javascript/comments/83fkh1/ive_been_a_backend_java_developer_for_the_past_15/,16,22,richpeopleshit,1520693501.0,"Hi guys. As the title said, I'm starting a new job as a frontend developer. I have some experience with Javascript in personal projects but nothing professional or anything near enterprise type stuff. Any book(s) I should read? Blogs? Online courses? Thanks!","[{'Subreddit': 'Javascript', 'Reddit_Title': ""I've been a backend Java developer for the past 1.5 years. I'm starting a new job as a frontend Javascript developer. How should I prepare for this new role?"", 'CommentAuthor': 'None', 'Comment': ""Definetly read about how 'this' works.\nI also came from Java with a certain understanding of how it is supposed to work. Oh boy, at some points i was doing wizardry until I read this:\n\nhttps://github.com/getify/You-Dont-Know-JS""}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I've been a backend Java developer for the past 1.5 years. I'm starting a new job as a frontend Javascript developer. How should I prepare for this new role?"", 'CommentAuthor': 'rauschma', 'Comment': 'Java/C#/C++ programmers are the main target audience of my JavaScript books (which are free to read online): http://exploringjs.com'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I've been a backend Java developer for the past 1.5 years. I'm starting a new job as a frontend Javascript developer. How should I prepare for this new role?"", 'CommentAuthor': 'GoldenRetrieva', 'Comment': 'I really like the head first series of books for beginning/syntax stuff because theys explains it to mah brains better than just reading a manual.'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I've been a backend Java developer for the past 1.5 years. I'm starting a new job as a frontend Javascript developer. How should I prepare for this new role?"", 'CommentAuthor': 'martiandreamer', 'Comment': 'Don‚Äôt mix up Java and JavaScript when holding conversation with your peers :-)'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I've been a backend Java developer for the past 1.5 years. I'm starting a new job as a frontend Javascript developer. How should I prepare for this new role?"", 'CommentAuthor': 'Curseive', 'Comment': 'NEVER, EVER, EVER, JSP.'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I've been a backend Java developer for the past 1.5 years. I'm starting a new job as a frontend Javascript developer. How should I prepare for this new role?"", 'CommentAuthor': 'None', 'Comment': 'Learn front end tooling, and learn how JS\'s OOP model works. It is almost but not quite entirely unlike Java\'s OOP model, and thinking ""Java"" while writing Javascript will probably drive you crazy.  They\'re very different, despite the superficial similarities (which, including the name, only exist for historical marketing reasons).'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I've been a backend Java developer for the past 1.5 years. I'm starting a new job as a frontend Javascript developer. How should I prepare for this new role?"", 'CommentAuthor': 'Architektual', 'Comment': 'Buckle up.'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I've been a backend Java developer for the past 1.5 years. I'm starting a new job as a frontend Javascript developer. How should I prepare for this new role?"", 'CommentAuthor': 'matt3224', 'Comment': '[brace yourself](https://media.tenor.com/images/cf96d72e62aff2b2679ccab6a0efb90b/tenor.gif) '}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I've been a backend Java developer for the past 1.5 years. I'm starting a new job as a frontend Javascript developer. How should I prepare for this new role?"", 'CommentAuthor': 'None', 'Comment': 'Eloquent JavaScript '}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I've been a backend Java developer for the past 1.5 years. I'm starting a new job as a frontend Javascript developer. How should I prepare for this new role?"", 'CommentAuthor': 'Angulant', 'Comment': 'Learning typescript will probably be easier for you as learning JavaScript. ;) I can only promote it. Very happy with typescript\n'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I've been a backend Java developer for the past 1.5 years. I'm starting a new job as a frontend Javascript developer. How should I prepare for this new role?"", 'CommentAuthor': 'guicamillo', 'Comment': 'Get to know JS. How it works, it‚Äôs flaws and everything else. Forget React, Angular and anything fancy for now. Once you‚Äôve mastered vanilla, then go for the newer stuff. '}]"
Javascript,Looking for a decent frontend library that does not require a build step,https://www.reddit.com/r/javascript/comments/7nmhy2/looking_for_a_decent_frontend_library_that_does/,3,17,nawariata,1514900830.0,"I often make small personal tools and apps, that use simple GUI. For these webpack and friends are grand overkill, so I use React 13.3, last version that ships with transformer and does not require to be built. It's working well, but I also use modern React and it's getting harder and harder to use same library with such feature and style discrepancy, so I want to switch to something else for my small projects. What could you recommend?","[{'Subreddit': 'Javascript', 'Reddit_Title': 'Looking for a decent frontend library that does not require a build step', 'CommentAuthor': 'None', 'Comment': ""[Hyperapp](https://github.com/hyperapp/hyperapp) is tiny, written in ES5, and doesn't require JSX (although it can be written in JSX as well).""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Looking for a decent frontend library that does not require a build step', 'CommentAuthor': 'acemarke', 'Comment': ""React doesn't need a build step.  As shown in [this simple index.html file](https://raw.githubusercontent.com/reactjs/reactjs.org/master/static/html/single-file-example.html), you only actually need two simple script tags for `react` and `react-dom`.  If you do want to use JSX syntax in the HTML page, that file also shows you can use `babel-standalone` as a script tag.\n\nSince `babel-standalone` _is_ pretty big, there's options if you want other alternatives to JSX syntax.  For example, the [`react-hyperscript-helpers` library](https://github.com/Jador/react-hyperscript-helpers/) is a useful set of factory functions that look like `div('.foo', [ h2('Hello, world') ])`.  Also, Dominic Gannaway's [`t7` library](https://github.com/trueadm/t7) uses ES6 tagged template literals to provide a JSX-like syntax that's compatible with React.  There's plenty of other options available as well.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Looking for a decent frontend library that does not require a build step', 'CommentAuthor': 'mitchew', 'Comment': 'vue.js'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Looking for a decent frontend library that does not require a build step', 'CommentAuthor': 'ArcanisCz', 'Comment': 'If you dont neend JSX, it seems you can use new react as well.\n\nhttps://medium.com/@clmyles/react-without-npm-babel-or-webpack-1e9a6049714\n\nhttps://shinglyu.github.io/web/2016/04/06/minimal_react.html\n\nor Preact\n\nhttps://medium.com/@alexkrolick/writing-react-components-for-3rd-party-embedding-50331c18e26'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Looking for a decent frontend library that does not require a build step', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Looking for a decent frontend library that does not require a build step', 'CommentAuthor': 'nosrek', 'Comment': 'Either write a utility library for building/updating ui elements or use a library that does this like jquery.\n\nIf you want more of a react feel, I think this creates a nice balance: https://github.com/stasm/innerself'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Looking for a decent frontend library that does not require a build step', 'CommentAuthor': 'SkaterDad', 'Comment': ""I'd second this.  It's my go-to lately.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Looking for a decent frontend library that does not require a build step', 'CommentAuthor': 'nawariata', 'Comment': ""I'll check it later, but not a fan of the syntax.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Looking for a decent frontend library that does not require a build step', 'CommentAuthor': 'nawariata', 'Comment': ""I don't need JSX, but definetely something like it. Someone proposed hypersript above, but I don't think I can go back to writing in such style.\n\nAlso found riot.js, that comes close. ""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Looking for a decent frontend library that does not require a build step', 'CommentAuthor': 'nawariata', 'Comment': ""Configuration is not a problem, I have my own React starter kit for more advanced projects. I'm just looking for simplicity really.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Looking for a decent frontend library that does not require a build step', 'CommentAuthor': 'None', 'Comment': ""What part of the syntax exactly? This is probably about as good as you're gonna get for minimal + no build step + full featured.""}]"
Javascript,Thought experiment: designing a vanillaJS frontend,https://www.reddit.com/r/javascript/comments/7h2p4s/thought_experiment_designing_a_vanillajs_frontend/,13,18,Flyingskwerl,1512222412.0,"Hi, I'm new to this sub but I'm a long time frontend dev. I've worked with Dojo, JQuery, Backbone, React, and most recently, Angular.

A random thought struck me recently: what would we do on a large project in 2017, if there were no frontend frameworks?

For some reason I can't let this go. So I thought it would be fun to post the concept here and see if anyone wants to join in.

Questions:

* Would you transpile from another language, and if so, what?

* How would you structure your code?

* What capabilities / browsers would you support?

* Would you request JSON or HTML from the server, or both?

* Would you test your code and with what?

* What build tools would you use?

* How would you import and use external libraries and utilities?

* How would you avoid namespace collisions?

* Would you make your app an SPA?

* What are the main challenges / problems you would face?


","[{'Subreddit': 'Javascript', 'Reddit_Title': 'Thought experiment: designing a vanillaJS frontend', 'CommentAuthor': 'tme321', 'Comment': "">Would you transpile from another language, and if so, what?\n\nTypescript\n\n>How would you structure your code?\n\nSome sort of formalized state management.  It wouldn't absolutely have to be redux style but I have yet to see a better alternative in front end.\n\n>What capabilities / browsers would you support?\n\nEvergreen but mobile is *way* to important to ignore.  IE 11 and less though forget about it.\n\n>Would you request JSON or HTML from the server, or both?\n\nIn an ideal world where anything is possible both would be nice.  But there are performance considerations when the front end isn't completely in control of the view, whether virtual dom or something else.\n\n>Would you test your code and with what?\n\nOf course tests are required.  The what isn't very important to me as long as it works.\n\n>What build tools would you use?\n\nOther than typescript as already mentioned I don't actually care if it specifically used webpack or not.  Or any other particular build tool.  Just make it work, document it, and provide a cli to get started.  A more extensible cli than the major frameworks generally offer would definitely be interesting but I'm not 100% sure of all the ramifications there.\n\n>How would you import and use external libraries and utilities?\n\nNpm?  Is there really any other good choice?\n\n>How would you avoid namespace collisions?\n\nFor the library itself?  Angular did it right by prefixing all their modules with @angular.\n\n>Would you make your app an SPA?\n\nThis depends on what the app is.  But if we are talking js front end frameworks then yes generally if I'm using one it's for an spa.\n\n>What are the main challenges / problems you would face?\n\nPerformance, state management, the usual really.\n\nOne thing I'd want to do is really use rxjs or at least a similar observable library.  Like really make it a part of the framework that is fully exposed and that devs are absolutely forced to use.  This might hurt adoption rates but I think it opens a lot of possibilities.  \n\nI've wondered just how far you could take rxjs as the pipeline for basically the entire application and maybe throw react in for the view.  But really make the framework based around reactive observables.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Thought experiment: designing a vanillaJS frontend', 'CommentAuthor': 'spacejack2114', 'Comment': ""I'd probably end up writing a poor copy of my favourite framework that covered my use cases then carry on as usual.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Thought experiment: designing a vanillaJS frontend', 'CommentAuthor': 'stilloriginal', 'Comment': 'I tried this.  I made a fully functioning plain js app that was a data grid with full edit/copy/add/delete functionality in-line.  It worked good.  Later I upgraded it to be component based. Meaning I would take an element on the page and initialize it with my constructor.  This added click listeners and things like that to make the app automatically do cool stuff.  All of the data was contained inside the html itself.  The element got filled with more html using a template function I wrote.  The next step was to do the inserting/deleting of elements less manually, so i started looking into how virtual dom works.  Then said fuck it, why am I re-writing vue or react?  And just switched to vue, because it was already everything I was trying to make, after I realized virtual dom IS manual dom manipulation.  And the template system is better than the one I wrote.  The learning cure on vue was a million times steeper, but I don‚Äôt see how you can get away with not having virtual dom anymore.   '}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Thought experiment: designing a vanillaJS frontend', 'CommentAuthor': 'Flyingskwerl', 'Comment': 'Heres mine:\n\n* Would you transpile from another language, and if so, what?\n\nNo - I would write all code in ES5 for easier debugging, but add an optional transpiling step if others on the project wanted to use Es6.\n\n* How would you structure your code?\n\n1 file per component, arranged in folders by page.\n\nProbably a single ""main.js"" bundle + page specific bundles.\n\n* What capabilities / browsers would you support?\n\nFF latest, Chrome latest, IE9+, all iOS, and 90% of mobile Android users.\n\n* Would you request JSON or HTML from the server, or both?\n\nJSON for ajax requests, HTML for pages.\n\n* Would you test your code and with what?\n\nYes, with Selenium.\n\n* What build tools would you use?\n\nWebpack.\n\n* How would you import and use external libraries and utilities?\n\nI would use Webpack to assign each library to its own global namespace and load them in each page with require().\n\n* How would you avoid namespace collisions?\n\nRequire() + global namespace using Webpack if needed.\n\n* Would you make your app an SPA?\n\nNo.\n\n* What are the main challenges / problems you would face?\n\nMain challenge would be complex DOM manipulation in vanillaJS. This can be avoided by just keeping to the SSR pattern, so I would resist pulling in React or jQuery at first, but it would probably find its way in.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Thought experiment: designing a vanillaJS frontend', 'CommentAuthor': 'None', 'Comment': ""My personal guiding rules:\n\n* Eliminate all build tasks to run the application.\n* Preserve state at all times.\n* Never send code to a server.\n* Avoid and reduce reliance upon dependencies.\n\n\nI have slid on the *no build tasks* rule a bit since moving to TypeScript, because you have to compile between writing code and running it.  So now I have a minimal build task in place to compile TypeScript, perform ESLint validation, load libraries to create an experience that runs with Node.  The final step is to take the Node app and convert it into something that can run in the browser.  That is really as simple as put all the code into a single file and change reference from *global* to *window*.\n\nI reconcile that I must have a build process now I have a node process that executes *fs.watch* and automatically runs the build when there is a change to certain files and then uses web sockets to refresh a status or test page in the browser, and automatically run the code in the browser upon web socket refresh.  It is automated enough that it is kind of like not have a build task, except for the 1.5-2 second delay.\n\nThat said I need a universal way to organize my code.  I absolutely refuse to jump through a bunch of bullshit hoops to perform environmental specific builds and unload massive dependencies on my users.  What I do is create a project specific object and attach it to Node's *global* reference.  All my code for an application goes into my big object.\n\nSo at the global, library (file) sharing level, the application is organized as a multi-tiered object.  That is the first time and last time I will use objects to organize any code.  It is extremely efficient and eliminates all manners of ritual and ignores Node's differences to ES6 modules.  The way this works is that for Node only I will have a build file that requests, using Node's *require*, to load the necessary files and those files assign their code to the proper place in the application's object on global.  The application object will contain all the working code and so it can be used directly, with some minor changes, to write the browser application.\n\nInternally to the app the code knows where all the pieces are using the organization described above.  For example if I needed to access another library from a given library it would be something like `global.myApplication.beautifyUtility.script` or an extreme shorthand of that.  Internally to the libraries everything is organized as nested functions.  This makes for, again less code rituals and other bullshit.  I never use `this`, `new`, or any other OOP madness in my code unless a third-party dependency makes me.  Coding like that, can execute much faster, but faster execution through OOP in JavaScript isn't common.  You really have to know what you are doing.\n\nMy code is internally organized as nested functions or ES6 blocks for scope.  This is faster in most cases because it is the most direct means of resolving shared references (scope chain and reference resolution) and you don't have to dick around with prototype chains.  It also makes the code easy to read, as it is well structured.  The most important aspect of this is that structured well planned code takes longer to write, but is superior for maintenance.  The code executes (almost) exactly how it is read.\n\nI used to worry about supporting all browsers and environments.  About 6 months ago I decided to move from JavaScript to TypeScript and abandon `var` for `let` and `const`.  If your browser still forces `var` then my code won't run there.  This helps me eliminate most, not all, of my IIFEs in my code.  It also lets me see when I am attempting to reassign to a constant.\n \nPoints I haven't addressed:\n\n* I never send things back to the server and less there is a business requirement that forces such or unless I need to do something that cannot (or should not) be done in a browser.  I have for a long time used a CURL on a server to bypass CORS in the browser.\n* When I have to send things across the wire I prefer JSON 99% of the time, because it is small.  XML is a far more intelligent format which is helpful in those rare cases where you need more intelligent things.\n* The only opportunity for a namespace collision external to my app is the name of the application on *global* and *window*.  I lower this risk with a specific name of moderate length, like *parseFramework*.\n* SPA is really a browser only consideration.  Whether I prefer a SPA or not depends upon the requirements of the app.  A SPA can be really convenient for the user, but with large apps this can quickly get out of control and turn into a ball of crap.  Not matter what I will save state of all user interactions and store this state data in localStorage.  I really believe most large Frameworks make this far more complicated than it should be.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Thought experiment: designing a vanillaJS frontend', 'CommentAuthor': 'cirsca', 'Comment': 'Building a small-to-medium sized app in vanilla js with RxJS is a great way to solve the complexity with the least amount of abstraction!'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Thought experiment: designing a vanillaJS frontend', 'CommentAuthor': 'Flyingskwerl', 'Comment': 'Interesting, Ill have to check out RxJS'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Thought experiment: designing a vanillaJS frontend', 'CommentAuthor': 'tme321', 'Comment': ""Angular doesn't use a virtual dom.  It does use change detection though which only rerenders the view when bindings change.  Which is very loosely the same idea.  But it's explicitly not a virtual dom.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Thought experiment: designing a vanillaJS frontend', 'CommentAuthor': 'tme321', 'Comment': 'Did you just recreate angularjs with modern tooling?  ;)'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Thought experiment: designing a vanillaJS frontend', 'CommentAuthor': 'senior_poopy_pants', 'Comment': 'Check out [cycle.js](https://cycle.js.org) . Andre Staltz has a great [egghead course](https://egghead.io/courses/cycle-js-fundamentals) that walks through his  motivation of the library and shows you how to build with it. It leveraged streams (not rxjs) heavily.  '}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Thought experiment: designing a vanillaJS frontend', 'CommentAuthor': 'stilloriginal', 'Comment': 'I get your point.  But either way, these functions are very complicated.  I was writing a separate function for each ‚Äúthing‚Äù to put it in the right place...not very efficient.  '}]"
Javascript,"Help: Applied for a job as a frontend dev. They didn't take me, what did I do wrong?",https://www.reddit.com/r/javascript/comments/4fo2hi/help_applied_for_a_job_as_a_frontend_dev_they/,6,57,Kriegslustig,1461168459.0,"I created [this interactive JS app](https://lucaschmid.net/resume-wimdu) and send it to them. They said that they were searching for someone more senior, but complimented me on my creativity. What did I do wrong?

Right now I'm thinking that I should have made the whole thing less elaborate. So for my next application I'll probably use a simpler layout. Any suggestions on what else might have turned them off?

**Update**: Alright, I learned a lot from this. Thanks a lot to everyone that took the time to check out my resume and commented here to help me. Here's the gist of what I did wrong:

**TL;DR;**: Too long, too slow, too little actual work experience, too flashy, too humble, too idealistic.

* Didn't mention ANY actual work experience (and if I could work in a team).
* UX is awefull, takes a long time to get to what their actually interested in.
* Design was way too flashy, should have focused on the content instead.
* Code Style is too, let's say _idealistic_. I should use more popular frameworks and coding styles.
* Texts should be very clearly aimed at HR people and technical people. They both don't have a lot of time on their hands.
* Restructure the skills section. Previous projects are the most important thing in the application. I should have written about experience in a technology as it relates to a real world project.
* Don't be conservative when estimating your skill level.

Gonna mark this as solved. Thanks again :)
","[{'Subreddit': 'Javascript', 'Reddit_Title': ""Help: Applied for a job as a frontend dev. They didn't take me, what did I do wrong?"", 'CommentAuthor': 'azium', 'Comment': 'Could it be they were just, as you say, looking for someone more senior? We turn down a lot of really good junior / intermediate devs at our job for the same reason. '}, {'Subreddit': 'Javascript', 'Reddit_Title': ""Help: Applied for a job as a frontend dev. They didn't take me, what did I do wrong?"", 'CommentAuthor': 'pmYourFears', 'Comment': 'I don\'t see any previous work on production/non-academic projects listed. \n\nUnless the job was tangibly related to Meteor your Github page might give the impression you don\'t have a lot of practical experience. \n\nAlso you say it\'s a frontend dev job, but to be honest your site misses the functional design goal of a resume page, which is to allow someone to quickly and effectively navigate what you have to offer the company. \n\nI mean, more than half the page on my screen is just random pictures and the other half is not easy to navigate (the section buttons don\'t even have labels). It took me way too long to scan to see if you had any previous jobs listed.\n\nCreativity in this case might be a euphemism for ""too flashy, not enough meat"".  \n\nAll that said, I wouldn\'t give up! It\'s good to put yourself out there so you can learn to harden your soft spots.'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""Help: Applied for a job as a frontend dev. They didn't take me, what did I do wrong?"", 'CommentAuthor': 'bonafidebob', 'Comment': ""Well it's really slow and crashed the embedded browser in AlienBlue, so maybe that has something to do with it...""}, {'Subreddit': 'Javascript', 'Reddit_Title': ""Help: Applied for a job as a frontend dev. They didn't take me, what did I do wrong?"", 'CommentAuthor': 'lhorie', 'Comment': ""> They said that they were searching for someone more senior\n\nYour CV says you're fresh out of school: https://lucaschmid.net/resume-wimdu#/en/03_cv\n\nWere you applying for a senior position? If so, you need to at a bare minimum demonstrate some experience working in a team (and by working, I mean at a job). If you just sent a generic application and was hoping for a junior position, then it's probably just a case of bad timing/not being a good fit for currently open positions.\n\nIn terms of content, it comes across as describing that you're someone who is interested in learning (which may be true and is fine if it is true), but you're marketing yourself here, and the person reading wants to see someone who can bring something useful to the table to contribute to their business, not someone they will potentially need to spend time to train/coach/hand-hold.\n\nUX: first page is pretty useless, links only appear in third page and there's no menu (and the dots on the side are missing title attributes...). The order of sections is very weird, use a traditional resume structure (contact/education/misc or contact/work experience/education/misc). Content density is fairly low.\n\nHighlight your work in your portfolio, and give brief descriptions of how you have overcome challenges. Also, don't highlight popularity in a project w/ only 24 stars... Explain what problems you're solving instead.\n""}, {'Subreddit': 'Javascript', 'Reddit_Title': ""Help: Applied for a job as a frontend dev. They didn't take me, what did I do wrong?"", 'CommentAuthor': 'nhavar', 'Comment': ""1) it's 11 pages - you're not going to get past the first round of evaluations with that. Make a single page that's clean, concise, and largely static\n\n2) it's too slow (see #1) - you're going to lose people who just want to skim and get through reviews quickly to see if they need to pass it to the next level of review\n\n3) The images are overwhelming and create the wrong visual hierarchy. You're primary focus should be the content and the images should be used as a background. They should also have some alignment to the topic but instead seem entirely random.\n\n4) make sure you capture all of your experience, especially if you don't have much. Be ready to talk about that experience with confidence. Even if the experience is just personal demo projects to learn a library or language, you want to be able to show a willingness to step outside of your comfort zone, learn, and troubleshoot. \n\n5) Shoot for the right target - make sure that you're applying for the position that fits right at or just above your current skillset. I.E. if you have only college experience shoot for an internship, if you've been an unpaid intern shoot for paid, then shoot for Junior then shoot for regular Front-End Developer. Usually Engineer titles can be reserved for more senior developers so you might want to look for just Front-End Developer instead (which sometimes is also a junior position)""}, {'Subreddit': 'Javascript', 'Reddit_Title': ""Help: Applied for a job as a frontend dev. They didn't take me, what did I do wrong?"", 'CommentAuthor': 'None', 'Comment': 'As far as the online resume:\n\n* It looks really cool and the interaction and scroll transitions work really well\n* The modification to the history (changes to the page address) are really annoying.  Consider instead using `window.replaceState` to replace the current step in browsing history, or my old school favorite: `location.replace()`\n* None of the page content displays in Firefox.  I only see the pretty background images.  Always test in multiple browsers.\n\nAs far as becoming more senior I recommend this guidance:\n\n* https://github.com/prettydiff/wisdom/blob/master/Web_Education.md\n* https://www.reddit.com/r/javascript/comments/4fmjgn/i_have_learned_about_context_hoisting_inheritance/d2aaw40'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""Help: Applied for a job as a frontend dev. They didn't take me, what did I do wrong?"", 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""Help: Applied for a job as a frontend dev. They didn't take me, what did I do wrong?"", 'CommentAuthor': 'xyphanite', 'Comment': 'This may be a trivial point, but you should always have someone check your grammar. While the company is based in Berlin, if your resume is going to be in English, your grammar and spelling should be perfect. You have ""Shatner"" commas all over the place that make the readability of your content difficult. \n\nI also agree with the comments above. When a company first encounters a candidate, you shouldn\'t expect them to spend more than about 20 seconds looking at something. So you need to wow them right away and then keep them interested. The images take away from *You*. You are the story, so make it about you, not the page. You could fit all of this content on 2 pages. It doesn\'t have to be static, but it also shouldn\'t take a hiring manager as much work as it does with your current site to know your story. \n\nThat said, it\'s a cool concept, but needs editing, revision, and restraint. Those are things that senior devs have because of experience. Keep on going, just edit, edit, edit, and always ask for feedback. \n\nEDIT: I see that you have a German version as well - if I could read German, I\'m sure it would be great grammar. Just work on your English if you\'re going to have it. :)'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""Help: Applied for a job as a frontend dev. They didn't take me, what did I do wrong?"", 'CommentAuthor': 'JustADudeInSpace', 'Comment': ""You have a lot of cool stuff on GitHub, I think you'll get it next time.  It all comes down to the interview and how well you can sell yourself, don't be afraid to correct the interviewer if you feel like they are belittling your talents.""}, {'Subreddit': 'Javascript', 'Reddit_Title': ""Help: Applied for a job as a frontend dev. They didn't take me, what did I do wrong?"", 'CommentAuthor': 'hex13code', 'Comment': 'You\'re just late. In 2010-2012 maybe it website would be considered cool, but the thing is that in 2016 there are ton similar websites like yours with spinning loaders, big images and with ""very scrollable, wow"" kind of vibe. It\'s cliche. (I mean in this particular case I think that your website is somewhat original and it reminds me some sort of colorful paper magazine. But stil, first impression was: ""omg. Again one-scrollable-website like million others""). \n\nBesides your website doesn\'t scroll fluently so it\'s not very pleasant, there are some lags. Framerate is surely not 60FPS.\n\nBesides you are too honest. It\'s a game and you certainly don\'t want to admit that you have only 2 points in Angular. If you changed to 5 or 8 I think you would be seen as a more professional (I\'m cynical, but recruitement process in IT is seriously broken in many firms)\n\nSpeaking of that. You wrote ""They said that they were searching for someone more senior"" but read between lines. Sometimes these kinds of answers are just nice way of saying ""We\'re not interested, we don\'t like you, we\'ve found someone else, go away"". Actually it\'s hard to judge your skill level/seniority based on your website alone. But you put there links to GH so I think that if I wanted to judge your skills I would rather read your contributions on GH (but it takes time. I won\'t do it now ;)\n\n'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""Help: Applied for a job as a frontend dev. They didn't take me, what did I do wrong?"", 'CommentAuthor': 'neb636', 'Comment': 'Code seems hipster and over engineered. Also this quote ""My job must be a place, where I can learn something new every day."". That seems kinda like a tall glass to fill. I might talk more about the value proposition you offer the company.'}]"
Javascript,API Design best practices: Choose data to pull on frontend or backend?,https://www.reddit.com/r/javascript/comments/405e8s/api_design_best_practices_choose_data_to_pull_on/,30,26,henrymatt,1452323687.0,"Hi all,

A more-than-healthy level of self-consciousness and trust in the power of Google means that I very rarely ask questions, but I've yet to find a good answer to this question. Maybe I'm wording the problem in strange terms. Oh well, here I go.

I'm working on a relatively complex app. The backend is powered by Node/Express, it runs off a MySQL DB with Sequelize as an ORM, and the frontend is AngularJS 1.

The app is currently fully functional, and as I learn more about API design, I've been refactoring it to follow best practices. This is where I need advice, because I'm not sure about the best practices for the following scenario:

When pulling data from a database for display or manipulation, where should you specify the rows and related tables that you'll need for a certain view?

My first stab at this question was to do it all on the backend. I would have a view which required certain data (for example: a list of projects, the tasks needed to complete each project, and the person assigned to each task), so I would create a custom route all on the backend. I would cross-reference what data I needed to display on the view, and limit what I pulled from the database to be as lightweight as possible. Then I would add that custom route to my data service and call it from my controller. Bingo, all the data I need.

Approach 1

View Model: Call ProjectService.getRecentProjects()

GET /api/projects/recent

Returns array of the exact data I need for Recent Projects view.

But there are a number of things I don't like about this approach:

- If I wanted to add a property to the view, I would need to also edit the backend to add that property to the route.

- If a property were no longer needed on the view, and I wanted to keep the calls to the DB as lean as possible, I would need to remove that property from the route.

- I end up with a bunch of very specific routes which are useless outside the context of the view it was created for.

- It feels like I'm not following good MVVM practices.

So now I'm considering a different approach, where I would make the routes for an endpoint accept a config object to specify exactly what related records and properties I will need from the route. 

Approach 2

View Model: create configObject which defines what properties and related records I need, and how to filter the data

Call ProjectService.getList(configObject)

GET /api/projects?[filters, list of properties interpreted from configObject]

Returns array of the exact data I need for Recent Projects view.

This approach solves a lot of the problems I disliked about the first approach, but I'm wondering if it's actually the best practice. Looked at a certain way, it almost seems like I'm getting further away from MVVM best practices, because I must specify so much information about the database in my view model. Maybe there are more problems I'd be introducing that I don't currently see.

I hope I explained myself decently. Does anyone have any advice? On a larger project where the front and backend development are done by different people or teams, how is this problem commonly solved? 

Thanks for reading!","[{'Subreddit': 'Javascript', 'Reddit_Title': 'API Design best practices: Choose data to pull on frontend or backend?', 'CommentAuthor': 'fcanela', 'Comment': 'Hello, Henry.\n\nI have developed several APIs and I am active member of several API meetups.\n\nIn first place, avoid the temptation to tailor your API like a suit for your web frontend. Well done coming here and asking for good practices.\n\nI think your second approach is the winner and could work well if you follow REST practices. \n\nThe **""/recent""** resource is a bad idea, IMHO. In first place, **""recent"" is not a valid REST resource**. You can check if something fits under resource category because it is a noun. Recent is a adjetive and it place could be a query selector. In second place, what you are saying is that ""project"" have a subresource ""recent"". **What will happens if you want to add a ""recent"" property to your project in the future?** How will you be able to access it?\n\nI suggest you the following schema:\n\n**GET /api/v1/projects/?by=date;order=desc;limit=50**\n\nWhich will lead you to develop a generic sorting system. If this is too much hurdle for you, go for:\n\n**GET /api/v1/projects/?lastest=50**\n\nThis could work well and will give you no conflict, but if you abuse from specific query selectors you could end having too much.\n\n*Extra tip: Add versioning. Choose if you prefer placing it in domain name or base path, but do it to avoid future hurdles. Others do in ""headers"". I suggest you against (ask if you wonder why, I just don‚Äôt want to overextend)*'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'API Design best practices: Choose data to pull on frontend or backend?', 'CommentAuthor': 'ShippingIsMagic', 'Comment': ""The latter certainly seems closer to the Relay / GraphQL / Falcor approach. Since you're using MySQL, maybe look at this project?\n\nhttps://github.com/mickhansen/graphql-sequelize\n\nThe client saying exactly what it needs and the server fulfilling that request in a way that doesn't require changing the server each time new bits of data are needed in the call is a better path, IMHO.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'API Design best practices: Choose data to pull on frontend or backend?', 'CommentAuthor': 'ComplX89', 'Comment': 'Hi Henrymatt. I would always keep my front end js calls to api endpoints which ask for data. Not specifically ask for fields and rows. If that were the case it would be easier to datamine your api. And any changes to the app would generally change both front and back end. But anything away from the communication between front and back is still separate.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'API Design best practices: Choose data to pull on frontend or backend?', 'CommentAuthor': 'None', 'Comment': ""It's okay to have api endpoints for important special cases or, if using RDBMS, compounded or aggregated objects,  but filtering,  sorting and searching should be done using GET or POST payloads (key-value parameters). ""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'API Design best practices: Choose data to pull on frontend or backend?', 'CommentAuthor': 'Bloompire', 'Comment': ""I've though about this recently. Beware: I am NOT experienced Node.js and SPA applications developer, I am still learning this.\n\nBut I'd divide my backend code into two layers:\n\ndata and commands.\n\nData layer should be just REST routes mapped into database hits with some authorization rules (like /users/2 should return http code forbidden if called in the user of id 1 context). Then I'd decide my frontend to filter, paginate, sort data using request parameters (ie. your method #2).\n\nSecond layer should be REST post routes that are making specific backend commands that have to be on server side, like making an /api/command/pucharse-product , /api/command/register-user.\n\nBut I might be wrong so please more experienced devs to correct me.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'API Design best practices: Choose data to pull on frontend or backend?', 'CommentAuthor': 'third-eye-brown', 'Comment': ""We have a very stable backend API on which we can implement our front end without changing the backend.  We use a rest API where you can choose which fields to fetch, with paging and sorting.  Collection fields are refs to the full object.  You have to make a lot of API calls sometimes to get all the data you need, but we never have to make backwards breaking changes to the API.   It works.  Probably not as fun as some fancy new framework like graphql, but it's a solid solution.  \n\nI think you are moving in the right direction.  ""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'API Design best practices: Choose data to pull on frontend or backend?', 'CommentAuthor': 'fcanela', 'Comment': ""By the way, I am always interested in talking about API's and JavaScript development (whatever it's back or front) with other people with curiosity.\n\nIf you want to, feel free to PM me.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'API Design best practices: Choose data to pull on frontend or backend?', 'CommentAuthor': 'None', 'Comment': '[removed]'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'API Design best practices: Choose data to pull on frontend or backend?', 'CommentAuthor': 'henrymatt', 'Comment': 'This is brilliant. I had no idea about GraphQL!'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'API Design best practices: Choose data to pull on frontend or backend?', 'CommentAuthor': 'henrymatt', 'Comment': ""All things considered, the problem I'm running into by crafting API endpoints for every purpose isn't so terrible. I don't feel limited whatsoever by the technology, just a sense that could be a better way. The point about opening up your API to datamining is a good one though. With more powerful endpoints, the need for securing the API is even stronger.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'API Design best practices: Choose data to pull on frontend or backend?', 'CommentAuthor': 'nothingbutt', 'Comment': ""This is the typical way I've done it in the past. But GraphQL or a query language like it would allow not having to change the backend when changing the frontend or vice-versa. That is a nice win too as you can decide how many different XHR requests you want too. That means if one data set is a bit slower, it can be pushed off to a separate request. Or if content is loaded that is out of sight/inactive, it can be requested after the primary content request.\n\nThe data mining point is a good one but I think for most, the benefits of decoupling are worth it. Making development much harder purely to avoid mining seems a bit pointless as if someone wants to mine, they'll do it no matter how many roadblocks are in place. But of course there is likely a flip side where the domain makes it necessary.\n\nThe other facet is really the mining issue should be pushed off as a separate concern. You could use something like GraphQL but have another system that is responsible for monitoring how the API is being used and disabling/throttling/notifying based on suspicious behavior. That seems more robust in the end too.""}]"
Javascript,Whats the most up to date frontend tech stack?,https://www.reddit.com/r/javascript/comments/3tqe3i/whats_the_most_up_to_date_frontend_tech_stack/,22,120,Emnalyeriar,1448138126.0,"Hey there reddit

On my free time I'm coding a project mostly for learning purposes. Right now I'm working on backend just to get started with django rest framework. When I'm done with that I'd like to pip up my frontend. Im mostly familiar with angular 1.x but wanted to try something else. Whats hot right now? React combined with some framework? Redux? Backbone? Maybe even try Angular 2.0 ?","[{'Subreddit': 'Javascript', 'Reddit_Title': 'Whats the most up to date frontend tech stack?', 'CommentAuthor': 'StoneCypher', 'Comment': 'The most ""up to date"" tech stack is the one some guy just wrote 20 minutes ago that doesn\'t work.\n\nThe answers you\'ll get in here will be people promoting their tech stack of choice.\n\n""Up to date"" is not a valid approach to choosing tools.  You\'ll get hipster bullshit that\'s abandoned in three weeks.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Whats the most up to date frontend tech stack?', 'CommentAuthor': 'Dirty_Rapscallion', 'Comment': 'React Redux and Webpack with a babel transpiler.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Whats the most up to date frontend tech stack?', 'CommentAuthor': 'ahRose', 'Comment': 'Flash'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Whats the most up to date frontend tech stack?', 'CommentAuthor': 'None', 'Comment': ""HTML + CSS + Javascript + Common sense of when to use what\n\nEdit: Okay that sounded harsh, I'm sorry. I was meaning that fundamentals are key with front-end. Personally, I'm actually flabbergasted Jquery is still being used AND IS ACTUALLY REQUIRED (GASP) by some packages.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Whats the most up to date frontend tech stack?', 'CommentAuthor': 'Capaj', 'Comment': ""> Backbone?\n\nBackbone was first, but it didn't really evolve into anything after the release.\n\nCertainly react. React rullez.  I wouldn't be surprised if JSX got standardized as ecma standard in ES2016-2018.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Whats the most up to date frontend tech stack?', 'CommentAuthor': 'brtt3000', 'Comment': 'That obscure framework I use obviously.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Whats the most up to date frontend tech stack?', 'CommentAuthor': 'snatchdracula', 'Comment': ""This question is why it's so hard to find a good front end developer. If you want to learn, build something in vanilla javascript.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Whats the most up to date frontend tech stack?', 'CommentAuthor': 'jseego', 'Comment': 'What you should do is spend a few weeks researching / sandboxing the main players: react, angular 2, knockout, ember, maybe a few others.\n\nGo through the documentation.\n\nGoogle ""{framework name} sucks"" on each one to find out what frustrations people out there are having.\n\nPlay around with a couple that you think fit your style.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Whats the most up to date frontend tech stack?', 'CommentAuthor': 'thestatusquotes', 'Comment': 'I think it depends on if your goal is ""I\'d like to learn frameworks and tools to help me create awesome but small in scope projects"" or if you\'re looking to make something larger. At my company we\'re currently migrating to a React + Redux (and associated libraries) and its awesome, but a lot more work and boilerplate than I would imagine necessary for an average front end project. Angular 2.0, although I don\'t have much experience with it personally, is probably a better choice for rapid prototyping as angular tends to handle things well out of the box. You\'ll find yourself struggling to do simple stuff with React and Flux because its built to scale first and foremost and often not built to just "" get things done"". (Sorry for lack of links I\'m on mobile).'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Whats the most up to date frontend tech stack?', 'CommentAuthor': 'Garrett00', 'Comment': ""We're using ember at my company for a relatively large scale application and it's holding up fine. Ember has been going through a serious make over recently. The 2.x branch is looking fantastic, super fast and easy to use. Comes with really helpful and simple CLI tools to kick things off for you. Also if you want to do some real time stuff, there is a great Ember Add-on for FireBase which allows for some amazing real time data work.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Whats the most up to date frontend tech stack?', 'CommentAuthor': 'None', 'Comment': '[deleted]'}]"
Javascript,Writing JS modules for frontend?,https://www.reddit.com/r/javascript/comments/3mnvek/writing_js_modules_for_frontend/,8,34,kwhali,1443415576.0,"I'm famliar with CommonJS on node, and tried out AMD with require.js(but didn't like it as some libs like Greensock were problematic to shim or some other issues). I've also seen UMD which is meant to wrap CommonJS/AMD/Global, and the more recent ES6 modules. 

Besides my require.js experience I'm still sadly writing Global js and just concatenating/minifying via Gulp. I like to work with Gulp and use Uglify, but I'd also really like to do frontend JS like I do with CommonJS modules in node or try ES6 modules. I know there is Webpack, Browserify and JSPM, I've read a bit about them and they handle this issue well, but can I use them just for this step and still handle(have control) over the rest with Gulp?

If you've had experience with Grunt/Gulp prior to these and then used one or more I'd love to hear the up/downs you experienced and why you might have migrated from Browserify to WebPack or JSPM. 

When you do use modules/bundling, do you stop using script tags for individual libs in your html? I'm referring to the third party libs that would create Globals or be AMD modules, I'm aware of Bower but would like to stick with just NPM(unless there is a good reason to use Bower instead?) which would be possible if I could use CommonJS modules. What about libs that aren't available via NPM/Bower? (I've noticed some very niche ones, I'm guessing I should find an alternative lib or learn to add NPM/Bower support and push a PR). Do you still use CDNs as well? I plan to serve assets via SPDY protocol with NGINX.

Lastly how flexible are these bundlers? Can you mix Global/AMD/CJS/ES6 modules if for whatever reason you can't get a common module format(eg third party libs). I've not used TypeScript, but if I join a project that does will the same process work? (I'm assuming this would be like ES6 modules, or need to be compiled to JS first).

Thanks :)","[{'Subreddit': 'Javascript', 'Reddit_Title': 'Writing JS modules for frontend?', 'CommentAuthor': 'mattas', 'Comment': ""> I know there is Webpack, Browserify and JSPM, I've read a bit about them and they handle this issue well, but can I use them just for this step and still handle(have control) over the rest with Gulp?\n\nYes, Webpack and Browserify have node modules that you can use to control them. Though you would only need to use one and not the other. \n\n> When you do use modules/bundling, do you stop using script tags for individual libs in your html? \n\nYes, I bundle all the dependencies together. \n\n> What about libs that aren't available via NPM/Bower? (I've noticed some very niche ones, I'm guessing I should find an alternative lib or learn to add NPM/Bower support and push a PR)\n\nI haven't actually hit this in practice although there is nothing stopping you from including an extra script tag. \n\n> Lastly how flexible are these bundlers? Can you mix Global/AMD/CJS/ES6 modules if for whatever reason you can't get a common module format(eg third party libs).\n\nIt depends on the bundler. I've found webpack to be pretty great with all the module formats. ES6 still requires a transpile step though, but is relatively simple with webpack + babeljs. \n\nI've recently switched from gulp + browserify to webpack and it's great! Obviously webpack is not a straight replacement for gulp, but it does a majority of what I had gulp do for me, yet the set up is so much simpler. ""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Writing JS modules for frontend?', 'CommentAuthor': 'kwhali', 'Comment': ""Regarding wanting to keep the pipeline with Gulp for other parts, I'm not sure how useful that is with JS, but with CSS I like to compile Sass then run the CSS through PostCSS plugins(autoprefixer, cssnano, etc), I don't think I'd want Browserify/WebPack/JSPM(?) to handle any part of that. Perhaps all I need is a gulp plugin that would convert modules into UMD and then just concatenate like usual if that'd work? Might be missing something though.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Writing JS modules for frontend?', 'CommentAuthor': 'Capaj', 'Comment': ""> What about libs that aren't available via NPM/Bower?\n\nWith JSPM, you can install straight from github:\n`jspm i github:lodash/lodash`\n\n> I plan to serve assets via SPDY protocol with NGINX.\n\nThen you SHOULD use JSPM. There is no point in using SPDY/HTTP2 with other package managers.\n\n> Do you still use CDNs as well? \n\nYes.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Writing JS modules for frontend?', 'CommentAuthor': 'mrv1234', 'Comment': 'check the other thread on Jspm its about this post http://blog.jhades.org/introduction-to-es6-modularity-the-jspm-package-manager-and-the-systemjs-loader/, \n\ni think thats what you are looking for. Its really easy to use and the module loader it comes with (SystemJs) is 10k. You can install transparently all sorts of modules from different sources (github, npm)'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Writing JS modules for frontend?', 'CommentAuthor': 'mattdesl', 'Comment': ""I haven't needed gulp, bower or AMD in a long time. Usually my demos are as simple as this, and make liberal use of npm modules:  \nhttps://github.com/mattdesl/spins/blob/gh-pages/package.json#L38\n\nA more complex webpack/browserify app might involve bundle splitting, hot reload, and other transforms. I would just start with the basics. \n\nhttps://github.com/Jam3/jam3-lesson-module-basics""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Writing JS modules for frontend?', 'CommentAuthor': 'kwhali', 'Comment': ""I'm not sure if WebPack could replace my Gulp tasks, but I am considering adopting one of these to handle the issue discussed here if there are no viable gulp alternatives. I'm assuming the two can work together(probably a webpack gulp plugin, haven't looked). If I just have webpack handling my JS(or specifically this bundle step), that should be perfectly doable right? If I handle html/css via gulp am I missing out on anything that webpack could offer, or can I pass those assets to webpack once I'm done with them during my build? I've heard about the hot loading feature, I'm using BrowserSync which hot loads html/css updates built by a gulp watch task, am I going to get any benefit here besides the JS hot loading? I'd like to continue using BrowserSync and others, so I'm concerned about webpack and the like(which seem to overlap a bit with gulps features/usage) causing conflicts with my current workflow.\n\nWhat were the learning curves like for you? Is there any reason I might want to stick with Browserify over WebPack or would you say WebPack is the better choice these days?""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Writing JS modules for frontend?', 'CommentAuthor': 'mattas', 'Comment': ""Browserify doesn't help with that step, though webpack can through its [loaders](http://webpack.github.io/docs/using-loaders.html), which are similar to gulp plugins.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Writing JS modules for frontend?', 'CommentAuthor': 'kwhali', 'Comment': ""I'm not sure about what you're saying about SPDY with JSPM? I was referring to my VPS using NGINX to deliver the assets via SPDY, these would be the final assets from a build, not using SPDY protocol with the package managers.\n\nDo you have any experience with Browserify or WebPack to compare with your JSPM experience?""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Writing JS modules for frontend?', 'CommentAuthor': 'kwhali', 'Comment': ""Thanks for that I've just quickly skimmed through it, will read it in full tomorrow(1.30am here). From what I glimpsed, it'll bundle modules into a single js file for me, but it also includes SystemJS(10k minified?), is there a reason it can't bundle to working JS without that like the others?(or perhaps it can?) I'll definitely look into giving it a try due to responses I'm getting here :)""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Writing JS modules for frontend?', 'CommentAuthor': 'kwhali', 'Comment': ""I'd still need Gulp for my tasks that work on CSS (linting, PostCSS plugins, libsass compiling etc), BrowserSync, dev/prod builds no? I'm wanting to add in ESLint, again this seems suited for Gulp and I wouldn't expect any of these tools handle that?\n\nNPM shell scripts are fine if they're going to be small like in the example you gave, but with my tasks it'd seem better to use Gulp and make use of the streams instead of writing/reading from disk for each one wouldn't it?(not that I'm likely to see speed issues on small projects.)\n\nWill go through the module basics tomorrow as well, thanks :)""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Writing JS modules for frontend?', 'CommentAuthor': 'mattas', 'Comment': "">I'm assuming the two can work together(probably a webpack gulp plugin, haven't looked).\n\nYou're exactly right.\n\n> If I just have webpack handling my JS(or specifically this bundle step), that should be perfectly doable right?\n\nCorrect.\n\n>  If I handle html/css via gulp am I missing out on anything that webpack could offer, or can I pass those assets to webpack once I'm done with them during my build?\n\nYou could if you would like, though I don't know if there would be a reason to. \n\n> I've heard about the hot loading feature, I'm using BrowserSync which hot loads html/css updates built by a gulp watch task, am I going to get any benefit here besides the JS hot loading? \n\nwebpack's dev server will load anything you tell it to 'test' (aka watch), including html and css if you would like. The hot loading (change without refresh) comes from webpack loaders that can do that (react-hot-loader for example). Not sure if there are hot loaders for html and css off the top of my head. \n\n> I'd like to continue using BrowserSync and others, so I'm concerned about webpack and the like(which seem to overlap a bit with gulps features/usage) causing conflicts with my current workflow.\n\nthe webpack dev server is completely seperate from webpack itself. I suggest using browsersync to keep hot loading if that's what you're doing and getting the output from webpack's gulp plugin. \n\n> (which seem to overlap a bit with gulps features/usage) \n\nWebpack isn't a replacement for gulp, it's a replacement for browserify, which in turn was what a lot of people used gulp for. Webpack + gulp works fine, we use it at production in my company.\n\n> What were the learning curves like for you? Is there any reason I might want to stick with Browserify over WebPack or would you say WebPack is the better choice these days?\n\nOverall i'm happy I switched. I found webpack to be much simpler to set up then gulp + browserify + gulp watch + some sass compiler + whatever else I had going on. \n\nThough, I recommend trying it out on a new project, rather than shifting an existing project over. ""}]"
Javascript,"I'm a solo frontend dev and soon I will probably have to work with a team where I will be in charge, and I am completely lost cause I have no idea how that works.",https://www.reddit.com/r/javascript/comments/330ruz/im_a_solo_frontend_dev_and_soon_i_will_probably/,79,34,ftpjko,1429357108.0,"I don't know how to be specific about my problem, so I'll just write what's in my head hoping I'll be clear enough. TL;DR at the end.


Currently my company has only two programmers: the guy who works on backend in C# and me who work on frontend in js/html/css. The apps we make are not classic websites, but rather private applications for what not, and I am in charge of making web interface which connect to APIs my colleague makes.

I am working with Angular since that is the only framework I know so far, and it's getting real tough because applications keep growing, and organizing everything in a clean manner is a real challenge. For now, my code is kinda ok, I really try to do everything modular and use full Angular potential. I create separate file for each service, directive, template, and use gulp to concat everything.
The thing is, I know what I am doing, but some day we will hire more frontend developers. I will be in charge, and I have no idea how I will organize everything. My boss is a C# guy, he doesn't know javascript and since i'm the only one who knows it, he lets me do what ever I want. But soon he will want to have a professional reusable code. 

I have a 1 year experience with Javascript/Angular, and I never worked in a frontend team - I was always the only one working on frontend, so I have no idea how working with a team works. 
Since javascript differs from other popular OOP languages, you have to take a different approach in organizing everything. I often miss classes and interfaces and strict types etc. I considered Typescript but gave up instantly when I saw what a pain in the ass would be working with Angular and other frameworks.

As much as I try, I can't make good readable code, because of all the freedom javascript gives me. I am having a hard time making my components independent because I tend to make them work with the current project, especially if anything is DOM related.  Also, my html templates are really messy as much as I try to make them clean, the same thing applies to css.

I am completely lost, I have no idea how team work looks like, the only teamwork I had so far is designing REST/WebSocket API with backend developer. Our company is new and we are starting from scratch, I am self taught in web development. Do you have some advices, articles or whatever to help me understand how real working in a team looks like?

**TL;DR**: I am self taught, currently the only js dev in the company, I never worked with a frontend team and don't know how that should look like, I have trouble with organizing code, making it readable, I'm completely lost and anxious about the future when we hire more frontend devs.

edit: Wow, what a feedback! I read all the comments and found them very helpful and encouraging! Thank you!","[{'Subreddit': 'Javascript', 'Reddit_Title': ""I'm a solo frontend dev and soon I will probably have to work with a team where I will be in charge, and I am completely lost cause I have no idea how that works."", 'CommentAuthor': 'None', 'Comment': ""You're running into tight coupling problems with your components. They all depend on each other and they all mutate the state, which causes unpredictable behavior when you change or remove things.\n\n1. Stop leaning on scope inheritance, if you are. It traps your controllers and non-isolated directives in shared-state hell. You change one thing and it breaks everything else.\n2. Stop using the root scope, if you are. Same as above.\n3. DOM manipulation happens in two places: directives and templates. If you're doing it anywhere else, stop. Don't fight the framework, it has no soul and it will win.\n4. Don't use jQuery if you can help it. This isn't necessary but it is tough for beginner (and intermediate) programmers to reconcile DOM state between angular and a 3rd party DOM manipulation library like jQuery. Use CSS animations if you can.\n6. Get good test coverage. Angular is famously easy to test, but this will still hurt. Writing tests will force you to make your code testable, which requires your code to be relatively loosely coupled. Having 100% test coverage is kind of like being 10 years sober. Expect this to be difficult, painful, and traumatic. Ultimately it will be extremely rewarding if you stick with it.\n\nWhen you get new front-end employees, teach them what you know and learn from them. They will know things that you don't, and you will know things that they don't. [The leader isn't on top, the leader is first.](http://msl-cdn.radiantforestllc.netdna-cdn.com/wp-content/uploads/2013/05/boss-vs-leader-800x800.png) Trust in their skills, listen to what they have to say, and focus on expanding the knowledge and ability of the entire team.""}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I'm a solo frontend dev and soon I will probably have to work with a team where I will be in charge, and I am completely lost cause I have no idea how that works."", 'CommentAuthor': 'fforw', 'Comment': 'Accept that you will end up doing something that feels like herding cats from now on. Take the communication challenges seriously and take your time with it. \n\nExpress best practices as verbal guidelines, do not rely on your code demonstrating them. Otherwise they will copy all your mistakes and be oblivious to its virtues.\n\nAdapt. The rules are meant to provide a framework for development interaction. Maybe some things you did were not optimal and the new team can justify better methods.\n\nYou should use a decentralized source control. Unless there\'s lots of experience with mercurial or so, stick to git since it\'s clearly the one that seems to be winning and has the largest mindshare.\n\nI\'m a bit wary of the ""Branch everything"" recommendation. Often it is easier to slowly adopt all the best git practices step by step and stick to the very basics first until everyone is secure in that.'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I'm a solo frontend dev and soon I will probably have to work with a team where I will be in charge, and I am completely lost cause I have no idea how that works."", 'CommentAuthor': 'neonskimmer', 'Comment': ""It seems to me that you are overwhelmed with the idea of leading a team. Your boss trusts you already, which is why he wants to put you in charge. \n\nHere is my 2c. Your problems are not really technical. You've managed to create something of value and learn new skills at the same time. When you start hiring, hire people with more experience than you. For example, people who can demonstrate that they've built large and maintainable projects with the technology stack you have picked.\n\nYour advantage over them is that you know the business well already. Use this - in your dealings with the team and your boss. Ask for advice. \n\nBe open minded and learn from your future coworkers. If you have a good attitude and you know the business they will respect you. Building a web application is not rocket science but doing it well requires some experience. \n\n""}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I'm a solo frontend dev and soon I will probably have to work with a team where I will be in charge, and I am completely lost cause I have no idea how that works."", 'CommentAuthor': 'mykr0pht', 'Comment': ""If you're self taught and you work mostly work solo, you might not realize how bad most codebases that people work on are. Having a readable, well designed codebase is the exception not the rule.\n\nAre you going to be involved in the hiring process? Start small. Find people who want to do a good job and like to learn. You can learn together.\n\nRead up on Kanban, Agile development, and Scrum. None of them are the one true way, but they will give you a solid base for how to communicate and collaborate as a team.""}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I'm a solo frontend dev and soon I will probably have to work with a team where I will be in charge, and I am completely lost cause I have no idea how that works."", 'CommentAuthor': 'Saturnix', 'Comment': ""Documentation. Seriously... Document whatever you do. And pretend anybody in your team to do so as well.\n\n\nNo, code doesn't documents itself. No, code comments ARE NOT a documentation. No, unit tests are not a replacement to a good documentation.\n\n\nWhatever it is that you're about to do, write a document which explains in plan English why you're doing it and how.\n\n\nInclude example usage of everyone of your components, together with their limits and capabilities.\n\n\nThe only code which is not to be document is the code which nobody else will use and you won't ever need again.\n\n\nThe whole principle of team work is that your code will be used by somebody else and will be reused, hopefully even in more than a single project.""}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I'm a solo frontend dev and soon I will probably have to work with a team where I will be in charge, and I am completely lost cause I have no idea how that works."", 'CommentAuthor': 'rorrr', 'Comment': ""It takes years to learn good programming habits. Just do it one step at a time. \n\nPick some popular coding standard and stick to it. At the beginning it will suck, but you will thank yourself later.\n\nDon't mix logic and presentation. Most modern frameworks force you to do that. Just follow the guidelines.\n\nDon't write long functions/methods. If it takes more than two screens, you need to split them into multiple ones. And name them well, logically, and don't be afraid to use long names.\n\nManaging developers is not that hard. You split the project into well specified pieces, create tickets, and then assign the tickets to the devs and yourself.\n\nYou also have to make sure they follow your coding standards. If you have time, do code reviews.""}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I'm a solo frontend dev and soon I will probably have to work with a team where I will be in charge, and I am completely lost cause I have no idea how that works."", 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I'm a solo frontend dev and soon I will probably have to work with a team where I will be in charge, and I am completely lost cause I have no idea how that works."", 'CommentAuthor': 'ha5zak', 'Comment': 'Find a good code formatter and have everyone run always run it.\n\nIf I were you, I wouldn\'t worry too much about making your modules independent. You\'d only really care about that if you suddenly need to make a change across the board, and now you have many modules to change instead of just one. BUT if you change your one module that everything uses, you still need to test everything. I tend to favor simpler, larger code lines because there\'s less bugs, your bugs are limited in their destruction, and junior developers have an easier time with everything.\n\nThere\'s a good CSS style guide out there -  I think they call it a framework, but it\'s just a set of rules. CSS will be messy. There\'s no getting around that, but you can try to create a basic one, with basic rules on how things work. Then for each page, you hook all the CSS changes for that page to just that page. Also, you should version your shared CSS, so you don\'t start breaking pages you don\'t have time to test. They can still be using the old version. And put everything in the file in alphabetical order - can\'t be perfect, but you can try.\n\nWhy is your html really messy? I mean, indent properly, put things in roughly the order they\'ll be displayed on the screen. What\'s making it messier than that? Personally, I use mustache, which allows you to create snippets and include them in each other, so it\'s cleaner. I have to say that I don\'t go overboard with it though.\n\nAlso, consider that you\'re about to start learning a lot from your new hire. You can figure things out together. I would advise, however, to go back over your own code and realize what ""rules"" you\'ve been following that you don\'t even think about. Write them out. Then during weekly or daily code reviews, talk about what you don\'t like and see what new rules your team would like to create. It\'s more important that everyone\'s code looks the same than the style being perfect, so you may need to let something things go if you\'re the only one with the preference.'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I'm a solo frontend dev and soon I will probably have to work with a team where I will be in charge, and I am completely lost cause I have no idea how that works."", 'CommentAuthor': 'Koorisan', 'Comment': 'All of the books and guides in the world won\'t help you. Each team is different.\n\nThe most important thing is talking and listening. Your boss wont hire idiots (and if he does he needs to know as soon as you know :-) ) so you need to communicate with them and find a way to make stuff work. Keep some basic standards, discuss what each member of the team is about to do before you set to work and it will be fine.\n\nThe most important thing of beeing leader of small team is in its name. You need to ""lead"". This does not mean you need to decide on everything. It does not mean you heave to drag your people behind you. It means that you have to push your people in the right direction and let them do their job in good environment.'}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I'm a solo frontend dev and soon I will probably have to work with a team where I will be in charge, and I am completely lost cause I have no idea how that works."", 'CommentAuthor': 'MrBester', 'Comment': ""I don't want to be a wet blanket, but due to your lack of team experience there's no guarantee you'll be the leader just because you have been at the company longer and have more domain knowledge. More likely is someone new with team lead experience who will rely heavily on your knowledge (until they are up to speed) in order to impart that to the rest of the team. From them you can pick up how team leadership works and, if the lead is good, they hand you the reins on occasion in order that you can lead. They can then help you to do this without it seeming that they are taking back control.\n\nGood team leaders want anybody in the team to be able to lead if necessary, so it helps them (and your career progression) if you can do it. But you can't just jump in a lead role, Grasshopper. You're assuming responsibility for everyone's output as well as steering them to be able to do the same.\n\nA lot of replies are focused on coding practices (use source control, modularise, etc.) and few are about the people involved. This is the wrong way round.""}, {'Subreddit': 'Javascript', 'Reddit_Title': ""I'm a solo frontend dev and soon I will probably have to work with a team where I will be in charge, and I am completely lost cause I have no idea how that works."", 'CommentAuthor': 'frambot', 'Comment': 'I **highly** recommend the book *Peopleware*. It\'s an oldie but a goodie. The core principle of the book is ""The problems that organizations/projects have are not technical but sociological"". The technology is hardly ever what kills a project, it\'s people. Your local library should have the book unless you\'re in SF, in which case it\'s not there because I have it :P'}]"
Javascript,Frontend framework hell - I am getting lost,https://www.reddit.com/r/javascript/comments/30mvzw/frontend_framework_hell_i_am_getting_lost/,220,150,capitanbucanero,1427576791.0,"#Frontend framework hell
I miss the old days where I could just start with one HTML file, reference single jQuery file and start working on new app.

Now, there are so many different tools/frameworks/packages, that I don't even know where to start when I finally get to some personal project. I often have an idea for an app which I would like to create and when I finally find a time, I get stuck on environment setup. There's just so much to learn and prepare, before you get to the first line of your own code. 

E.g. MEAN stack. Seems like platform that gives me a nice package so I can quickly start putting my ideas together. But reality? ""Before you start, make sure you have node, npm, bower, mongo, grunt/gulp installed."". What? Ok. I install this and then I get to ""run npm install"". So I do that and I get to another annoyance.. I am just sitting there and watching terminal logging all the stuff that is being installed for three minutes. I just want few libs and code... but instead I end up with thousands of files that I don't even know. How do I deploy this? In old days, I was just able to copy the files to web server and that's it. Now? I have no idea.

Othere ""bootstrapped"" solutions are often similar. You get to clone git repo, run npm install, get million files downloaded and then you can start developing in one little corner of whole directory structure. Before you are done with your app, there are 5 updates to this bootstrapped template..

Also..
""npm is for package""
""bower is for packages""

so which I need when I want to run Angular? Bower? Then why it asks me for type of exports my app provides? My app doesn't provide any exports. Then.. how do I deploy this? Do I just copy the whole bower_components folder, or will the web server do that for me? So much stuff going on.... before I learn how bower+angular works, there are already five new frameworks doing similar things and bower isn't cool anymore. 

How do you keep up with all of this? What do I need to improve to be able to keep up? 

**edit**: Wow.. didn't expect so many responses. Thanks a lot for all your comments and tips! I am really glad I am not the only one feeling this.

**edit2**: I tried to somehow summarize the responses I get (at least as I understood them), and this is the result right now (sorted by occurrence):

* ------ start simple and add additional tools/frameworks when you see a value in them
* ----- focus on language core instead of framework
* ---- learn new tools in isolation (one by one)
* ---- ignore trends, focus on what you know (and eventually learn more)
* --- use vanilla JS without tools/frameworks
* -- learn new technologies as they become relevant to your goals
* - ""draw the pizza before you forget"" (aka ""paper first"")
* - learn design patterns (JS Patterns)
* - learn Angular and simplify toolkit
* - invest into generic skills like testable code / unit testing


Thanks again for the replies. It definitely helps and I can already see what I can do to improve my situation :)","[{'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend framework hell - I am getting lost', 'CommentAuthor': '2468ben', 'Comment': 'It\'s almost impossible to keep up and I do it for work full-time; it\'s a huge pain.\n\n""Life is pain, anyone who says different is trying to sell you something"" -The Princess Bride\n\nThere are a lot of amazing minds pushing Javascript to do almost everything you ever wanted to do, and that\'s great. But it also means that all of the tools become more complicated to handle all the possibilities. And the complexity\'s growing because a lot of us are more interested in the puzzles behind *how* to make things than *what* they\'re making.\n\nSo you\'re gonna be surrounded by websites, frameworks and arguments over which *how* is better, and things are changing so often that any practical tutorials on making something grow old in a month or two.\n\nIf you care most about what you\'re making and don\'t care how, then don\'t even touch the tools yet. It\'s like trying to learn to make pizza that sounds tasty, and having to spend 6 weeks deciding which is the best brick oven to build. After 6 weeks you won\'t be hungry for that pizza anymore. Or you\'ll spend another 6 weeks researching crust flour.\n\nSkip the cooking part, **draw the pizza before you forget**.\n\nFor your app ideas, sketch the hell out of them, write out how people would use it even if it\'s just doodles and sentences. Ask people for feedback on your drawings and see how far you can get that way, and *then*, only when you know you documented all that awesome initial inspiration, then pick any of the frameworks and start hacking. The annoying overwhelmingness of the tools will still be there, but it\'ll be a lot easier because you don\'t need to worry ""will I need this feature or that library"".\n\nIgnore the geniuses, ignore all the excitingly debated shit in the other folders (for now), and just try to focus on the way you\'re used to, because you\'re doing this for fun and you can always refactor a good idea.  '}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend framework hell - I am getting lost', 'CommentAuthor': 'antoninj', 'Comment': 'Urgh, yeah. I actually failed a code test because of it. The amount of boilerplate ""required"" today is ridiculous. But wait! It\'s NOT required!\n\nThe tools you mention and the complexity there was a natural progression to solve long-term production-level problems. Let\'s start with an example, let\'s say you want to build an Angular app:\n\n1. you can still work old-school and run off your `index.html`, download Angular and reference it. There you go, you\'re good to go. This is self-packaged, you can ""deploy"" it via FTP, you\'re good to go.\n2. but wait, let\'s say you want to update Angular. You *can* go through the pain of downloading the repo, copying the file, etc. or you can install bower. Bower allows you to download a version of Angular you want to use with a single command. \n3. now let\'s say that you want to use a CSS pre-processor to help you manage your CSS better. Let\'s say, SASS. Now, you have sass and you can use some sass compiler. But you also want to start minifying your JS files for performance. And here is where Gulp comes in. All of a sudden, you can spend 30 minutes setting up a Gulp file which will compile your css, minify your JS, AND instead of copying the Angular file, you can have Gulp handle that too.\n4. Phew, almost there. Let\'s say you want to have a dynamic back-end but want to run Node. Node is JS on the server-side, basically. NPM is the packager for that. So, it may seem confusing to have ""bower"" and ""npm"", but they\'re really separate things. NPM will download Node packages (like a driver for MySQL) while Bower will download front-end packages (like AngularJS and/or Bootstrap). Strangely, some packages exist on both.\n5. Lastly, you are starting to have this complicated process and it\'s starting to get weird FTPing everything. I mean, `node_modules` has SOO many files and unlike with bower packages, you can\'t just ""minify"" them or bundle them. So instead, you start to use something like ShipIt which will use rsync to copy a build of your app (minify, process, etc. using Gulp) and then run some logic on the server to make sure your app works correctly.\n\nAnd there you have it. You can start as simple as you want it. I\'d say that the best analogy for all of this is carpentry. If you\'re just wanting to put some pieces of wood together, you get two pieces of wood, nails, and a hammer. But at some point, you\'ll want to engrave patterns into the wood to make it nice and all of a sudden you need 5 kinds of saws. Then you\'ll want to make the furniture so that it can be taken apart. Two piece of wood become six or seven all of a sudden.  But now you can move your furniture easily, fix broken parts, etc.\n\nAnyways, just my thoughts :)\n'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend framework hell - I am getting lost', 'CommentAuthor': 'dotnil', 'Comment': 'I agree with op 100 percent. But as a front end programmer for years who have been contributing this framework hell with yet another framework and yet another tool on the way, I want explain some.\n\nFirstly, frameworks and tools are entirely two different categories. So does the category ""libraries"". Libraries aren\'t that opinionated and they don\'t sit in the way by commanding you the way you roll. jQuery is a library. \n\nBut projects like React, Meteor, and Angular, they are frameworks. One typical point of them is they draw lots of lines. And it\'s very unlikely that someone will be using both in their web pages.\n\nTools on the other hand is much more optional. Grunt and Gulp, or even the ancient one, Make, are all task automatons. Mostly they are ""required"" because the syntax some projects were written in is not widely supported by modern browsers yet. There\'s a pre-compilation required. \n\nFor the rest of the cases, it just because it seems more professional if the front end codes are all concatenated and minified.\n\nSo to sum it up, here is the tl;dr. Most of the times tools aren\'t necessary, frameworks are mutually exclusive and they can be opinionated, libraries are you friends. \n\nOh I forgot to mention bower and npm. There are ways to ditch bower and use npm as the one true way to manage packages. We won\'t be struggling for long. '}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend framework hell - I am getting lost', 'CommentAuthor': 'Combinatorilliance', 'Comment': ""Honestly, the only thing that you can do is learn JavaScript well.\n\nI've encountered the same problem you did, I got sucked into tool/framework hell. I decided to simply not use anything, and built everything myself. This taught me why one framework is better than the other, as well as how they work. You really get to understand the problems these frameworks are trying to solve, which makes it really easy to judge which one is useful, and which one isn't.\n\nThis very primitive approach has one huge benefit, I started realising 90% of the tools are completely useless unless you are in a company (and even then, most projects don't require a 150 lines grunt script along with bower, git, node, npm and the mean stack). \n\nNowadays, all tools I use are React, because of its conceptual simplicity, Sublime Text with barely any plugins, and sometimes, I use git.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend framework hell - I am getting lost', 'CommentAuthor': 'None', 'Comment': '[deleted]'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend framework hell - I am getting lost', 'CommentAuthor': 'None', 'Comment': ""> How do you keep up with all of this?\n\nYou don't. Not unless you're some kind of contractor or freelancer who uses their downtime to keep on top of these things.\n\nWhat you need to do is have real projects and goals, and then start using new technologies one by one as and when they help you solve a specific problem. You'll be more motivated to learn about each one and you won't be as frustrated when new technologies emerge: if you didn't invest in a technology just because it was the 'hot thing' (e.g. Angular last year), you won't be upset when you realize the world has moved onto better things (Angular 2.0).\n\nIn any case, as I've said [elsewhere](http://www.breck-mckye.com/blog/2014/12/the-state-of-javascript-in-2015/), the JavaScript ecosystem is tremendously fragmented and unstable, and it's probably best staying away from any frameworks until things settle down a tad.\n\nIf you want to progress your skills and improve your CV, why don't you get to grips with something like Jasmine instead? Knowing how to write testable JavaScript is a skill that will really pay off in the long term, whatever ephemeral technologies are used to acrually define and run your tests. And to be honest, **as someone who interviews and recruits front end developers, I would far rather hire a jQuery developer who writes unit tests religiously than an Angular developer who tests nothing**.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend framework hell - I am getting lost', 'CommentAuthor': 'CodeShaman', 'Comment': ""JavaScript project management is completely insane and Yeoman is at the tip of the pyramid. I've worked on countless web projects and never needed anything other than webstorm, npm, and dokku. One thing to keep everything organized, another to transcompile and test, another thing to deploy.\n\nUnless you're deploying to a node cluster, if you need frameworks for your automation frameworks and package manager plugins for your package managers then you need to turn the level of abstraction down a few notches and re-evaluate your workflow because full stack front-end and back-end deployment can still be managed with `scp -rp && touch`. It's JavaScript for fuck sake, suck it up and spend some change on WebStorm for the file watchers if Jade and SASS mean the difference between life and death. Enterprise IBM/Oracle ecosystem deployment isn't even as crazy as JavaScript has become, it's all just a mountain out of a molehill.\n\nI'm going to laugh the day when everyone looks back on this nonsense and talks about how annoying and unnecessary it all was.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend framework hell - I am getting lost', 'CommentAuthor': 'TheNiXXeD', 'Comment': ""I think you're approaching this wrong. You say you miss the old days, but you can still make web pages like that. Build your ideas with what you know.\n\nIf you want to expand your knowledge, take one tech at a time. Jumping into MEAN is probably the worst thing you can do to learn those technologies, because there's just so much to learn for each one. ""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend framework hell - I am getting lost', 'CommentAuthor': 'mattdesl', 'Comment': 'What are your goals? Is it a static site, or do you need a server? Nothing is stopping you from downloading and poking around with jQuery if that\'s all your project needs.\n\n> How do you keep up with all of this? What do I need to improve to be able to keep up?\n\nHonestly; it is damn near impossible to keep up with the daily onslaught of new tools: React, Flux, Angular, EmberJS, Flow, etc.\n\nMy opinionated advice would be to avoid starting with Bower, Gulp, Grunt, and any sort of trendy ""stack"" and just try learning Node (for server), npm (for dependencies / tools), and Browserify (for frontend). Having those three tools under your belt will equip you for more advanced workflows down the road.\n\nIf your goal is to become an expert JavaScript developer, some more general advice might look like:\n\n- instead of investing your energy in a single framework, focus on the fundamentals:\n  - learn JavaScript inside and out: callbacks, scope, prototypes, closures, etc\n  - learn about npm, semantic versioning, modularization, and dependencies\n  - learn about unit testing and continuous integration\n  - learn unix/shell basics to improve your workflow and run tasks (e.g. minification)\n- learn new tools in isolation; e.g. instead of trying to learn NodeJS + Express through some fancy app framework, just start stubbing out a small server that does some console logging\n- learn new technologies as they become relevant to your goals'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend framework hell - I am getting lost', 'CommentAuthor': 'recompileorg', 'Comment': 'Unless you\'re unemployed and need a specific mention on your resume, just skip the ridiculous mess of frameworks and do-it-all libraries blighting the landscape and learn the language.\n\nThings were bad enough when it was just jQuery making a mess of things, slowing down websites and making code unreadable.  Today, we\'ve got zillions of the damn things. They\'re mostly of dubious quality, yet people seem to think that they ""must be great"" because ""lots of people"" use them.  They come in vogue, fall out of favor, see a resurgence, and fall away again.  All the while they\'re making life difficult for both developers and users.  It\'s ridiculous.\n\nNo, you\'re not forced to ""reinvent the wheel"" by skipping out on the bloated libraries and frameworks, nor are you a better developer for ""leveraging"" them.  Chances are, you\'re just making more work for yourself without even knowing it! (Under the silly assumption, of course, that it must add some unmeasured value to your project.) Stick to small special-purpose libraries that fill a clear and unambiguous need.  Your code is guaranteed to be smaller, faster, and easier to read.  Your coworkers and, most importantly, your uses will thank you.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend framework hell - I am getting lost', 'CommentAuthor': 'MtSnowden', 'Comment': 'Learn Design Patterns. There is a good book titled ""JS Patterns"". Once you understand the basics, you will be able to switch between frameworks and learn what each one is trying to do. Once you get this, you will know which one to use for your project. It\'s a case of picking the right tool for the job.\n\nThese tools are here to help you not harm. Frameworks handle all the low-level stuff for you so you aren\'t writing it again and again for every new project you start. \n\nRegarding ""before you start install node, npm, bower"" - spend some time getting this working with one project (it\'s not difficult, plenty of tutorials out there) to your preference. When you start a new project, copy your gulpfile across and install the modules with npm. Easy.'}]"
Javascript,Frontend dev is getting exhausting,https://www.reddit.com/r/javascript/comments/2tfo30/frontend_dev_is_getting_exhausting/,283,177,lvmtn,1422042096.0,"I remember when I was learning Ruby on Rails years ago. I've never had that feeling where I thought Rails would go away any time soon. Even now -- if you know Ruby on Rails, there will be jobs for you. The work and the skills that you get for one shop can be transferred to another. That feeling of consistency and reliability is something that I miss.     
      
I am at the end of an Angular project right now. I am a frontend developer who's exhausted from the churn rates of new technologies. I feel like in order to change jobs, I have to learn & master yet another framework like Ember and Backbone. And all of the hard work that I've put into learning Angular would have been for nothing. I can't even guarantee that Ember, Angular, and Backbone will even be relevant 2 years from now. Especially with the new Isomorphic mindset that is starting to catch on.     
      
I am not anti-innovation and I am glad to hear that the web dev industry is evolving to create better software, but I really do miss that sense of pride of mastering your tools. I can work hard, but I can't put my heart into it because I know it will be obsolete soon.       
         
I've already told myself that I really like building UI's and decided to become a front end engineer.     
     
So to all the javascript developers out here. What should I focus on as a skill? I'm already working on my vanilla javascript skills, but it is getting so exhausting learning new frameworks.      
     
What are some things that I can focus on that will allow me to grow my skills in for decades to come?","[{'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend dev is getting exhausting', 'CommentAuthor': 'None', 'Comment': ""Just get good at vanilla JS. Every time I see a job description that lists Angular/Backbone as anything other than bonus points, I pass.\n\nThere's always new stuff to discover with vanilla JS, and it's the one thing that will always be relevant and impressive to employers. Frameworks are fun, but remember that any place that sees them as mandatory isn't somewhere you want to work.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend dev is getting exhausting', 'CommentAuthor': 'moron4hire', 'Comment': ""The problem is that frameworks like Angular, libraries like jQuery, languages like JavaScript, platforms like Chrome, operating systems like Windows... they are just tools. They aren't the work. A carpenter isn't a hammer or saw user. A doctor isn't a scalpel user. An architect isn't an AutoCAD user. A photographer isn't a camera or Photoshop user.\n\nThe work is to fulfill goals. You have to learn what sort of goals you're good at fulfilling. I'm particularly good at making sense out of numbers. This turns out to be a wildly and widely applicable skill.\n\nAre you particularly good at figuring out how to arrange information so people can understand it more easily? That's called graphic design. Study that. Not Adobe Illustrator. Not Cocos2D. Not Objective-C.\n\nIf all you do is take inputs A and churn them through the framework du jour into outputs B as you're told to do, then you yourself are just a tool for someone else who is doing the real work, fulfilling the real goals. COBOL programmers are obsolete today not because they studied COBOL, but because that was all they studied. They let themselves become tools to the real people doing the real work and never became anything other than COBOL programmers. Some people are fine with that. I'm not.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend dev is getting exhausting', 'CommentAuthor': 'barncat2', 'Comment': ""Angular, what are you 100?  It's all about React now, grandpa\n\nEdit: while I was typing this it became all about Spooge, you've probably never heard of it""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend dev is getting exhausting', 'CommentAuthor': 'shriek', 'Comment': ""Don't master the framework, master the concept. They're transferable from one framework to another although each framework do it a little differently. But I agree, it can be a little overwhelming from the new technology that's coming to front-end. But it's a good thing. ""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend dev is getting exhausting', 'CommentAuthor': 'protonfish', 'Comment': ""I try to focus on core JavaScript basics, UI design and usability, Semantic HTML and CSS, REST web service architecture, SQL, HTTP, Git, automated testing, server configuration and support, speed of development. These things won't go out of style in the near future.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend dev is getting exhausting', 'CommentAuthor': 'tallpapab', 'Comment': ""I've been dealing with this phenomenon since 1969. It's actually one of the things I've liked about the trade. Not only are you forever learning new computer languages, libraries, operating systems, networks, etc. you're also learning so much about what the client (or your employer) does. It's fascinating. Maybe it's getting too fast now days, but then again, maybe it's even more fun.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend dev is getting exhausting', 'CommentAuthor': 'omegote', 'Comment': ""I've been into front-end development for more than 13 years now. I was there when you had to check if `document.all`existed to distinguish your browser, back when all this shit was called DHTML, back when `div` elements were also called _layers_... I've seen the evolution of front-end technologies and, honestly, the last 6 or 7 years have been **chaotic**. \n\nI honestly think that the front-end scene in general, and the JavaScript scene in particular has been saturated with hipsters that need to follow new trends every week. It's great to have evolution, but changing things for the sake of it is absurd. Are some things really that bad to ditch them, when we were using them a week ago? \n\nHey! Grunt is the devil, use gulp! Angular? The 1.x branch is dead! Use something else! Etc, etc, etc. There are so many examples out there, I'm sure you know some.\n\nI'm sorry, but I'm not going to change my entire stack every month just because some retarded hipster and his beard have decided, while hacking on his macbook on a Starbucks of San Francisco, that jQuery is bad or that we should design our CSS files using a smart-tv first design.\n\n""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend dev is getting exhausting', 'CommentAuthor': 'NoGodTryScience', 'Comment': ""If you want to keep yourself on your toes, consider a new language and a new mindset for building UIs. \n\nI saw this video, [Functional Frontend Frontier: Richard Feldman](https://www.youtube.com/watch?v=06M0jdYYSis&amp;amp;amp;amp;amp;amp;feature=youtu.be), on [r/elm](https://www.reddit.com/r/elm) and read [Blazing Fast Html](http://elm-lang.org/blog/Blazing-Fast-Html.elm), a blog article about virtual DOM concepts and performance, and it really piqued my interest and I'm hoping to dive into it more this weekend. When Elm was released 3 years ago, it had more hyped around being something more like a game engine, but the [time traveling debugger](https://www.youtube.com/watch?v=2HK4ENBPcWA) and immutability makes it pretty valuable for building and debugging front end interfaces. The syntax is similar to ML, Haskell, and F# if you know or ever decided to pick one of those languages up.\n\nThough it would be cool, I'm making no claims that something like this might catch on, but it could spark a new interest in it for you and give you new perspective and concepts to borrow from a purely functional/functional reactive language.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend dev is getting exhausting', 'CommentAuthor': 'faaace', 'Comment': ""I feel like most of the framework churn right now is due to the obsolescence of jQuery and the lack of a mature ecma6 framework. Its not unlike back in 2006-07 when jQuery was duking it out with Script.aculo.us Moo tools and YUI to see what would be the dominant framework.\n\nMy advice would be to help fix the problem. Find an open source library, learn its ins and out & work to improve it to work with ecma6 features. Even if your framework isn't the winner you will be a much better programmer in the end. In programming staying still with your programming knowledge is moving backwards. You need to be constantly learning to survive in this industry.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend dev is getting exhausting', 'CommentAuthor': 'thbb', 'Comment': ""This is the curse of the front-end programmer. I started programming professionally in the 80's on alpha-numeric terminals. Then moved on to GUIs, on a variety of completely different platforms, with widely different drawing/event/window management paradigms: MacOS, Cedar, display Postscript, X, X/Motif, Interviews, QT, Views, MacOSX, Win32... We had to get learned in all of them, many of those systems got hyped, the best ones were not the ones that got mainstream. To make it funnier, all those technologies are now pretty obsolete.\n\nAll in all you should consider yourself lucky that at least the low level layers are quite uniform, and that by now, there is widespread competence in how to design a toolkit.\n\nAfter a few years, you'll start to notice that there are not that many sound principles that govern an end-user application. So your experience and skillset is not obsolete, quite the contrary. Picking-up a new framework should become easier, much like learning a new language is easier when you master more than a few already. MVC is what it is and has always been. Prototyping with easy access to representative users is the most important to avoid wasting time developing needless features. \n\nSo, congratulations, you've grown up and have gotten to the next level of professionalism: keep constantly updating your skills, and don't jump too early on the latest overhyped framework.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Frontend dev is getting exhausting', 'CommentAuthor': 'hectavex', 'Comment': ""Skills for decades? Consider learning backend dev.\n\nAnyhow, catch up on [Shadow DOM](http://www.html5rocks.com/en/tutorials/webcomponents/shadowdom/) to see what all these frameworks are *trying* to do prematurely. Then go learn jQuery, jQuery, and some more jQuery. If you're in a hurry to jump ship, check out [React](http://facebook.github.io/react/) or [Dust](http://linkedin.github.io/dustjs/).\n\nFrameworks will keep you working within the constraints of another developer (or team) mentality. We know this because there are several frameworks attempting to do the same thing, with different opinions on how to do it, and teams dedicated to a certain one. Which do I use? None of them.""}]"
Javascript,Is a shared frontend asset library good or a waste of time in a corporate environment?,https://www.reddit.com/r/javascript/comments/1u8u3y/is_a_shared_frontend_asset_library_good_or_a/,9,11,chaddjohnson,1388687027.0,"I work for a large, corporate company -- the name of which you would know very well. They have a number of existing and new web projects, and they would like to ""standardize"" several frontend/UI aspects across software projects:

* Look and feel (HTML and CSS)
* General JavaScript functionality
* Data validation rules

Thus, they are creating a shared frontend asset library to provide this ""standard"" functionality. They are doing this to reduce inconsistencies across projects.

In theory, this sounds great; however, in practice, this feels like a potential nightmare. I have the following concerns:

* It could require considerable time, effort, and pro-activity to coordinate across teams and ensure all teams keep up with changes.
* We do version the library, but if something ever changes and teams want updates, they will have to spend time modifying their software to adopt all changes up to the new version.
* It seems very difficult to develop UI components that can operate with multiple JavaScript frameworks (Backbone, Angular, Ember, Batman).
* They are now trying to enforce that data APIs conform to their data validation specifications (field names, field lengths, field formats). So, each project with their separate databases should maintain common specifications for their data fields.

How do you guys feel, in general, about an effort like this? Is it useful? A waste of time?","[{'Subreddit': 'Javascript', 'Reddit_Title': 'Is a shared frontend asset library good or a waste of time in a corporate environment?', 'CommentAuthor': 'floydophone', 'Comment': ""Absolutely. This is how Facebook does things and it's great from a product dev speed perspective (reuse your code) quality perspective (ie same grid units everywhere) and performance (download one stylesheet and cache it). We've made this work across both our php and our react stack n""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Is a shared frontend asset library good or a waste of time in a corporate environment?', 'CommentAuthor': 'kenman', 'Comment': ""Do I work with you? I'm in a very similar scenario, though we actually don't have a bona-fide library created [yet]. However, I share many of your apprehensions.\n\nI think what you will need for it to be successful is either a really devoted (not to mention experienced and available) dev, or a team, to curate the library. In a large enough org, you'd have a specialized team of a devs to develop, test, document, update, publish/deploy, etc. the library, and all bug reports and requests for new features would be routed through that project's management. This group would have ample latitude to make technological decisions (supported browsers, etc.) and would not have to take marching orders directly from other teams.\n\nBut, this probably isn't the case for you (and certainly isn't for me); it's probably just going to be a few (1-2) devs on a single team who are responsible for it. This is the part I fear; you're going to have to be the one to evangelize the project (make sure other teams are using it and using it properly), not to mention all the other things listed above that go with managing an internal project (documentation, tests, etc.). Even though it wasn't _your idea_, it'll be _your ass_ if the project isn't successful.\n\nWhen a widget breaks for team A, you're going to have to drop everything you're doing and fix it. As the importance of the library grows, you're going to have multiple groups exerting (or attempting to exert) influence over your schedule, trying to get you to implement their new features/fix their bugs before you do the same for other teams. And, your team is basically going to have to write you (and whoever else is working on it) off as a member of their team for the most part, since your time will now be tied up in this project.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Is a shared frontend asset library good or a waste of time in a corporate environment?', 'CommentAuthor': 'Sunwukung', 'Comment': ""There are lots of difficulties in this kind of project. It's expensive to do right so there has to be buy-in to divert appropriate levels of resources. Making it completely framework agnostic is probably not a viable objective without extensive build tooling (i.e swapping in ng tags...). The hardest part IME is getting design teams to accept the limitations that this kind of project imposes.\r\rI think it's definitely worthwhile, but it needs commitment at several levels.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Is a shared frontend asset library good or a waste of time in a corporate environment?', 'CommentAuthor': 'Capaj', 'Comment': ""I developed quite a few enterprise apps with Angular yeah- If all your projects would be in Angular, then it most certainly makes sense to try and make a library of directives you need often. Angular is so good in encapsulating the functionality of any widget, no matter how complicated it might be. That is one of Angular's biggest strengths.\n\nVERY important for you would be to at least have the same module system. Nobody is gonna use your standart components, when they will have problems even loading it.\nSo stick to one-browserify is awesome, require.js if you are old school.\n\nAlso I would recommend you to use grunt.js for building the standart library. Grunt.js is the best JS build tool. Nothing else comes even close.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Is a shared frontend asset library good or a waste of time in a corporate environment?', 'CommentAuthor': 'chaddjohnson', 'Comment': 'It seems browserify allows use of require() without a callback function. i.e., you don\'t have to do this:\n\nrequire([\'jquery\', \'underscore\'], function($, _) { ... });\n\nSeems you can just do this, instead (am I wrong?):\n\n$ = require(\'jquery\');\n_ = require(\'underscore\');\n\nHow the heck does that work without an asynchronous callback for when these dependencies are loaded? Does it require that the project always be ""built"" (browserify main.js -o bundle.js), even in development mode?'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Is a shared frontend asset library good or a waste of time in a corporate environment?', 'CommentAuthor': 'None', 'Comment': ""Dude this is really bothering me, it is 'standard' with a 'd' not 'standart' with a 't'. ""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Is a shared frontend asset library good or a waste of time in a corporate environment?', 'CommentAuthor': 'chaddjohnson', 'Comment': 'I agree. I think Angular seems like the all-around best choice.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Is a shared frontend asset library good or a waste of time in a corporate environment?', 'CommentAuthor': 'Capaj', 'Comment': ""Yes, with browserify you always have build step. We use grunt-watch, so if your workstation is quick enough, you should not even notice it. Besides, using grunt-watch with it's livereload feature is so addicting, that I would not want to develop without it.\nBrowserify also builds sourcemap, so that you can debug absolutely the same as if you were running from the source itself.\n\nAnd asynchronous loading of JS files is just a pain in the arse, what is it actually good for? Nothing. Just to causes headaches and pains.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Is a shared frontend asset library good or a waste of time in a corporate environment?', 'CommentAuthor': 'None', 'Comment': ""Seems like you'd need another piece of software like [beefy](http://didact.us/beefy/) or [grunt-browserify](https://github.com/jmreidy/grunt-browserify) compiling stufff as you go along.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Is a shared frontend asset library good or a waste of time in a corporate environment?', 'CommentAuthor': 'dillonkrug', 'Comment': ""http://www.reddit.com/r/javascript/comments/1tcqgl/browserify_and_synchronous_require_for_development/\n\nI made this.  It could definitely be improved, but I've been using it for a while now and haven't had any problems.\n\nYou'd never use it for production, but for development it's great, and then you just build with browserify when you're ready to deploy.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'Is a shared frontend asset library good or a waste of time in a corporate environment?', 'CommentAuthor': 'pandavr', 'Comment': ""It's the standart way to say standard... ;)""}]"
Javascript,RactiveJS - the theguardian.com UI library that transforms templates into blueprints for highly interactive apps,https://ractivejs.zeef.com/harris.brakmic,24,16,henk53,1430087331.0,,"[{'Subreddit': 'Javascript', 'Reddit_Title': 'RactiveJS - the theguardian.com UI library that transforms templates into blueprints for highly interactive apps', 'CommentAuthor': 'Casual_0bserver', 'Comment': ""Use this all the time. Doesn't lock you into a framework and has some awesome functionality.""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'RactiveJS - the theguardian.com UI library that transforms templates into blueprints for highly interactive apps', 'CommentAuthor': '_somanyguns', 'Comment': 'Yes! Ractive is awesome, I recommend it.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'RactiveJS - the theguardian.com UI library that transforms templates into blueprints for highly interactive apps', 'CommentAuthor': 'bloodguard', 'Comment': ""I've used this on a couple of projects so far and it's pretty amazing.    Trying to upgrade to v0.7.3 mysteriously broke things, though.\n\nWhen I have the billable leisure time (stop laughing) I'll try it again. ""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'RactiveJS - the theguardian.com UI library that transforms templates into blueprints for highly interactive apps', 'CommentAuthor': 'brakmic', 'Comment': 'Hi,\n\nI hope the links from the above list will be of some help to RactiveJS users.\n\nRegarding the comparison between React and Ractive:\n\nThe Ractive \'DOM processing\' is done differently. While React continuously (re)creates many ""virtual DOMs"" (for each element, actually) RactiveJS maintains one ""Parallel DOM"".\n\nYou can listen to Rich Harris\' explanation in this video (approx. at 07:17)\n\nhttp://jqueryuk.com/2015/videos.php?s=dismantling-the-barriers-to-entry\n\nBtw, there\'s also a brand new RactiveJS Community. Join us :) :)\n\nhttps://plus.google.com/u/0/communities/112487390071209529772\n\nBest regards,\nHarris'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'RactiveJS - the theguardian.com UI library that transforms templates into blueprints for highly interactive apps', 'CommentAuthor': 'ballscockr', 'Comment': 'Can confirm, it used to have a messy codebase but not it is all cleaned up and looking good. Great features, easy to learn, easy to use, and familiar mustache/handlebars templates (not jsx )'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'RactiveJS - the theguardian.com UI library that transforms templates into blueprints for highly interactive apps', 'CommentAuthor': 'F21Global', 'Comment': 'You probably meant to link to this: http://www.ractivejs.org/\n\nGithub repo: https://github.com/ractivejs/ractive'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'RactiveJS - the theguardian.com UI library that transforms templates into blueprints for highly interactive apps', 'CommentAuthor': 'None', 'Comment': ""60kb down the wire, minified and gzipped? That seems just far, far too large - particularly on mobile.\n\nI'm just not sure what I get with that payload that I don't get for 45kb less with Knockout.\n""}, {'Subreddit': 'Javascript', 'Reddit_Title': 'RactiveJS - the theguardian.com UI library that transforms templates into blueprints for highly interactive apps', 'CommentAuthor': 'alessioalex', 'Comment': 'I would really love for it to have some Angular-like directives like ""ng-repeat"" and others so that is increases productivity and you can type less.'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'RactiveJS - the theguardian.com UI library that transforms templates into blueprints for highly interactive apps', 'CommentAuthor': 'None', 'Comment': 'Hmm it looks like react a bit. Is it based on the same principles ?'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'RactiveJS - the theguardian.com UI library that transforms templates into blueprints for highly interactive apps', 'CommentAuthor': 'brakmic', 'Comment': 'RactiveJS uses Mustaches to achieve the same results like ng-* directives in AngularJS.\n\nhttp://docs.ractivejs.org/latest/mustaches#extensions\n\nRegards, \nHarris'}, {'Subreddit': 'Javascript', 'Reddit_Title': 'RactiveJS - the theguardian.com UI library that transforms templates into blueprints for highly interactive apps', 'CommentAuthor': 'Casual_0bserver', 'Comment': ""I'd say they are very similar, but ractive is less frameworky. I mainly use it for templates and two-way binding, but there is a lot more to it.""}]"
